<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 7.1 (Python 3.12.5 on win32)" generated="2024-10-10T16:02:29.195754" rpa="false" schemaversion="5">
<suite id="s1" name="test UserManagement" source="C:\Users\admin\Documents\Automation\ANDROID\android_eProc1000s\testSuite\Tim OP\test_UserManagement.robot">
<test id="s1-t1" name="Test Create User Management" line="10">
<kw name="Open app Dev Project" owner="openApp" type="SETUP">
<kw name="Open Application" owner="AppiumLibrary">
<arg>http://127.0.0.1:4723</arg>
<arg>platformName=${platformName}</arg>
<arg>deviceName=${udid}</arg>
<arg>appPackage=${appPackage}</arg>
<arg>appActivity=${appActivity}</arg>
<arg>automationName=UiAutomator2</arg>
<doc>Opens a new application to given Appium server.
Capabilities of appium server, Android and iOS,
Please check https://appium.io/docs/en/2.1/cli/args/
| *Option*            | *Man.* | *Description*     |
| remote_url          | Yes    | Appium server url |
| alias               | no     | alias             |
| strict_ssl          | No     | allows you to send commands to an invalid certificate host like a self-signed one. |</doc>
<status status="PASS" start="2024-10-10T16:02:29.676601" elapsed="9.284262"/>
</kw>
<status status="PASS" start="2024-10-10T16:02:29.675604" elapsed="9.286253"/>
</kw>
<kw name="User create User Management" owner="userManagement">
<kw name="Given user go to User Management page" owner="userManagementPage">
<kw name="User Login" owner="loginPage">
<kw name="Given user input no handphone" owner="loginPage">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:02:41.400038" level="INFO">xpath criteria: //android.widget.TextView[@text="Login"]</msg>
<arg>${titleLogin}</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:02:38.963890" elapsed="2.436148"/>
</kw>
<kw name="Input Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:02:41.403062" level="INFO">Typing text '088210068283' into text field 'xpath=//android.widget.EditText[1]'</msg>
<msg time="2024-10-10T16:02:41.534602" level="INFO">xpath criteria: //android.widget.EditText[1]</msg>
<arg>${inputNoHandphone}</arg>
<arg>${noHandphone}</arg>
<doc>Types the given `text` into text field identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:02:41.401036" elapsed="0.133566"/>
</kw>
<arg>${akunOP}</arg>
<status status="PASS" start="2024-10-10T16:02:38.963890" elapsed="2.570712"/>
</kw>
<kw name="When user input password" owner="loginPage">
<kw name="Input Password" owner="AppiumLibrary">
<msg time="2024-10-10T16:02:41.538589" level="INFO">Typing password into text field 'xpath=//android.widget.EditText[2]'</msg>
<msg time="2024-10-10T16:02:42.505543" level="INFO">xpath criteria: //android.widget.EditText[2]</msg>
<arg>${inputPassword}</arg>
<arg>${password}</arg>
<doc>Types the given password into text field identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:02:41.535600" elapsed="0.969943"/>
</kw>
<arg>${passwordProject}</arg>
<status status="PASS" start="2024-10-10T16:02:41.535600" elapsed="0.969943"/>
</kw>
<kw name="Then click button masuk" owner="loginPage">
<kw name="Click Element" owner="AppiumLibrary">
<msg time="2024-10-10T16:02:42.509531" level="INFO">Clicking element 'xpath=//android.view.View/android.view.View[2]'.</msg>
<msg time="2024-10-10T16:02:42.865970" level="INFO">xpath criteria: //android.view.View/android.view.View[2]</msg>
<arg>${buttonMasuk}</arg>
<doc>Click element identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:02:42.506542" elapsed="0.359428"/>
</kw>
<status status="PASS" start="2024-10-10T16:02:42.506542" elapsed="0.359428"/>
</kw>
<kw name="And home Project" owner="loginPage">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<arg>accessibility_id=Icon Projects</arg>
<arg>timeout=10s</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:02:42.866968" elapsed="2.886861"/>
</kw>
<kw name="Element Should Be Visible" owner="AppiumLibrary">
<arg>accessibility_id=Icon Projects</arg>
<doc>Verifies that element identified with locator is visible.</doc>
<status status="PASS" start="2024-10-10T16:02:45.753829" elapsed="0.147307"/>
</kw>
<kw name="Element Should Be Visible" owner="AppiumLibrary">
<arg>accessibility_id=Notification</arg>
<doc>Verifies that element identified with locator is visible.</doc>
<status status="PASS" start="2024-10-10T16:02:45.901136" elapsed="0.124096"/>
</kw>
<kw name="Element Should Be Visible" owner="AppiumLibrary">
<arg>accessibility_id=Icon Search</arg>
<doc>Verifies that element identified with locator is visible.</doc>
<status status="PASS" start="2024-10-10T16:02:46.025232" elapsed="0.119694"/>
</kw>
<status status="PASS" start="2024-10-10T16:02:42.866968" elapsed="3.277958"/>
</kw>
<status status="PASS" start="2024-10-10T16:02:38.962856" elapsed="7.182070"/>
</kw>
<kw name="Loc Parent View" owner="generalFunction">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-10-10T16:02:46.145925" level="INFO">${loc} = xpath=//android.widget.TextView[@text="User Management"]/parent::android.view.View</msg>
<var>${loc}</var>
<arg>xpath=//android.widget.TextView[@text="${text}"]/parent::android.view.View</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-10-10T16:02:46.145925" elapsed="0.000000"/>
</kw>
<return>
<value>${loc}</value>
<status status="PASS" start="2024-10-10T16:02:46.145925" elapsed="0.000000"/>
</return>
<msg time="2024-10-10T16:02:46.145925" level="INFO">${loc} = xpath=//android.widget.TextView[@text="User Management"]/parent::android.view.View</msg>
<var>${loc}</var>
<arg>User Management</arg>
<status status="PASS" start="2024-10-10T16:02:46.144926" elapsed="0.000999"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:02:46.337806" level="INFO">xpath criteria: //android.widget.TextView[@text="User Management"]/parent::android.view.View</msg>
<arg>${loc}</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:02:46.146957" elapsed="0.190849"/>
</kw>
<kw name="Click Element" owner="AppiumLibrary">
<msg time="2024-10-10T16:02:46.339833" level="INFO">Clicking element 'xpath=//android.widget.TextView[@text="User Management"]/parent::android.view.View'.</msg>
<msg time="2024-10-10T16:02:46.554192" level="INFO">xpath criteria: //android.widget.TextView[@text="User Management"]/parent::android.view.View</msg>
<arg>${loc}</arg>
<doc>Click element identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:02:46.337806" elapsed="0.216386"/>
</kw>
<status status="PASS" start="2024-10-10T16:02:38.962856" elapsed="7.591336"/>
</kw>
<kw name="And Get Detail Text User Management" owner="userManagementPage">
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-10-10T16:02:46.555224" level="INFO">${random} = 3</msg>
<var>${random}</var>
<arg>random.randint(1, 3)</arg>
<arg>modules=random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-10-10T16:02:46.555224" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:02:46.557217" level="INFO">${indexUser} = 3</msg>
<arg>${indexUser}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:02:46.556221" elapsed="0.000996"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-10-10T16:02:46.557217" level="INFO">Random : 3</msg>
<arg>Random : ${random}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-10-10T16:02:46.557217" elapsed="0.000000"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-10-10T16:02:46.558214" level="INFO">Length is 103.</msg>
<msg time="2024-10-10T16:02:46.558214" level="INFO">${len} = 103</msg>
<var>${len}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-10-10T16:02:46.558214" elapsed="0.000000"/>
</kw>
<for flavor="IN RANGE">
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:02:48.300504" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[3]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[3]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[3]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[3]/parent::android.view.View</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:02:46.561209" elapsed="1.739295"/>
</kw>
<msg time="2024-10-10T16:02:48.300504" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:02:46.560212" elapsed="1.741290"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:02:49.431980" level="INFO">Element 'xpath=(//android.view.View[@content-desc="Image"])[3]/parent::android.view.View/android.widget.TextView[1]' text is 'Damon Brakus' </msg>
<msg time="2024-10-10T16:02:49.431980" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[3]/parent::android.view.View/android.widget.TextView[1]</msg>
<msg time="2024-10-10T16:02:49.431980" level="INFO">${name} = Damon Brakus</msg>
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:02:48.301502" elapsed="1.130478"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:02:49.431980" level="INFO">${name} = Damon Brakus</msg>
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:02:49.431980" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-10-10T16:02:48.301502" elapsed="1.130478"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:49.432979" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:02:49.431980" elapsed="0.000999"/>
</branch>
<status status="PASS" start="2024-10-10T16:02:48.301502" elapsed="1.131477"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:02:46.559215" elapsed="2.873764"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:02:49.433976" level="INFO">${nameUserManagement} = Damon Brakus</msg>
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:02:49.432979" elapsed="0.000997"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-10-10T16:02:49.434974" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-10-10T16:02:46.559215" elapsed="2.875759"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:02:49.435935" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:49.435935" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:49.435935" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:02:49.434974" elapsed="0.001963"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:02:49.436937" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:02:49.436937" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:02:49.436937" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:49.436937" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:49.437933" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:49.437933" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:49.437933" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:02:49.436937" elapsed="0.000996"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:02:49.437933" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:02:49.437933" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:02:49.438930" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:49.438930" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:49.438930" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:02:49.437933" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:02:49.438930" elapsed="0.000997"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:02:49.438930" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:02:49.439927" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:49.439927" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:49.439927" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:02:49.439927" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:02:49.439927" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:02:49.439927" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:02:46.559215" elapsed="2.881709"/>
</if>
<var name="${counter}">1</var>
<status status="PASS" start="2024-10-10T16:02:46.559215" elapsed="2.881709"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:02:49.440924" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:49.441922" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:49.441922" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:02:49.440924" elapsed="0.000998"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:02:49.602108" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[3]/parent::android.view.View</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:02:49.442919" elapsed="0.159189"/>
</kw>
<msg time="2024-10-10T16:02:49.602108" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:02:49.442919" elapsed="0.159189"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:02:49.770137" level="INFO">Element 'xpath=(//android.view.View[@content-desc="Image"])[3]/parent::android.view.View/android.widget.TextView[2]' text is 'Consultant' </msg>
<msg time="2024-10-10T16:02:49.770137" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[3]/parent::android.view.View/android.widget.TextView[2]</msg>
<msg time="2024-10-10T16:02:49.770137" level="INFO">${name} = Consultant</msg>
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:02:49.603108" elapsed="0.167029"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:02:49.771135" level="INFO">${name} = Consultant</msg>
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:02:49.771135" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-10-10T16:02:49.603108" elapsed="0.168027"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:49.771135" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:02:49.771135" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:02:49.602108" elapsed="0.169027"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:02:49.441922" elapsed="0.329213"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:02:49.773131" level="INFO">${jabatan} = Consultant</msg>
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:02:49.772132" elapsed="0.000999"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-10-10T16:02:49.773131" elapsed="0.000996"/>
</kw>
<status status="PASS" start="2024-10-10T16:02:49.441922" elapsed="0.332205"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:02:49.775163" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:02:49.774127" elapsed="0.001036"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:02:49.775163" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:49.776160" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:49.776160" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:49.776160" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:49.776160" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:02:49.775163" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:02:49.776160" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:02:49.776160" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:02:49.777158" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:49.777158" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:49.777158" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:02:49.776160" elapsed="0.000998"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:02:49.778152" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:02:49.777158" elapsed="0.000994"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:02:49.778152" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:49.778152" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:49.778152" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:02:49.778152" elapsed="0.000999"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:02:49.779151" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:02:49.779151" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:02:49.440924" elapsed="0.338227"/>
</if>
<var name="${counter}">2</var>
<status status="PASS" start="2024-10-10T16:02:49.440924" elapsed="0.338227"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:02:49.780111" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:49.780111" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:49.780111" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:02:49.779151" elapsed="0.000960"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:02:49.781146" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:49.781146" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:49.782107" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:02:49.780111" elapsed="0.001996"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:02:49.914767" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[3]/parent::android.view.View</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:02:49.783104" elapsed="0.132661"/>
</kw>
<msg time="2024-10-10T16:02:49.915765" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:02:49.783104" elapsed="0.132661"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:02:50.050432" level="INFO">Element 'xpath=(//android.view.View[@content-desc="Image"])[3]/parent::android.view.View/android.widget.TextView[3]' text is 'Nomor handphone' </msg>
<msg time="2024-10-10T16:02:50.050432" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[3]/parent::android.view.View/android.widget.TextView[3]</msg>
<msg time="2024-10-10T16:02:50.051430" level="INFO">${name} = Nomor handphone</msg>
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:02:49.916762" elapsed="0.134668"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:02:50.051430" level="INFO">${name} = Nomor handphone</msg>
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:02:50.051430" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-10-10T16:02:49.915765" elapsed="0.135665"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:50.051430" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:02:50.051430" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:02:49.915765" elapsed="0.136662"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:02:49.782107" elapsed="0.270320"/>
</kw>
<status status="PASS" start="2024-10-10T16:02:49.782107" elapsed="0.270320"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:02:50.052427" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:50.052427" elapsed="0.000999"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:50.053426" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:50.053426" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:50.053426" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:02:50.052427" elapsed="0.000999"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:02:50.054422" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:02:50.053426" elapsed="0.000996"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:02:50.054422" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:50.054422" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:50.054422" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:02:50.054422" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:02:50.055420" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:02:50.054422" elapsed="0.000998"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:02:50.055420" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:50.056419" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:50.056419" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:02:50.055420" elapsed="0.000999"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:02:50.056419" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:02:50.056419" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:02:49.779151" elapsed="0.277268"/>
</if>
<var name="${counter}">3</var>
<status status="PASS" start="2024-10-10T16:02:49.779151" elapsed="0.277268"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:02:50.057415" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:50.057415" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:50.057415" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:02:50.057415" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:02:50.058412" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:50.058412" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:50.058412" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:02:50.057415" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:02:50.059414" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:02:50.058412" elapsed="0.001002"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:02:50.178926" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[3]/parent::android.view.View</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:02:50.060406" elapsed="0.118520"/>
</kw>
<msg time="2024-10-10T16:02:50.179922" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:02:50.060406" elapsed="0.119516"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:02:50.310171" level="INFO">Element 'xpath=(//android.view.View[@content-desc="Image"])[3]/parent::android.view.View/android.widget.TextView[4]' text is '0874-5053-6867' </msg>
<msg time="2024-10-10T16:02:50.310171" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[3]/parent::android.view.View/android.widget.TextView[4]</msg>
<msg time="2024-10-10T16:02:50.311168" level="INFO">${name} = 0874-5053-6867</msg>
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:02:50.179922" elapsed="0.131246"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:02:50.311168" level="INFO">${name} = 0874-5053-6867</msg>
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:02:50.311168" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-10-10T16:02:50.179922" elapsed="0.131246"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:50.312167" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:02:50.312167" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:02:50.179922" elapsed="0.132245"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:02:50.059414" elapsed="0.252753"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:02:50.313163" level="INFO">${noTelp} = 0874-5053-6867</msg>
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:02:50.312167" elapsed="0.001993"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-10-10T16:02:50.314160" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<msg time="2024-10-10T16:02:50.316156" level="INFO">${replaceNumb} = 087450536867</msg>
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-10-10T16:02:50.314160" elapsed="0.001996"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:02:50.317153" level="INFO">${replaceNumb} = 087450536867</msg>
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:02:50.317153" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-10-10T16:02:50.059414" elapsed="0.257739"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:02:50.317153" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:02:50.317153" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:02:50.318151" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:50.318151" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:50.318151" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:02:50.317153" elapsed="0.000998"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:02:50.319148" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:02:50.318151" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:02:50.319148" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:50.319148" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:50.319148" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:02:50.319148" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:02:50.319148" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:02:50.319148" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:02:50.056419" elapsed="0.263726"/>
</if>
<var name="${counter}">4</var>
<status status="PASS" start="2024-10-10T16:02:50.056419" elapsed="0.263726"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:02:50.321143" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:50.322141" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:50.322141" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:02:50.321143" elapsed="0.000998"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:02:50.323137" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:50.323137" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:50.323137" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:02:50.322141" elapsed="0.000996"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:02:50.323137" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:02:50.323137" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:02:50.324134" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:50.324134" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:50.324134" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:50.324134" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:50.324134" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:02:50.323137" elapsed="0.001994"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:02:50.480815" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[3]/parent::android.view.View</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:02:50.326129" elapsed="0.154686"/>
</kw>
<msg time="2024-10-10T16:02:50.480815" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:02:50.325131" elapsed="0.156685"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:02:50.611010" level="INFO">Element 'xpath=(//android.view.View[@content-desc="Image"])[3]/parent::android.view.View/android.widget.TextView[5]' text is 'Email' </msg>
<msg time="2024-10-10T16:02:50.611010" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[3]/parent::android.view.View/android.widget.TextView[5]</msg>
<msg time="2024-10-10T16:02:50.611010" level="INFO">${name} = Email</msg>
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:02:50.481816" elapsed="0.129194"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:02:50.612007" level="INFO">${name} = Email</msg>
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:02:50.612007" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-10-10T16:02:50.481816" elapsed="0.130191"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:50.612969" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:02:50.612007" elapsed="0.000962"/>
</branch>
<status status="PASS" start="2024-10-10T16:02:50.481816" elapsed="0.131153"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:02:50.325131" elapsed="0.287838"/>
</kw>
<status status="PASS" start="2024-10-10T16:02:50.325131" elapsed="0.287838"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:02:50.612969" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:50.612969" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:50.614002" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:02:50.612969" elapsed="0.001033"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:02:50.614002" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:02:50.614002" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:02:50.614963" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:50.614963" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:50.614963" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:02:50.614002" elapsed="0.000961"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:02:50.614963" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:02:50.614963" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-10-10T16:02:50.321143" elapsed="0.294818"/>
</if>
<var name="${counter}">5</var>
<status status="PASS" start="2024-10-10T16:02:50.320145" elapsed="0.295816"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:02:50.616957" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:50.616957" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:50.616957" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:02:50.615961" elapsed="0.000996"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:02:50.617953" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:50.617953" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:50.617953" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:02:50.616957" elapsed="0.000996"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:02:50.618952" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:02:50.617953" elapsed="0.000999"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:02:50.618952" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:50.618952" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:50.619948" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:50.619948" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:50.619948" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:02:50.618952" elapsed="0.000996"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:02:50.620947" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:02:50.619948" elapsed="0.000999"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:02:50.748248" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[3]/parent::android.view.View</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:02:50.621944" elapsed="0.126304"/>
</kw>
<msg time="2024-10-10T16:02:50.748248" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:02:50.621944" elapsed="0.126304"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:02:50.875500" level="INFO">Element 'xpath=(//android.view.View[@content-desc="Image"])[3]/parent::android.view.View/android.widget.TextView[6]' text is 'Mossie27@gmail.com' </msg>
<msg time="2024-10-10T16:02:50.875500" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[3]/parent::android.view.View/android.widget.TextView[6]</msg>
<msg time="2024-10-10T16:02:50.876499" level="INFO">${name} = Mossie27@gmail.com</msg>
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:02:50.749242" elapsed="0.127257"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:02:50.876499" level="INFO">${name} = Mossie27@gmail.com</msg>
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:02:50.876499" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-10-10T16:02:50.749242" elapsed="0.127257"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:50.876499" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:02:50.876499" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:02:50.749242" elapsed="0.128254"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:02:50.621944" elapsed="0.255552"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:02:50.878492" level="INFO">${email} = Mossie27@gmail.com</msg>
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:02:50.877496" elapsed="0.000996"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-10-10T16:02:50.878492" elapsed="0.000997"/>
</kw>
<status status="PASS" start="2024-10-10T16:02:50.620947" elapsed="0.258542"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:02:50.879489" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:02:50.879489" elapsed="0.000961"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:02:50.880450" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:50.880450" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:50.880450" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:02:50.880450" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:02:50.881448" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:02:50.880450" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-10-10T16:02:50.615961" elapsed="0.265487"/>
</if>
<var name="${counter}">6</var>
<status status="PASS" start="2024-10-10T16:02:50.615961" elapsed="0.265487"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:02:50.882482" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:50.882482" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:50.882482" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:02:50.881448" elapsed="0.001034"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:02:50.883478" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:50.883478" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:50.883478" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:02:50.882482" elapsed="0.000996"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:02:50.883478" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:02:50.883478" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:02:50.884476" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:50.884476" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:50.884476" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:50.884476" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:50.885473" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:02:50.884476" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:02:50.886449" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:02:50.885473" elapsed="0.000976"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:02:50.886449" elapsed="0.001020"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:50.887469" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:50.887469" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:02:50.886449" elapsed="0.001020"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:02:51.008276" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[3]/parent::android.view.View</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:02:50.888468" elapsed="0.119808"/>
</kw>
<msg time="2024-10-10T16:02:51.008276" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:02:50.888468" elapsed="0.119808"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:02:51.137982" level="INFO">Element 'xpath=(//android.view.View[@content-desc="Image"])[3]/parent::android.view.View/android.widget.TextView[7]' text is 'Project aktif' </msg>
<msg time="2024-10-10T16:02:51.137982" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[3]/parent::android.view.View/android.widget.TextView[7]</msg>
<msg time="2024-10-10T16:02:51.137982" level="INFO">${name} = Project aktif</msg>
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:02:51.009273" elapsed="0.128709"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:02:51.138978" level="INFO">${name} = Project aktif</msg>
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:02:51.138978" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-10-10T16:02:51.008276" elapsed="0.130702"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:51.139940" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:02:51.138978" elapsed="0.000962"/>
</branch>
<status status="PASS" start="2024-10-10T16:02:51.008276" elapsed="0.131664"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:02:50.887469" elapsed="0.252471"/>
</kw>
<status status="PASS" start="2024-10-10T16:02:50.887469" elapsed="0.252471"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:02:51.140938" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:51.140938" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:51.140938" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:02:51.139940" elapsed="0.000998"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:02:51.140938" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:02:51.140938" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:02:50.881448" elapsed="0.259490"/>
</if>
<var name="${counter}">7</var>
<status status="PASS" start="2024-10-10T16:02:50.881448" elapsed="0.259490"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:02:51.141970" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:51.141970" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:51.142969" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:02:51.141970" elapsed="0.000999"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:02:51.142969" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:51.142969" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:51.142969" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:02:51.142969" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:02:51.143965" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:02:51.142969" elapsed="0.000996"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:02:51.143965" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:51.144964" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:51.144964" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:51.144964" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:51.144964" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:02:51.143965" elapsed="0.000999"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:02:51.145960" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:02:51.144964" elapsed="0.000996"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:02:51.145960" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:51.145960" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:51.145960" elapsed="0.000997"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:02:51.145960" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:02:51.146957" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:02:51.146957" elapsed="0.000963"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:02:51.268360" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[3]/parent::android.view.View</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:02:51.149951" elapsed="0.118409"/>
</kw>
<msg time="2024-10-10T16:02:51.268360" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:02:51.148915" elapsed="0.119445"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:02:51.392602" level="INFO">Element 'xpath=(//android.view.View[@content-desc="Image"])[3]/parent::android.view.View/android.widget.TextView[8]' text is '0' </msg>
<msg time="2024-10-10T16:02:51.392602" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[3]/parent::android.view.View/android.widget.TextView[8]</msg>
<msg time="2024-10-10T16:02:51.392602" level="INFO">${name} = 0</msg>
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:02:51.269358" elapsed="0.123244"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:02:51.393598" level="INFO">${name} = 0</msg>
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:02:51.392602" elapsed="0.000996"/>
</kw>
<status status="PASS" start="2024-10-10T16:02:51.269358" elapsed="0.124240"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:51.393598" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:02:51.393598" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:02:51.268360" elapsed="0.125238"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:02:51.148915" elapsed="0.244683"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:02:51.395591" level="INFO">${projActive} = 0</msg>
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:02:51.393598" elapsed="0.001993"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-10-10T16:02:51.395591" elapsed="0.000962"/>
</kw>
<status status="PASS" start="2024-10-10T16:02:51.147920" elapsed="0.248633"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:02:51.396553" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:02:51.396553" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:02:51.141970" elapsed="0.254583"/>
</if>
<var name="${counter}">8</var>
<status status="PASS" start="2024-10-10T16:02:51.141970" elapsed="0.254583"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:02:51.398548" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:51.399548" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:51.399548" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:02:51.398548" elapsed="0.001000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:02:51.399548" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:51.400545" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:51.400545" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:02:51.399548" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:02:51.400545" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:02:51.400545" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:02:51.401541" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:51.401541" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:51.401541" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:51.401541" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:51.402538" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:02:51.400545" elapsed="0.001993"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:02:51.402538" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:02:51.402538" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:02:51.402538" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:51.403536" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:51.403536" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:02:51.402538" elapsed="0.000998"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:02:51.404532" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:02:51.403536" elapsed="0.001993"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:02:51.405529" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:51.405529" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:02:51.405529" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:02:51.405529" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<break>
<status status="PASS" start="2024-10-10T16:02:51.406564" elapsed="0.000000"/>
</break>
<status status="PASS" start="2024-10-10T16:02:51.405529" elapsed="0.001035"/>
</branch>
<status status="PASS" start="2024-10-10T16:02:51.398548" elapsed="0.008016"/>
</if>
<var name="${counter}">9</var>
<status status="PASS" start="2024-10-10T16:02:51.397550" elapsed="0.009014"/>
</iter>
<var>${counter}</var>
<value>1</value>
<value>${len}</value>
<status status="PASS" start="2024-10-10T16:02:46.558214" elapsed="4.848350"/>
</for>
<status status="PASS" start="2024-10-10T16:02:46.555224" elapsed="4.851340"/>
</kw>
<kw name="When user add user management" owner="userManagementPage">
<kw name="home Project" owner="loginPage">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<arg>accessibility_id=Icon Projects</arg>
<arg>timeout=10s</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:02:51.407561" elapsed="0.084208"/>
</kw>
<kw name="Element Should Be Visible" owner="AppiumLibrary">
<arg>accessibility_id=Icon Projects</arg>
<doc>Verifies that element identified with locator is visible.</doc>
<status status="PASS" start="2024-10-10T16:02:51.492761" elapsed="0.087890"/>
</kw>
<kw name="Element Should Be Visible" owner="AppiumLibrary">
<arg>accessibility_id=Notification</arg>
<doc>Verifies that element identified with locator is visible.</doc>
<status status="PASS" start="2024-10-10T16:02:51.580651" elapsed="0.090697"/>
</kw>
<kw name="Element Should Be Visible" owner="AppiumLibrary">
<arg>accessibility_id=Icon Search</arg>
<doc>Verifies that element identified with locator is visible.</doc>
<status status="PASS" start="2024-10-10T16:02:51.671348" elapsed="0.088696"/>
</kw>
<status status="PASS" start="2024-10-10T16:02:51.406564" elapsed="0.353480"/>
</kw>
<kw name="Loc Parent View" owner="generalFunction">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-10-10T16:02:51.761043" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Tambah User"]/parent::android.view.View</msg>
<var>${loc}</var>
<arg>xpath=//android.widget.TextView[@text="${text}"]/parent::android.view.View</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-10-10T16:02:51.761043" elapsed="0.000000"/>
</kw>
<return>
<value>${loc}</value>
<status status="PASS" start="2024-10-10T16:02:51.761043" elapsed="0.000000"/>
</return>
<msg time="2024-10-10T16:02:51.761043" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Tambah User"]/parent::android.view.View</msg>
<var>${loc}</var>
<arg>Tambah User</arg>
<status status="PASS" start="2024-10-10T16:02:51.760044" elapsed="0.000999"/>
</kw>
<kw name="Click Element" owner="AppiumLibrary">
<msg time="2024-10-10T16:02:51.765032" level="INFO">Clicking element 'xpath=//android.widget.TextView[@text="Tambah User"]/parent::android.view.View'.</msg>
<msg time="2024-10-10T16:02:52.745601" level="INFO">xpath criteria: //android.widget.TextView[@text="Tambah User"]/parent::android.view.View</msg>
<arg>${loc}</arg>
<doc>Click element identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:02:51.761043" elapsed="0.984558"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:02:52.914546" level="INFO">xpath criteria: //android.widget.ScrollView//following-sibling::android.widget.TextView[contains(@text, "upload file")]</msg>
<arg>${textUploadFile}</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:02:52.745601" elapsed="0.168945"/>
</kw>
<status status="PASS" start="2024-10-10T16:02:51.406564" elapsed="1.507982"/>
</kw>
<kw name="Then user input Nama user management" owner="userManagementPage">
<kw name="Generate Simple Random Name" owner="generalFunction">
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-10-10T16:02:52.916540" level="INFO">${name} = KXDGE GTJTVFII</msg>
<var>${name}</var>
<arg>''.join(random.choices('ABCDEFGHIJKLMNOPQRSTUVWXYZ', k=5)) + ' ' + ''.join(random.choices('ABCDEFGHIJKLMNOPQRSTUVWXYZ', k=8))</arg>
<arg>modules=random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-10-10T16:02:52.915544" elapsed="0.000996"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:02:52.917537" level="INFO">${randomStr} = KXDGE GTJTVFII</msg>
<arg>${randomStr}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:02:52.916540" elapsed="0.000997"/>
</kw>
<status status="PASS" start="2024-10-10T16:02:52.915544" elapsed="0.002990"/>
</kw>
<kw name="Generate Random Phone Number" owner="generalFunction">
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-10-10T16:02:52.918534" level="INFO">${random_number} = 0841678732</msg>
<var>${random_number}</var>
<arg>'08' + str(random.randint(10000000, 99999999))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-10-10T16:02:52.918534" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:02:52.920529" level="INFO">${randNumber} = 0841678732</msg>
<arg>${randNumber}</arg>
<arg>${random_number}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:02:52.919531" elapsed="0.001995"/>
</kw>
<status status="PASS" start="2024-10-10T16:02:52.918534" elapsed="0.002992"/>
</kw>
<kw name="Generate Random Email" owner="generalFunction">
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-10-10T16:02:52.922524" level="INFO">${name} = tjegewrh</msg>
<var>${name}</var>
<arg>''.join(random.choices('abcdefghijklmnopqrtuvwxyz', k=8))</arg>
<arg>modules=random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-10-10T16:02:52.921526" elapsed="0.000998"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-10-10T16:02:52.922524" level="INFO">${nameEmail} = tjegewrh@gmail.com</msg>
<var>${nameEmail}</var>
<arg>${name}@gmail.com</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-10-10T16:02:52.922524" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:02:52.924518" level="INFO">${randomEmail} = tjegewrh@gmail.com</msg>
<arg>${randomEmail}</arg>
<arg>${nameEmail}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:02:52.922524" elapsed="0.001994"/>
</kw>
<status status="PASS" start="2024-10-10T16:02:52.921526" elapsed="0.002992"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:02:52.926512" level="INFO">${nameUser} = KXDGE GTJTVFII</msg>
<arg>${nameUser}</arg>
<arg>${randomStr}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:02:52.924518" elapsed="0.001994"/>
</kw>
<kw name="input text (EditText)" owner="generalFunction">
<kw name="Loc Parent EditText" owner="generalFunction">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-10-10T16:02:52.927510" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Masukkan nama user"]/parent::android.widget.EditText</msg>
<var>${loc}</var>
<arg>xpath=//android.widget.TextView[@text="${text}"]/parent::android.widget.EditText</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-10-10T16:02:52.927510" elapsed="0.000000"/>
</kw>
<return>
<value>${loc}</value>
<status status="PASS" start="2024-10-10T16:02:52.927510" elapsed="0.000000"/>
</return>
<msg time="2024-10-10T16:02:52.927510" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Masukkan nama user"]/parent::android.widget.EditText</msg>
<var>${loc}</var>
<arg>${locEdit}</arg>
<status status="PASS" start="2024-10-10T16:02:52.926512" elapsed="0.000998"/>
</kw>
<kw name="Input Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:02:52.930502" level="INFO">Typing text 'KXDGE GTJTVFII' into text field 'xpath=//android.widget.TextView[@text="Masukkan nama user"]/parent::android.widget.EditText'</msg>
<msg time="2024-10-10T16:02:54.086249" level="INFO">xpath criteria: //android.widget.TextView[@text="Masukkan nama user"]/parent::android.widget.EditText</msg>
<arg>${loc}</arg>
<arg>${rand_text}</arg>
<doc>Types the given `text` into text field identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:02:52.927510" elapsed="1.158739"/>
</kw>
<arg>${randomStr}</arg>
<arg>Masukkan nama user</arg>
<status status="PASS" start="2024-10-10T16:02:52.926512" elapsed="1.159737"/>
</kw>
<status status="PASS" start="2024-10-10T16:02:52.914546" elapsed="1.171703"/>
</kw>
<kw name="And user input text (EditText)" owner="userManagementPage">
<kw name="input text (EditText)" owner="generalFunction">
<kw name="Loc Parent EditText" owner="generalFunction">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-10-10T16:02:54.088274" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Masukan jabatan user"]/parent::android.widget.EditText</msg>
<var>${loc}</var>
<arg>xpath=//android.widget.TextView[@text="${text}"]/parent::android.widget.EditText</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-10-10T16:02:54.088274" elapsed="0.000000"/>
</kw>
<return>
<value>${loc}</value>
<status status="PASS" start="2024-10-10T16:02:54.088274" elapsed="0.000000"/>
</return>
<msg time="2024-10-10T16:02:54.088274" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Masukan jabatan user"]/parent::android.widget.EditText</msg>
<var>${loc}</var>
<arg>${locEdit}</arg>
<status status="PASS" start="2024-10-10T16:02:54.087243" elapsed="0.001031"/>
</kw>
<kw name="Input Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:02:54.092265" level="INFO">Typing text 'KXDGE GTJTVFII' into text field 'xpath=//android.widget.TextView[@text="Masukan jabatan user"]/parent::android.widget.EditText'</msg>
<msg time="2024-10-10T16:02:54.264697" level="INFO">xpath criteria: //android.widget.TextView[@text="Masukan jabatan user"]/parent::android.widget.EditText</msg>
<arg>${loc}</arg>
<arg>${rand_text}</arg>
<doc>Types the given `text` into text field identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:02:54.089272" elapsed="0.175425"/>
</kw>
<arg>${text}</arg>
<arg>${locEditext}</arg>
<status status="PASS" start="2024-10-10T16:02:54.087243" elapsed="0.178451"/>
</kw>
<arg>${randomStr}</arg>
<arg>Masukan jabatan user</arg>
<status status="PASS" start="2024-10-10T16:02:54.087243" elapsed="0.178451"/>
</kw>
<kw name="And user input text (EditText)" owner="userManagementPage">
<kw name="input text (EditText)" owner="generalFunction">
<kw name="Loc Parent EditText" owner="generalFunction">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-10-10T16:02:54.268685" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Masukkan email user"]/parent::android.widget.EditText</msg>
<var>${loc}</var>
<arg>xpath=//android.widget.TextView[@text="${text}"]/parent::android.widget.EditText</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-10-10T16:02:54.267688" elapsed="0.000997"/>
</kw>
<return>
<value>${loc}</value>
<status status="PASS" start="2024-10-10T16:02:54.268685" elapsed="0.000000"/>
</return>
<msg time="2024-10-10T16:02:54.268685" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Masukkan email user"]/parent::android.widget.EditText</msg>
<var>${loc}</var>
<arg>${locEdit}</arg>
<status status="PASS" start="2024-10-10T16:02:54.267688" elapsed="0.000997"/>
</kw>
<kw name="Input Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:02:54.271675" level="INFO">Typing text 'tjegewrh@gmail.com' into text field 'xpath=//android.widget.TextView[@text="Masukkan email user"]/parent::android.widget.EditText'</msg>
<msg time="2024-10-10T16:02:54.434260" level="INFO">xpath criteria: //android.widget.TextView[@text="Masukkan email user"]/parent::android.widget.EditText</msg>
<arg>${loc}</arg>
<arg>${rand_text}</arg>
<doc>Types the given `text` into text field identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:02:54.268685" elapsed="0.165575"/>
</kw>
<arg>${text}</arg>
<arg>${locEditext}</arg>
<status status="PASS" start="2024-10-10T16:02:54.266691" elapsed="0.167569"/>
</kw>
<arg>${randomEmail}</arg>
<arg>Masukkan email user</arg>
<status status="PASS" start="2024-10-10T16:02:54.265694" elapsed="0.168566"/>
</kw>
<kw name="And user input text (EditText)" owner="userManagementPage">
<kw name="input text (EditText)" owner="generalFunction">
<kw name="Loc Parent EditText" owner="generalFunction">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-10-10T16:02:54.436251" level="INFO">${loc} = xpath=//android.widget.TextView[@text="08xxxxxxxxxx"]/parent::android.widget.EditText</msg>
<var>${loc}</var>
<arg>xpath=//android.widget.TextView[@text="${text}"]/parent::android.widget.EditText</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-10-10T16:02:54.436251" elapsed="0.000000"/>
</kw>
<return>
<value>${loc}</value>
<status status="PASS" start="2024-10-10T16:02:54.436251" elapsed="0.000000"/>
</return>
<msg time="2024-10-10T16:02:54.436251" level="INFO">${loc} = xpath=//android.widget.TextView[@text="08xxxxxxxxxx"]/parent::android.widget.EditText</msg>
<var>${loc}</var>
<arg>${locEdit}</arg>
<status status="PASS" start="2024-10-10T16:02:54.435255" elapsed="0.000996"/>
</kw>
<kw name="Input Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:02:54.440241" level="INFO">Typing text '0841678732' into text field 'xpath=//android.widget.TextView[@text="08xxxxxxxxxx"]/parent::android.widget.EditText'</msg>
<msg time="2024-10-10T16:02:54.604063" level="INFO">xpath criteria: //android.widget.TextView[@text="08xxxxxxxxxx"]/parent::android.widget.EditText</msg>
<arg>${loc}</arg>
<arg>${rand_text}</arg>
<doc>Types the given `text` into text field identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:02:54.437249" elapsed="0.166814"/>
</kw>
<arg>${text}</arg>
<arg>${locEditext}</arg>
<status status="PASS" start="2024-10-10T16:02:54.435255" elapsed="0.168808"/>
</kw>
<arg>${randNumber}</arg>
<arg>08xxxxxxxxxx</arg>
<status status="PASS" start="2024-10-10T16:02:54.435255" elapsed="0.168808"/>
</kw>
<kw name="And user input text (EditText)" owner="userManagementPage">
<kw name="input text (EditText)" owner="generalFunction">
<kw name="Loc Parent EditText" owner="generalFunction">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-10-10T16:02:54.606056" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Masukkan password"]/parent::android.widget.EditText</msg>
<var>${loc}</var>
<arg>xpath=//android.widget.TextView[@text="${text}"]/parent::android.widget.EditText</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-10-10T16:02:54.606056" elapsed="0.000000"/>
</kw>
<return>
<value>${loc}</value>
<status status="PASS" start="2024-10-10T16:02:54.606056" elapsed="0.000000"/>
</return>
<msg time="2024-10-10T16:02:54.606056" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Masukkan password"]/parent::android.widget.EditText</msg>
<var>${loc}</var>
<arg>${locEdit}</arg>
<status status="PASS" start="2024-10-10T16:02:54.605060" elapsed="0.000996"/>
</kw>
<kw name="Input Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:02:54.609048" level="INFO">Typing text 'test1234' into text field 'xpath=//android.widget.TextView[@text="Masukkan password"]/parent::android.widget.EditText'</msg>
<msg time="2024-10-10T16:02:55.458553" level="INFO">xpath criteria: //android.widget.TextView[@text="Masukkan password"]/parent::android.widget.EditText</msg>
<arg>${loc}</arg>
<arg>${rand_text}</arg>
<doc>Types the given `text` into text field identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:02:54.606056" elapsed="0.852497"/>
</kw>
<arg>${text}</arg>
<arg>${locEditext}</arg>
<status status="PASS" start="2024-10-10T16:02:54.605060" elapsed="0.853493"/>
</kw>
<arg>${passwordSite}</arg>
<arg>Masukkan password</arg>
<status status="PASS" start="2024-10-10T16:02:54.604063" elapsed="0.854490"/>
</kw>
<kw name="And user input konfirmasi password" owner="userManagementPage">
<kw name="input password form user management" owner="generalFunction">
<kw name="Loc Parent EditText" owner="generalFunction">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-10-10T16:02:55.460549" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Masukkan Konfirmasi password"]/parent::android.widget.EditText</msg>
<var>${loc}</var>
<arg>xpath=//android.widget.TextView[@text="${text}"]/parent::android.widget.EditText</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-10-10T16:02:55.460549" elapsed="0.000000"/>
</kw>
<return>
<value>${loc}</value>
<status status="PASS" start="2024-10-10T16:02:55.461546" elapsed="0.000000"/>
</return>
<msg time="2024-10-10T16:02:55.461546" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Masukkan Konfirmasi password"]/parent::android.widget.EditText</msg>
<var>${loc}</var>
<arg>${locatorText}</arg>
<status status="PASS" start="2024-10-10T16:02:55.460549" elapsed="0.000997"/>
</kw>
<kw name="Swipe" owner="AppiumLibrary">
<arg>${521}</arg>
<arg>${1798}</arg>
<arg>${530}</arg>
<arg>${1207}</arg>
<doc>Swipe from one point to another point, for an optional duration.</doc>
<status status="PASS" start="2024-10-10T16:02:55.461546" elapsed="1.334554"/>
</kw>
<kw name="Input Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:02:56.799124" level="INFO">Typing text 'test1234' into text field 'xpath=//android.widget.TextView[@text="Masukkan Konfirmasi password"]/parent::android.widget.EditText'</msg>
<msg time="2024-10-10T16:02:56.950350" level="INFO">xpath criteria: //android.widget.TextView[@text="Masukkan Konfirmasi password"]/parent::android.widget.EditText</msg>
<arg>${loc}</arg>
<arg>${password}</arg>
<doc>Types the given `text` into text field identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:02:56.796100" elapsed="0.154250"/>
</kw>
<arg>${text}</arg>
<arg>Masukkan Konfirmasi password</arg>
<status status="PASS" start="2024-10-10T16:02:55.459552" elapsed="1.490798"/>
</kw>
<arg>${passwordSite}</arg>
<status status="PASS" start="2024-10-10T16:02:55.459552" elapsed="1.490798"/>
</kw>
<kw name="And verify password" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:02:57.646946" level="INFO">xpath criteria: //android.widget.TextView[@text="Password sesuai"]</msg>
<arg>${passVerify}</arg>
<arg>timeout=3s</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:02:56.951380" elapsed="0.695566"/>
</kw>
<msg time="2024-10-10T16:02:57.646946" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${passVerify}</arg>
<arg>timeout=3s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:02:56.951380" elapsed="0.696564"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:02:57.760949" level="INFO">Element 'xpath=//android.widget.TextView[@text="Password sesuai"]' text is 'Password sesuai' </msg>
<msg time="2024-10-10T16:02:57.760949" level="INFO">xpath criteria: //android.widget.TextView[@text="Password sesuai"]</msg>
<msg time="2024-10-10T16:02:57.760949" level="INFO">${text} = Password sesuai</msg>
<var>${text}</var>
<arg>${passVerify}</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:02:57.647944" elapsed="0.114039"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Message Password: ${text}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-10-10T16:02:57.761983" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-10-10T16:02:57.647944" elapsed="0.114999"/>
</branch>
<branch type="ELSE">
<kw name="show error message" owner="userManagementPage">
<arg>${errMsg}</arg>
<status status="NOT RUN" start="2024-10-10T16:02:57.762943" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:02:57.762943" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-10-10T16:02:57.647944" elapsed="0.115997"/>
</if>
<arg>Password sesuai</arg>
<status status="PASS" start="2024-10-10T16:02:56.951380" elapsed="0.812561"/>
</kw>
<kw name="And user click button (parent view)" owner="generalFunction">
<kw name="Loc Parent View" owner="generalFunction">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-10-10T16:02:57.765972" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Tambah"]/parent::android.view.View</msg>
<var>${loc}</var>
<arg>xpath=//android.widget.TextView[@text="${text}"]/parent::android.view.View</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-10-10T16:02:57.764976" elapsed="0.000996"/>
</kw>
<return>
<value>${loc}</value>
<status status="PASS" start="2024-10-10T16:02:57.765972" elapsed="0.000000"/>
</return>
<msg time="2024-10-10T16:02:57.765972" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Tambah"]/parent::android.view.View</msg>
<var>${loc}</var>
<arg>${btn}</arg>
<status status="PASS" start="2024-10-10T16:02:57.764976" elapsed="0.000996"/>
</kw>
<kw name="Click Element" owner="AppiumLibrary">
<msg time="2024-10-10T16:02:57.769960" level="INFO">Clicking element 'xpath=//android.widget.TextView[@text="Tambah"]/parent::android.view.View'.</msg>
<msg time="2024-10-10T16:02:57.912987" level="INFO">xpath criteria: //android.widget.TextView[@text="Tambah"]/parent::android.view.View</msg>
<arg>${loc}</arg>
<doc>Click element identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:02:57.766970" elapsed="0.146017"/>
</kw>
<arg>Tambah</arg>
<status status="PASS" start="2024-10-10T16:02:57.763941" elapsed="0.149046"/>
</kw>
<kw name="And click alert" owner="userManagementPage">
<kw name="alert pop up show" owner="generalFunction">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:02:58.970364" level="INFO">xpath criteria: //android.widget.ImageView</msg>
<arg>${icon}</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:02:57.914981" elapsed="1.055383"/>
</kw>
<msg time="2024-10-10T16:02:58.970364" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${icon}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:02:57.914981" elapsed="1.055383"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:02:59.041951" level="INFO">Element 'xpath=//android.widget.TextView[contains(@text, "User")]' text is 'Tambah User' </msg>
<msg time="2024-10-10T16:02:59.041951" level="INFO">xpath criteria: //android.widget.TextView[contains(@text, "User")]</msg>
<msg time="2024-10-10T16:02:59.042916" level="INFO">${textTitle} = Tambah User</msg>
<var>${textTitle}</var>
<arg>${alertText}</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:02:58.970364" elapsed="0.072552"/>
</kw>
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:02:59.170574" level="INFO">Element 'xpath=//android.widget.ImageView/parent::android.view.View/android.widget.TextView[2]' text is 'Apakah Anda yakin untuk menambahkan user?' </msg>
<msg time="2024-10-10T16:02:59.170574" level="INFO">xpath criteria: //android.widget.ImageView/parent::android.view.View/android.widget.TextView[2]</msg>
<msg time="2024-10-10T16:02:59.171571" level="INFO">${textDesc} = Apakah Anda yakin untuk menambahkan user?</msg>
<var>${textDesc}</var>
<arg>${descText}</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:02:59.042916" elapsed="0.128655"/>
</kw>
<kw name="click alert parent View" owner="generalFunction">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:02:59.251569" level="INFO">xpath criteria: //android.widget.TextView[contains(@text, "User")]</msg>
<arg>${locator}</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:02:59.172568" elapsed="0.079001"/>
</kw>
<kw name="Loc Parent View" owner="generalFunction">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-10-10T16:02:59.252567" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Ya"]/parent::android.view.View</msg>
<var>${loc}</var>
<arg>xpath=//android.widget.TextView[@text="${text}"]/parent::android.view.View</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-10-10T16:02:59.252567" elapsed="0.000000"/>
</kw>
<return>
<value>${loc}</value>
<status status="PASS" start="2024-10-10T16:02:59.252567" elapsed="0.000000"/>
</return>
<msg time="2024-10-10T16:02:59.253564" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Ya"]/parent::android.view.View</msg>
<var>${loc}</var>
<arg>${btn}</arg>
<status status="PASS" start="2024-10-10T16:02:59.251569" elapsed="0.001995"/>
</kw>
<kw name="Click Element" owner="AppiumLibrary">
<msg time="2024-10-10T16:02:59.257553" level="INFO">Clicking element 'xpath=//android.widget.TextView[@text="Ya"]/parent::android.view.View'.</msg>
<msg time="2024-10-10T16:03:01.170265" level="INFO">xpath criteria: //android.widget.TextView[@text="Ya"]/parent::android.view.View</msg>
<arg>${loc}</arg>
<doc>Click element identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:02:59.253564" elapsed="1.916701"/>
</kw>
<arg>${loc_btn_alert}</arg>
<arg>${btn_click}</arg>
<status status="PASS" start="2024-10-10T16:02:59.171571" elapsed="1.998694"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Title PopUp: ${textTitle}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-10-10T16:03:01.170265" elapsed="0.000996"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Desc PopUp: ${textDesc}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-10-10T16:03:01.171261" elapsed="0.001072"/>
</kw>
<status status="PASS" start="2024-10-10T16:02:58.970364" elapsed="2.201969"/>
</branch>
<status status="PASS" start="2024-10-10T16:02:58.970364" elapsed="2.201969"/>
</if>
<arg>${iconImg}</arg>
<arg>${alertTitle}</arg>
<arg>${descTitle}</arg>
<arg>${alertTitle}</arg>
<arg>${btn_click}</arg>
<status status="PASS" start="2024-10-10T16:02:57.913984" elapsed="3.258349"/>
</kw>
<arg>Ya</arg>
<status status="PASS" start="2024-10-10T16:02:57.913984" elapsed="3.258349"/>
</kw>
<status status="PASS" start="2024-10-10T16:02:38.961857" elapsed="22.210476"/>
</kw>
<kw name="Close App" owner="openApp" type="TEARDOWN">
<kw name="Close Application" owner="AppiumLibrary">
<doc>Closes the current application and also close webdriver session.</doc>
<status status="PASS" start="2024-10-10T16:03:01.173029" elapsed="0.444078"/>
</kw>
<status status="PASS" start="2024-10-10T16:03:01.173029" elapsed="0.445075"/>
</kw>
<doc>This scenario test User Create User Management (Site/PIC)</doc>
<tag>1000s</tag>
<tag>test</tag>
<tag>user management</tag>
<status status="PASS" start="2024-10-10T16:02:29.674607" elapsed="31.943497"/>
</test>
<test id="s1-t2" name="Test Create User Management with format Email invalid" line="15">
<kw name="Open app Dev Project" owner="openApp" type="SETUP">
<kw name="Open Application" owner="AppiumLibrary">
<arg>http://127.0.0.1:4723</arg>
<arg>platformName=${platformName}</arg>
<arg>deviceName=${udid}</arg>
<arg>appPackage=${appPackage}</arg>
<arg>appActivity=${appActivity}</arg>
<arg>automationName=UiAutomator2</arg>
<doc>Opens a new application to given Appium server.
Capabilities of appium server, Android and iOS,
Please check https://appium.io/docs/en/2.1/cli/args/
| *Option*            | *Man.* | *Description*     |
| remote_url          | Yes    | Appium server url |
| alias               | no     | alias             |
| strict_ssl          | No     | allows you to send commands to an invalid certificate host like a self-signed one. |</doc>
<status status="PASS" start="2024-10-10T16:03:01.621095" elapsed="7.946772"/>
</kw>
<status status="PASS" start="2024-10-10T16:03:01.620099" elapsed="7.947768"/>
</kw>
<kw name="User create User Management without format email valid" owner="userManagement">
<kw name="Given user go to User Management page" owner="userManagementPage">
<kw name="User Login" owner="loginPage">
<kw name="Given user input no handphone" owner="loginPage">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:03:12.169196" level="INFO">xpath criteria: //android.widget.TextView[@text="Login"]
xpath criteria: //android.widget.TextView[@text="Login"]</msg>
<arg>${titleLogin}</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:03:09.569862" elapsed="2.599334"/>
</kw>
<kw name="Input Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:03:12.172185" level="INFO">Typing text '088210068283' into text field 'xpath=//android.widget.EditText[1]'</msg>
<msg time="2024-10-10T16:03:12.301289" level="INFO">xpath criteria: //android.widget.EditText[1]</msg>
<arg>${inputNoHandphone}</arg>
<arg>${noHandphone}</arg>
<doc>Types the given `text` into text field identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:03:12.169196" elapsed="0.132093"/>
</kw>
<arg>${akunOP}</arg>
<status status="PASS" start="2024-10-10T16:03:09.569862" elapsed="2.731427"/>
</kw>
<kw name="When user input password" owner="loginPage">
<kw name="Input Password" owner="AppiumLibrary">
<msg time="2024-10-10T16:03:12.306273" level="INFO">Typing password into text field 'xpath=//android.widget.EditText[2]'</msg>
<msg time="2024-10-10T16:03:12.657660" level="INFO">xpath criteria: //android.widget.EditText[2]</msg>
<arg>${inputPassword}</arg>
<arg>${password}</arg>
<doc>Types the given password into text field identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:03:12.302285" elapsed="0.356371"/>
</kw>
<arg>${passwordProject}</arg>
<status status="PASS" start="2024-10-10T16:03:12.302285" elapsed="0.356371"/>
</kw>
<kw name="Then click button masuk" owner="loginPage">
<kw name="Click Element" owner="AppiumLibrary">
<msg time="2024-10-10T16:03:12.662644" level="INFO">Clicking element 'xpath=//android.view.View/android.view.View[2]'.</msg>
<msg time="2024-10-10T16:03:13.056193" level="INFO">xpath criteria: //android.view.View/android.view.View[2]</msg>
<arg>${buttonMasuk}</arg>
<doc>Click element identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:03:12.658656" elapsed="0.397537"/>
</kw>
<status status="PASS" start="2024-10-10T16:03:12.658656" elapsed="0.397537"/>
</kw>
<kw name="And home Project" owner="loginPage">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<arg>accessibility_id=Icon Projects</arg>
<arg>timeout=10s</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:03:13.057192" elapsed="2.314706"/>
</kw>
<kw name="Element Should Be Visible" owner="AppiumLibrary">
<arg>accessibility_id=Icon Projects</arg>
<doc>Verifies that element identified with locator is visible.</doc>
<status status="PASS" start="2024-10-10T16:03:15.371898" elapsed="0.188550"/>
</kw>
<kw name="Element Should Be Visible" owner="AppiumLibrary">
<arg>accessibility_id=Notification</arg>
<doc>Verifies that element identified with locator is visible.</doc>
<status status="PASS" start="2024-10-10T16:03:15.561441" elapsed="0.268282"/>
</kw>
<kw name="Element Should Be Visible" owner="AppiumLibrary">
<arg>accessibility_id=Icon Search</arg>
<doc>Verifies that element identified with locator is visible.</doc>
<status status="PASS" start="2024-10-10T16:03:15.830720" elapsed="0.127661"/>
</kw>
<status status="PASS" start="2024-10-10T16:03:13.057192" elapsed="2.901189"/>
</kw>
<status status="PASS" start="2024-10-10T16:03:09.569862" elapsed="6.388519"/>
</kw>
<kw name="Loc Parent View" owner="generalFunction">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-10-10T16:03:15.960374" level="INFO">${loc} = xpath=//android.widget.TextView[@text="User Management"]/parent::android.view.View</msg>
<var>${loc}</var>
<arg>xpath=//android.widget.TextView[@text="${text}"]/parent::android.view.View</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-10-10T16:03:15.959377" elapsed="0.000997"/>
</kw>
<return>
<value>${loc}</value>
<status status="PASS" start="2024-10-10T16:03:15.960374" elapsed="0.000000"/>
</return>
<msg time="2024-10-10T16:03:15.960374" level="INFO">${loc} = xpath=//android.widget.TextView[@text="User Management"]/parent::android.view.View</msg>
<var>${loc}</var>
<arg>User Management</arg>
<status status="PASS" start="2024-10-10T16:03:15.959377" elapsed="0.001995"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:03:16.163830" level="INFO">xpath criteria: //android.widget.TextView[@text="User Management"]/parent::android.view.View</msg>
<arg>${loc}</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:03:15.961372" elapsed="0.202458"/>
</kw>
<kw name="Click Element" owner="AppiumLibrary">
<msg time="2024-10-10T16:03:16.167818" level="INFO">Clicking element 'xpath=//android.widget.TextView[@text="User Management"]/parent::android.view.View'.</msg>
<msg time="2024-10-10T16:03:16.425583" level="INFO">xpath criteria: //android.widget.TextView[@text="User Management"]/parent::android.view.View</msg>
<arg>${loc}</arg>
<doc>Click element identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:03:16.164827" elapsed="0.260756"/>
</kw>
<status status="PASS" start="2024-10-10T16:03:09.568828" elapsed="6.856755"/>
</kw>
<kw name="And Get Detail Text User Management" owner="userManagementPage">
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-10-10T16:03:16.427579" level="INFO">${random} = 1</msg>
<var>${random}</var>
<arg>random.randint(1, 3)</arg>
<arg>modules=random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-10-10T16:03:16.427579" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:03:16.428575" level="INFO">${indexUser} = 1</msg>
<arg>${indexUser}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:03:16.428575" elapsed="0.000000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-10-10T16:03:16.429572" level="INFO">Random : 1</msg>
<arg>Random : ${random}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-10-10T16:03:16.428575" elapsed="0.000997"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-10-10T16:03:16.429572" level="INFO">Length is 103.</msg>
<msg time="2024-10-10T16:03:16.429572" level="INFO">${len} = 103</msg>
<var>${len}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-10-10T16:03:16.429572" elapsed="0.000000"/>
</kw>
<for flavor="IN RANGE">
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:03:17.486247" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[1]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[1]/parent::android.view.View</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:03:16.432566" elapsed="1.053681"/>
</kw>
<msg time="2024-10-10T16:03:17.486247" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:03:16.432566" elapsed="1.053681"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:03:17.780837" level="INFO">Element 'xpath=(//android.view.View[@content-desc="Image"])[1]/parent::android.view.View/android.widget.TextView[1]' text is 'CaZz' </msg>
<msg time="2024-10-10T16:03:17.780837" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[1]/parent::android.view.View/android.widget.TextView[1]</msg>
<msg time="2024-10-10T16:03:17.780837" level="INFO">${name} = CaZz</msg>
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:03:17.487244" elapsed="0.294589"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:03:17.781833" level="INFO">${name} = CaZz</msg>
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:03:17.781833" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-10-10T16:03:17.487244" elapsed="0.294589"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:17.782830" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:17.781833" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-10-10T16:03:17.486247" elapsed="0.296583"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:03:16.431567" elapsed="1.351263"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:03:17.782830" level="INFO">${nameUserManagement} = CaZz</msg>
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:03:17.782830" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-10-10T16:03:17.782830" elapsed="0.000997"/>
</kw>
<status status="PASS" start="2024-10-10T16:03:16.430570" elapsed="1.354221"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:17.784791" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:17.785785" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:17.785785" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:17.784791" elapsed="0.000994"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:17.785785" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:17.785785" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:17.786782" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:17.786782" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:17.786782" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:17.786782" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:17.787782" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:17.786782" elapsed="0.001000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:17.787782" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:17.787782" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:17.787782" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:17.788779" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:17.788779" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:17.787782" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:17.788779" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:17.788779" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:17.788779" elapsed="0.000998"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:17.789777" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:17.789777" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:17.788779" elapsed="0.000998"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:03:17.789777" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:03:17.789777" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:03:16.430570" elapsed="1.359207"/>
</if>
<var name="${counter}">1</var>
<status status="PASS" start="2024-10-10T16:03:16.430570" elapsed="1.359207"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:17.792769" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:17.792769" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:17.792769" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:17.791769" elapsed="0.001000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:03:18.010650" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[1]/parent::android.view.View</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:03:17.793767" elapsed="0.216883"/>
</kw>
<msg time="2024-10-10T16:03:18.010650" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:03:17.793767" elapsed="0.216883"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:03:18.208008" level="INFO">Element 'xpath=(//android.view.View[@content-desc="Image"])[1]/parent::android.view.View/android.widget.TextView[2]' text is 'jassw' </msg>
<msg time="2024-10-10T16:03:18.208008" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[1]/parent::android.view.View/android.widget.TextView[2]</msg>
<msg time="2024-10-10T16:03:18.208008" level="INFO">${name} = jassw</msg>
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:03:18.011649" elapsed="0.196359"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:03:18.209008" level="INFO">${name} = jassw</msg>
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:03:18.208008" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2024-10-10T16:03:18.010650" elapsed="0.198358"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:18.209008" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:18.209008" elapsed="0.000960"/>
</branch>
<status status="PASS" start="2024-10-10T16:03:18.010650" elapsed="0.199318"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:03:17.792769" elapsed="0.417199"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:03:18.209968" level="INFO">${jabatan} = jassw</msg>
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:03:18.209968" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-10-10T16:03:18.209968" elapsed="0.000996"/>
</kw>
<status status="PASS" start="2024-10-10T16:03:17.792769" elapsed="0.418195"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:18.211963" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:18.210964" elapsed="0.000999"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:18.211963" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:18.211963" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:18.212959" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:18.212959" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:18.212959" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:18.211963" elapsed="0.000996"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:18.212959" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:18.212959" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:18.213956" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:18.213956" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:18.213956" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:18.212959" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:18.214954" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:18.213956" elapsed="0.000998"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:18.214954" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:18.215953" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:18.215953" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:18.214954" elapsed="0.000999"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:03:18.215953" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:03:18.215953" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:03:17.791769" elapsed="0.424184"/>
</if>
<var name="${counter}">2</var>
<status status="PASS" start="2024-10-10T16:03:17.791769" elapsed="0.424184"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:18.216948" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:18.216948" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:18.217945" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:18.216948" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:18.218943" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:18.218943" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:18.218943" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:18.217945" elapsed="0.000998"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:03:18.434309" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[1]/parent::android.view.View</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:03:18.219942" elapsed="0.214367"/>
</kw>
<msg time="2024-10-10T16:03:18.435303" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:03:18.219942" elapsed="0.215361"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:03:19.011342" level="INFO">Element 'xpath=(//android.view.View[@content-desc="Image"])[1]/parent::android.view.View/android.widget.TextView[3]' text is 'Nomor handphone' </msg>
<msg time="2024-10-10T16:03:19.011342" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[1]/parent::android.view.View/android.widget.TextView[3]</msg>
<msg time="2024-10-10T16:03:19.012340" level="INFO">${name} = Nomor handphone</msg>
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:03:18.435303" elapsed="0.577037"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:03:19.012340" level="INFO">${name} = Nomor handphone</msg>
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:03:19.012340" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-10-10T16:03:18.435303" elapsed="0.577037"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:19.012340" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:19.012340" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:03:18.435303" elapsed="0.578034"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:03:18.219942" elapsed="0.793395"/>
</kw>
<status status="PASS" start="2024-10-10T16:03:18.218943" elapsed="0.794394"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:19.013337" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:19.013337" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:19.013337" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:19.014335" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:19.014335" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:19.013337" elapsed="0.000998"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:19.014335" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:19.014335" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:19.014335" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:19.014335" elapsed="0.000997"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:19.015332" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:19.014335" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:19.015332" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:19.015332" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:19.015332" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:19.015332" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:19.016329" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:19.015332" elapsed="0.000997"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:03:19.016329" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:03:19.016329" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:03:18.216948" elapsed="0.799381"/>
</if>
<var name="${counter}">3</var>
<status status="PASS" start="2024-10-10T16:03:18.216948" elapsed="0.799381"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:19.017327" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:19.017327" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:19.017327" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:19.016329" elapsed="0.000998"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:19.017327" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:19.018324" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:19.018324" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:19.017327" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:19.018324" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:19.018324" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:03:19.203306" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[1]/parent::android.view.View</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:03:19.019321" elapsed="0.183985"/>
</kw>
<msg time="2024-10-10T16:03:19.203306" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:03:19.019321" elapsed="0.183985"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:03:19.348030" level="INFO">Element 'xpath=(//android.view.View[@content-desc="Image"])[1]/parent::android.view.View/android.widget.TextView[4]' text is '0882-1231-23' </msg>
<msg time="2024-10-10T16:03:19.348030" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[1]/parent::android.view.View/android.widget.TextView[4]</msg>
<msg time="2024-10-10T16:03:19.349029" level="INFO">${name} = 0882-1231-23</msg>
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:03:19.204297" elapsed="0.144732"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:03:19.350026" level="INFO">${name} = 0882-1231-23</msg>
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:03:19.349029" elapsed="0.000997"/>
</kw>
<status status="PASS" start="2024-10-10T16:03:19.203306" elapsed="0.146720"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:19.350026" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:19.350026" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:03:19.203306" elapsed="0.146720"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:03:19.019321" elapsed="0.331702"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:03:19.351023" level="INFO">${noTelp} = 0882-1231-23</msg>
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:03:19.351023" elapsed="0.000998"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-10-10T16:03:19.352021" elapsed="0.000997"/>
</kw>
<kw name="Replace String" owner="String">
<msg time="2024-10-10T16:03:19.355014" level="INFO">${replaceNumb} = 0882123123</msg>
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-10-10T16:03:19.353018" elapsed="0.001996"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:03:19.356009" level="INFO">${replaceNumb} = 0882123123</msg>
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:03:19.356009" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-10-10T16:03:19.018324" elapsed="0.337685"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:19.357006" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:19.356009" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:19.358009" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:19.358009" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:19.358009" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:19.357006" elapsed="0.001995"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:19.359001" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:19.359001" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:19.359998" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:19.359998" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:19.360999" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:19.359001" elapsed="0.001998"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:03:19.360999" elapsed="0.024931"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:03:19.360999" elapsed="0.024931"/>
</branch>
<status status="PASS" start="2024-10-10T16:03:19.016329" elapsed="0.369601"/>
</if>
<var name="${counter}">4</var>
<status status="PASS" start="2024-10-10T16:03:19.016329" elapsed="0.369601"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:19.387924" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:19.387924" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:19.387924" elapsed="0.000998"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:19.386927" elapsed="0.001995"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:19.388922" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:19.389919" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:19.389919" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:19.388922" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:19.390917" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:19.389919" elapsed="0.000998"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:19.391914" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:19.391914" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:19.392911" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:19.392911" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:19.392911" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:19.390917" elapsed="0.002991"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:03:19.527035" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[1]/parent::android.view.View</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:03:19.395903" elapsed="0.131132"/>
</kw>
<msg time="2024-10-10T16:03:19.527035" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:03:19.395903" elapsed="0.131132"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:03:19.668492" level="INFO">Element 'xpath=(//android.view.View[@content-desc="Image"])[1]/parent::android.view.View/android.widget.TextView[5]' text is 'Email' </msg>
<msg time="2024-10-10T16:03:19.668492" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[1]/parent::android.view.View/android.widget.TextView[5]</msg>
<msg time="2024-10-10T16:03:19.668492" level="INFO">${name} = Email</msg>
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:03:19.527035" elapsed="0.141457"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:03:19.669486" level="INFO">${name} = Email</msg>
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:03:19.669486" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-10-10T16:03:19.527035" elapsed="0.142451"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:19.669486" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:19.669486" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-10-10T16:03:19.527035" elapsed="0.143449"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:03:19.394905" elapsed="0.275579"/>
</kw>
<status status="PASS" start="2024-10-10T16:03:19.393908" elapsed="0.276576"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:19.670484" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:19.671481" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:19.671481" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:19.670484" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:19.671481" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:19.671481" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:19.672478" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:19.672478" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:19.672478" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:19.672478" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:03:19.672478" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:03:19.672478" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:03:19.386927" elapsed="0.285551"/>
</if>
<var name="${counter}">5</var>
<status status="PASS" start="2024-10-10T16:03:19.386927" elapsed="0.285551"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:19.673475" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:19.674473" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:19.674473" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:19.673475" elapsed="0.000998"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:19.674473" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:19.674473" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:19.674473" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:19.674473" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:19.675470" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:19.675470" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:19.675470" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:19.676467" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:19.676467" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:19.676467" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:19.676467" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:19.675470" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:19.677465" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:19.676467" elapsed="0.000998"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:03:19.813625" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[1]/parent::android.view.View</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:03:19.678462" elapsed="0.135163"/>
</kw>
<msg time="2024-10-10T16:03:19.813625" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:03:19.678462" elapsed="0.135163"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:03:19.953150" level="INFO">Element 'xpath=(//android.view.View[@content-desc="Image"])[1]/parent::android.view.View/android.widget.TextView[6]' text is 'asd!!!######@gmail.com' </msg>
<msg time="2024-10-10T16:03:19.953150" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[1]/parent::android.view.View/android.widget.TextView[6]</msg>
<msg time="2024-10-10T16:03:19.953150" level="INFO">${name} = asd!!!######@gmail.com</msg>
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:03:19.814623" elapsed="0.138527"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:03:19.954147" level="INFO">${name} = asd!!!######@gmail.com</msg>
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:03:19.953150" elapsed="0.000997"/>
</kw>
<status status="PASS" start="2024-10-10T16:03:19.813625" elapsed="0.140522"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:19.954147" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:19.954147" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:03:19.813625" elapsed="0.140522"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:03:19.677465" elapsed="0.276682"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:03:19.955144" level="INFO">${email} = asd!!!######@gmail.com</msg>
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:03:19.954147" elapsed="0.000997"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-10-10T16:03:19.955144" elapsed="0.000961"/>
</kw>
<status status="PASS" start="2024-10-10T16:03:19.677465" elapsed="0.278640"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:19.956105" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:19.956105" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:19.957104" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:19.957104" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:19.957104" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:19.957104" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:03:19.957104" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:03:19.957104" elapsed="0.001035"/>
</branch>
<status status="PASS" start="2024-10-10T16:03:19.673475" elapsed="0.284664"/>
</if>
<var name="${counter}">6</var>
<status status="PASS" start="2024-10-10T16:03:19.673475" elapsed="0.284664"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:19.958139" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:19.959134" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:19.959134" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:19.958139" elapsed="0.000995"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:19.959134" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:19.959134" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:19.960095" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:19.959134" elapsed="0.000961"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:19.960095" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:19.960095" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:19.961130" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:19.961130" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:19.961130" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:19.961130" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:19.961130" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:19.960095" elapsed="0.001035"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:19.962126" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:19.961130" elapsed="0.000996"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:19.962126" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:19.963123" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:19.963123" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:19.962126" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:03:20.105993" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[1]/parent::android.view.View</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:03:19.964122" elapsed="0.141871"/>
</kw>
<msg time="2024-10-10T16:03:20.105993" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:03:19.964122" elapsed="0.141871"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:03:20.243526" level="INFO">Element 'xpath=(//android.view.View[@content-desc="Image"])[1]/parent::android.view.View/android.widget.TextView[7]' text is 'Project aktif' </msg>
<msg time="2024-10-10T16:03:20.243526" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[1]/parent::android.view.View/android.widget.TextView[7]</msg>
<msg time="2024-10-10T16:03:20.243526" level="INFO">${name} = Project aktif</msg>
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:03:20.106989" elapsed="0.136537"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:03:20.244521" level="INFO">${name} = Project aktif</msg>
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:03:20.243526" elapsed="0.000995"/>
</kw>
<status status="PASS" start="2024-10-10T16:03:20.105993" elapsed="0.138528"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:20.244521" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:20.244521" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:03:20.105993" elapsed="0.138528"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:03:19.963123" elapsed="0.282430"/>
</kw>
<status status="PASS" start="2024-10-10T16:03:19.963123" elapsed="0.282430"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:20.245553" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:20.245553" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:20.245553" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:20.245553" elapsed="0.000964"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:03:20.246517" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:03:20.246517" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:03:19.958139" elapsed="0.288378"/>
</if>
<var name="${counter}">7</var>
<status status="PASS" start="2024-10-10T16:03:19.958139" elapsed="0.288378"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:20.247548" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:20.247548" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:20.247548" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:20.246517" elapsed="0.001031"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:20.248511" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:20.248511" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:20.248511" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:20.248511" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:20.249541" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:20.248511" elapsed="0.001030"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:20.249541" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:20.249541" elapsed="0.001000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:20.250541" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:20.250541" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:20.250541" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:20.249541" elapsed="0.001000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:20.250541" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:20.250541" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:20.251539" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:20.251539" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:20.251539" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:20.251539" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:20.252536" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:20.251539" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:03:20.378797" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[1]/parent::android.view.View</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:03:20.253533" elapsed="0.125264"/>
</kw>
<msg time="2024-10-10T16:03:20.378797" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:03:20.252536" elapsed="0.126261"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:03:20.511897" level="INFO">Element 'xpath=(//android.view.View[@content-desc="Image"])[1]/parent::android.view.View/android.widget.TextView[8]' text is '0' </msg>
<msg time="2024-10-10T16:03:20.511897" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[1]/parent::android.view.View/android.widget.TextView[8]</msg>
<msg time="2024-10-10T16:03:20.511897" level="INFO">${name} = 0</msg>
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:03:20.379794" elapsed="0.132103"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:03:20.511897" level="INFO">${name} = 0</msg>
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:03:20.511897" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-10-10T16:03:20.379794" elapsed="0.133100"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:20.512894" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:20.512894" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:03:20.379794" elapsed="0.133100"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:03:20.252536" elapsed="0.260358"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:03:20.513891" level="INFO">${projActive} = 0</msg>
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:03:20.512894" elapsed="0.000997"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-10-10T16:03:20.513891" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2024-10-10T16:03:20.252536" elapsed="0.262355"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:03:20.514891" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:03:20.514891" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:03:20.246517" elapsed="0.268374"/>
</if>
<var name="${counter}">8</var>
<status status="PASS" start="2024-10-10T16:03:20.246517" elapsed="0.268374"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:20.516889" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:20.516889" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:20.516889" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:20.515893" elapsed="0.000996"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:20.517890" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:20.517890" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:20.517890" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:20.516889" elapsed="0.001001"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:20.518887" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:20.517890" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:20.518887" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:20.518887" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:20.519884" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:20.519884" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:20.519884" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:20.518887" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:20.520879" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:20.519884" elapsed="0.000995"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:20.520879" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:20.520879" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:20.521878" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:20.520879" elapsed="0.000999"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:20.522876" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:20.521878" elapsed="0.000998"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:20.522876" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:20.522876" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:20.523874" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:20.522876" elapsed="0.000998"/>
</branch>
<branch type="ELSE">
<break>
<status status="PASS" start="2024-10-10T16:03:20.523874" elapsed="0.000000"/>
</break>
<status status="PASS" start="2024-10-10T16:03:20.523874" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:03:20.515893" elapsed="0.007981"/>
</if>
<var name="${counter}">9</var>
<status status="PASS" start="2024-10-10T16:03:20.515893" elapsed="0.007981"/>
</iter>
<var>${counter}</var>
<value>1</value>
<value>${len}</value>
<status status="PASS" start="2024-10-10T16:03:16.429572" elapsed="4.094302"/>
</for>
<status status="PASS" start="2024-10-10T16:03:16.426581" elapsed="4.097293"/>
</kw>
<kw name="When user add user management" owner="userManagementPage">
<kw name="home Project" owner="loginPage">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<arg>accessibility_id=Icon Projects</arg>
<arg>timeout=10s</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:03:20.524871" elapsed="0.108974"/>
</kw>
<kw name="Element Should Be Visible" owner="AppiumLibrary">
<arg>accessibility_id=Icon Projects</arg>
<doc>Verifies that element identified with locator is visible.</doc>
<status status="PASS" start="2024-10-10T16:03:20.633845" elapsed="0.095441"/>
</kw>
<kw name="Element Should Be Visible" owner="AppiumLibrary">
<arg>accessibility_id=Notification</arg>
<doc>Verifies that element identified with locator is visible.</doc>
<status status="PASS" start="2024-10-10T16:03:20.729286" elapsed="0.091978"/>
</kw>
<kw name="Element Should Be Visible" owner="AppiumLibrary">
<arg>accessibility_id=Icon Search</arg>
<doc>Verifies that element identified with locator is visible.</doc>
<status status="PASS" start="2024-10-10T16:03:20.821264" elapsed="0.095561"/>
</kw>
<status status="PASS" start="2024-10-10T16:03:20.524871" elapsed="0.391954"/>
</kw>
<kw name="Loc Parent View" owner="generalFunction">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-10-10T16:03:20.917824" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Tambah User"]/parent::android.view.View</msg>
<var>${loc}</var>
<arg>xpath=//android.widget.TextView[@text="${text}"]/parent::android.view.View</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-10-10T16:03:20.917824" elapsed="0.000000"/>
</kw>
<return>
<value>${loc}</value>
<status status="PASS" start="2024-10-10T16:03:20.917824" elapsed="0.000000"/>
</return>
<msg time="2024-10-10T16:03:20.917824" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Tambah User"]/parent::android.view.View</msg>
<var>${loc}</var>
<arg>Tambah User</arg>
<status status="PASS" start="2024-10-10T16:03:20.916825" elapsed="0.000999"/>
</kw>
<kw name="Click Element" owner="AppiumLibrary">
<msg time="2024-10-10T16:03:20.920851" level="INFO">Clicking element 'xpath=//android.widget.TextView[@text="Tambah User"]/parent::android.view.View'.</msg>
<msg time="2024-10-10T16:03:21.889465" level="INFO">xpath criteria: //android.widget.TextView[@text="Tambah User"]/parent::android.view.View</msg>
<arg>${loc}</arg>
<doc>Click element identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:03:20.917824" elapsed="0.971641"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:03:22.041137" level="INFO">xpath criteria: //android.widget.ScrollView//following-sibling::android.widget.TextView[contains(@text, "upload file")]</msg>
<arg>${textUploadFile}</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:03:21.890462" elapsed="0.150675"/>
</kw>
<status status="PASS" start="2024-10-10T16:03:20.523874" elapsed="1.517263"/>
</kw>
<kw name="And user input Nama user management" owner="userManagementPage">
<kw name="Generate Simple Random Name" owner="generalFunction">
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-10-10T16:03:22.043131" level="INFO">${name} = WCYAX JUAFLIEJ</msg>
<var>${name}</var>
<arg>''.join(random.choices('ABCDEFGHIJKLMNOPQRSTUVWXYZ', k=5)) + ' ' + ''.join(random.choices('ABCDEFGHIJKLMNOPQRSTUVWXYZ', k=8))</arg>
<arg>modules=random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-10-10T16:03:22.042134" elapsed="0.000997"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:03:22.043131" level="INFO">${randomStr} = WCYAX JUAFLIEJ</msg>
<arg>${randomStr}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:03:22.043131" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-10-10T16:03:22.042134" elapsed="0.000997"/>
</kw>
<kw name="Generate Random Phone Number" owner="generalFunction">
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-10-10T16:03:22.044127" level="INFO">${random_number} = 0848878257</msg>
<var>${random_number}</var>
<arg>'08' + str(random.randint(10000000, 99999999))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-10-10T16:03:22.044127" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:03:22.045129" level="INFO">${randNumber} = 0848878257</msg>
<arg>${randNumber}</arg>
<arg>${random_number}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:03:22.045129" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-10-10T16:03:22.044127" elapsed="0.001002"/>
</kw>
<kw name="Generate Random Email" owner="generalFunction">
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-10-10T16:03:22.046125" level="INFO">${name} = odrxetbz</msg>
<var>${name}</var>
<arg>''.join(random.choices('abcdefghijklmnopqrtuvwxyz', k=8))</arg>
<arg>modules=random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-10-10T16:03:22.046125" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-10-10T16:03:22.047122" level="INFO">${nameEmail} = odrxetbz@gmail.com</msg>
<var>${nameEmail}</var>
<arg>${name}@gmail.com</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-10-10T16:03:22.046125" elapsed="0.000997"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:03:22.047122" level="INFO">${randomEmail} = odrxetbz@gmail.com</msg>
<arg>${randomEmail}</arg>
<arg>${nameEmail}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:03:22.047122" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-10-10T16:03:22.045129" elapsed="0.002991"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:03:22.048120" level="INFO">${nameUser} = WCYAX JUAFLIEJ</msg>
<arg>${nameUser}</arg>
<arg>${randomStr}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:03:22.048120" elapsed="0.000000"/>
</kw>
<kw name="input text (EditText)" owner="generalFunction">
<kw name="Loc Parent EditText" owner="generalFunction">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-10-10T16:03:22.049117" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Masukkan nama user"]/parent::android.widget.EditText</msg>
<var>${loc}</var>
<arg>xpath=//android.widget.TextView[@text="${text}"]/parent::android.widget.EditText</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-10-10T16:03:22.049117" elapsed="0.000000"/>
</kw>
<return>
<value>${loc}</value>
<status status="PASS" start="2024-10-10T16:03:22.049117" elapsed="0.000000"/>
</return>
<msg time="2024-10-10T16:03:22.050114" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Masukkan nama user"]/parent::android.widget.EditText</msg>
<var>${loc}</var>
<arg>${locEdit}</arg>
<status status="PASS" start="2024-10-10T16:03:22.049117" elapsed="0.000997"/>
</kw>
<kw name="Input Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:03:22.053106" level="INFO">Typing text 'WCYAX JUAFLIEJ' into text field 'xpath=//android.widget.TextView[@text="Masukkan nama user"]/parent::android.widget.EditText'</msg>
<msg time="2024-10-10T16:03:22.707332" level="INFO">xpath criteria: //android.widget.TextView[@text="Masukkan nama user"]/parent::android.widget.EditText</msg>
<arg>${loc}</arg>
<arg>${rand_text}</arg>
<doc>Types the given `text` into text field identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:03:22.050114" elapsed="0.658217"/>
</kw>
<arg>${randomStr}</arg>
<arg>Masukkan nama user</arg>
<status status="PASS" start="2024-10-10T16:03:22.048120" elapsed="0.660211"/>
</kw>
<status status="PASS" start="2024-10-10T16:03:22.041137" elapsed="0.667194"/>
</kw>
<kw name="Then user input text (EditText)" owner="userManagementPage">
<kw name="input text (EditText)" owner="generalFunction">
<kw name="Loc Parent EditText" owner="generalFunction">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-10-10T16:03:22.710326" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Masukan jabatan user"]/parent::android.widget.EditText</msg>
<var>${loc}</var>
<arg>xpath=//android.widget.TextView[@text="${text}"]/parent::android.widget.EditText</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-10-10T16:03:22.709330" elapsed="0.000996"/>
</kw>
<return>
<value>${loc}</value>
<status status="PASS" start="2024-10-10T16:03:22.710326" elapsed="0.000000"/>
</return>
<msg time="2024-10-10T16:03:22.710326" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Masukan jabatan user"]/parent::android.widget.EditText</msg>
<var>${loc}</var>
<arg>${locEdit}</arg>
<status status="PASS" start="2024-10-10T16:03:22.709330" elapsed="0.000996"/>
</kw>
<kw name="Input Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:03:22.713316" level="INFO">Typing text 'WCYAX JUAFLIEJ' into text field 'xpath=//android.widget.TextView[@text="Masukan jabatan user"]/parent::android.widget.EditText'</msg>
<msg time="2024-10-10T16:03:22.912282" level="INFO">xpath criteria: //android.widget.TextView[@text="Masukan jabatan user"]/parent::android.widget.EditText</msg>
<arg>${loc}</arg>
<arg>${rand_text}</arg>
<doc>Types the given `text` into text field identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:03:22.710326" elapsed="0.201956"/>
</kw>
<arg>${text}</arg>
<arg>${locEditext}</arg>
<status status="PASS" start="2024-10-10T16:03:22.709330" elapsed="0.203950"/>
</kw>
<arg>${randomStr}</arg>
<arg>Masukan jabatan user</arg>
<status status="PASS" start="2024-10-10T16:03:22.708331" elapsed="0.204949"/>
</kw>
<kw name="And user input text (EditText)" owner="userManagementPage">
<kw name="input text (EditText)" owner="generalFunction">
<kw name="Loc Parent EditText" owner="generalFunction">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-10-10T16:03:22.915275" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Masukkan email user"]/parent::android.widget.EditText</msg>
<var>${loc}</var>
<arg>xpath=//android.widget.TextView[@text="${text}"]/parent::android.widget.EditText</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-10-10T16:03:22.915275" elapsed="0.000000"/>
</kw>
<return>
<value>${loc}</value>
<status status="PASS" start="2024-10-10T16:03:22.915275" elapsed="0.000000"/>
</return>
<msg time="2024-10-10T16:03:22.916272" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Masukkan email user"]/parent::android.widget.EditText</msg>
<var>${loc}</var>
<arg>${locEdit}</arg>
<status status="PASS" start="2024-10-10T16:03:22.914278" elapsed="0.001994"/>
</kw>
<kw name="Input Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:03:22.919262" level="INFO">Typing text 'WCYAX JUAFLIEJ' into text field 'xpath=//android.widget.TextView[@text="Masukkan email user"]/parent::android.widget.EditText'</msg>
<msg time="2024-10-10T16:03:23.097981" level="INFO">xpath criteria: //android.widget.TextView[@text="Masukkan email user"]/parent::android.widget.EditText</msg>
<arg>${loc}</arg>
<arg>${rand_text}</arg>
<doc>Types the given `text` into text field identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:03:22.916272" elapsed="0.181709"/>
</kw>
<arg>${text}</arg>
<arg>${locEditext}</arg>
<status status="PASS" start="2024-10-10T16:03:22.914278" elapsed="0.183703"/>
</kw>
<arg>${randomStr}</arg>
<arg>Masukkan email user</arg>
<status status="PASS" start="2024-10-10T16:03:22.913280" elapsed="0.185698"/>
</kw>
<kw name="And user input text (EditText)" owner="userManagementPage">
<kw name="input text (EditText)" owner="generalFunction">
<kw name="Loc Parent EditText" owner="generalFunction">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-10-10T16:03:23.100011" level="INFO">${loc} = xpath=//android.widget.TextView[@text="08xxxxxxxxxx"]/parent::android.widget.EditText</msg>
<var>${loc}</var>
<arg>xpath=//android.widget.TextView[@text="${text}"]/parent::android.widget.EditText</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-10-10T16:03:23.100011" elapsed="0.000000"/>
</kw>
<return>
<value>${loc}</value>
<status status="PASS" start="2024-10-10T16:03:23.100011" elapsed="0.000000"/>
</return>
<msg time="2024-10-10T16:03:23.101008" level="INFO">${loc} = xpath=//android.widget.TextView[@text="08xxxxxxxxxx"]/parent::android.widget.EditText</msg>
<var>${loc}</var>
<arg>${locEdit}</arg>
<status status="PASS" start="2024-10-10T16:03:23.100011" elapsed="0.000997"/>
</kw>
<kw name="Input Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:03:23.103003" level="INFO">Typing text '0848878257' into text field 'xpath=//android.widget.TextView[@text="08xxxxxxxxxx"]/parent::android.widget.EditText'</msg>
<msg time="2024-10-10T16:03:24.716723" level="INFO">xpath criteria: //android.widget.TextView[@text="08xxxxxxxxxx"]/parent::android.widget.EditText</msg>
<arg>${loc}</arg>
<arg>${rand_text}</arg>
<doc>Types the given `text` into text field identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:03:23.101008" elapsed="1.615715"/>
</kw>
<arg>${text}</arg>
<arg>${locEditext}</arg>
<status status="PASS" start="2024-10-10T16:03:23.098978" elapsed="1.617745"/>
</kw>
<arg>${randNumber}</arg>
<arg>08xxxxxxxxxx</arg>
<status status="PASS" start="2024-10-10T16:03:23.098978" elapsed="1.617745"/>
</kw>
<kw name="And user input text (EditText)" owner="userManagementPage">
<kw name="input text (EditText)" owner="generalFunction">
<kw name="Loc Parent EditText" owner="generalFunction">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-10-10T16:03:24.718751" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Masukkan password"]/parent::android.widget.EditText</msg>
<var>${loc}</var>
<arg>xpath=//android.widget.TextView[@text="${text}"]/parent::android.widget.EditText</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-10-10T16:03:24.718751" elapsed="0.000000"/>
</kw>
<return>
<value>${loc}</value>
<status status="PASS" start="2024-10-10T16:03:24.718751" elapsed="0.000000"/>
</return>
<msg time="2024-10-10T16:03:24.718751" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Masukkan password"]/parent::android.widget.EditText</msg>
<var>${loc}</var>
<arg>${locEdit}</arg>
<status status="PASS" start="2024-10-10T16:03:24.717757" elapsed="0.000994"/>
</kw>
<kw name="Input Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:03:24.722703" level="INFO">Typing text 'test1234' into text field 'xpath=//android.widget.TextView[@text="Masukkan password"]/parent::android.widget.EditText'</msg>
<msg time="2024-10-10T16:03:24.905521" level="INFO">xpath criteria: //android.widget.TextView[@text="Masukkan password"]/parent::android.widget.EditText</msg>
<arg>${loc}</arg>
<arg>${rand_text}</arg>
<doc>Types the given `text` into text field identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:03:24.718751" elapsed="0.186770"/>
</kw>
<arg>${text}</arg>
<arg>${locEditext}</arg>
<status status="PASS" start="2024-10-10T16:03:24.717757" elapsed="0.187764"/>
</kw>
<arg>${passwordSite}</arg>
<arg>Masukkan password</arg>
<status status="PASS" start="2024-10-10T16:03:24.716723" elapsed="0.188798"/>
</kw>
<kw name="And user input konfirmasi password" owner="userManagementPage">
<kw name="input password form user management" owner="generalFunction">
<kw name="Loc Parent EditText" owner="generalFunction">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-10-10T16:03:24.907549" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Masukkan Konfirmasi password"]/parent::android.widget.EditText</msg>
<var>${loc}</var>
<arg>xpath=//android.widget.TextView[@text="${text}"]/parent::android.widget.EditText</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-10-10T16:03:24.907549" elapsed="0.000000"/>
</kw>
<return>
<value>${loc}</value>
<status status="PASS" start="2024-10-10T16:03:24.908513" elapsed="0.000000"/>
</return>
<msg time="2024-10-10T16:03:24.908513" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Masukkan Konfirmasi password"]/parent::android.widget.EditText</msg>
<var>${loc}</var>
<arg>${locatorText}</arg>
<status status="PASS" start="2024-10-10T16:03:24.906516" elapsed="0.001997"/>
</kw>
<kw name="Swipe" owner="AppiumLibrary">
<arg>${521}</arg>
<arg>${1798}</arg>
<arg>${530}</arg>
<arg>${1207}</arg>
<doc>Swipe from one point to another point, for an optional duration.</doc>
<status status="PASS" start="2024-10-10T16:03:24.908513" elapsed="1.326842"/>
</kw>
<kw name="Input Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:03:26.238378" level="INFO">Typing text 'test1234' into text field 'xpath=//android.widget.TextView[@text="Masukkan Konfirmasi password"]/parent::android.widget.EditText'</msg>
<msg time="2024-10-10T16:03:26.478973" level="INFO">xpath criteria: //android.widget.TextView[@text="Masukkan Konfirmasi password"]/parent::android.widget.EditText</msg>
<arg>${loc}</arg>
<arg>${password}</arg>
<doc>Types the given `text` into text field identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:03:26.235355" elapsed="0.243618"/>
</kw>
<arg>${text}</arg>
<arg>Masukkan Konfirmasi password</arg>
<status status="PASS" start="2024-10-10T16:03:24.906516" elapsed="1.572457"/>
</kw>
<arg>${passwordSite}</arg>
<status status="PASS" start="2024-10-10T16:03:24.906516" elapsed="1.572457"/>
</kw>
<kw name="And show error message" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:03:26.647789" level="INFO">xpath criteria: //android.widget.TextView[contains(@text, "harus")]</msg>
<arg>${errState}</arg>
<arg>timeout=3s</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:03:26.480999" elapsed="0.166790"/>
</kw>
<msg time="2024-10-10T16:03:26.647789" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${errState}</arg>
<arg>timeout=3s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:03:26.479967" elapsed="0.167822"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:03:26.762115" level="INFO">Element 'xpath=//android.widget.TextView[contains(@text, "harus")]' text is 'Email harus memiliki @ dan domain.' </msg>
<msg time="2024-10-10T16:03:26.762115" level="INFO">xpath criteria: //android.widget.TextView[contains(@text, "harus")]</msg>
<msg time="2024-10-10T16:03:26.762115" level="INFO">${text} = Email harus memiliki @ dan domain.</msg>
<var>${text}</var>
<arg>${errState}</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:03:26.648787" elapsed="0.113328"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Error Log: ${text}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-10-10T16:03:26.762115" elapsed="0.000998"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${text}</arg>
<arg>${errMsg}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-10-10T16:03:26.763113" elapsed="0.000998"/>
</kw>
<status status="PASS" start="2024-10-10T16:03:26.648787" elapsed="0.115324"/>
</branch>
<branch type="ELSE">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${hasRegistered}</arg>
<arg>timeout=3s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:26.764111" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<var>${text}</var>
<arg>${hasRegistered}</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="NOT RUN" start="2024-10-10T16:03:26.765109" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Error Log: ${text}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:26.765109" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${text}</arg>
<arg>${errMsg}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:26.765109" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:26.764111" elapsed="0.000998"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>N/A</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:26.765109" elapsed="0.000000"/>
</kw>
<kw name="Get Text" owner="AppiumLibrary">
<var>${text}</var>
<arg>${notPassVerif}</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="NOT RUN" start="2024-10-10T16:03:26.765109" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Error Log: ${text}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:26.766142" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:26.765109" elapsed="0.001033"/>
</branch>
<status status="NOT RUN" start="2024-10-10T16:03:26.764111" elapsed="0.002031"/>
</if>
<status status="NOT RUN" start="2024-10-10T16:03:26.764111" elapsed="0.002031"/>
</branch>
<status status="PASS" start="2024-10-10T16:03:26.648787" elapsed="0.117355"/>
</if>
<arg>Email harus memiliki @ dan domain.</arg>
<status status="PASS" start="2024-10-10T16:03:26.479967" elapsed="0.286175"/>
</kw>
<kw name="And user click button (parent view)" owner="generalFunction">
<kw name="Loc Parent View" owner="generalFunction">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-10-10T16:03:26.767137" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Tambah"]/parent::android.view.View</msg>
<var>${loc}</var>
<arg>xpath=//android.widget.TextView[@text="${text}"]/parent::android.view.View</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-10-10T16:03:26.767137" elapsed="0.000000"/>
</kw>
<return>
<value>${loc}</value>
<status status="PASS" start="2024-10-10T16:03:26.767137" elapsed="0.000000"/>
</return>
<msg time="2024-10-10T16:03:26.767137" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Tambah"]/parent::android.view.View</msg>
<var>${loc}</var>
<arg>${btn}</arg>
<status status="PASS" start="2024-10-10T16:03:26.766142" elapsed="0.000995"/>
</kw>
<kw name="Click Element" owner="AppiumLibrary">
<msg time="2024-10-10T16:03:26.770131" level="INFO">Clicking element 'xpath=//android.widget.TextView[@text="Tambah"]/parent::android.view.View'.</msg>
<msg time="2024-10-10T16:03:26.967205" level="INFO">xpath criteria: //android.widget.TextView[@text="Tambah"]/parent::android.view.View</msg>
<arg>${loc}</arg>
<doc>Click element identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:03:26.767137" elapsed="0.200068"/>
</kw>
<arg>Tambah</arg>
<status status="PASS" start="2024-10-10T16:03:26.766142" elapsed="0.201063"/>
</kw>
<status status="PASS" start="2024-10-10T16:03:09.568828" elapsed="17.398377"/>
</kw>
<kw name="Close App" owner="openApp" type="TEARDOWN">
<kw name="Close Application" owner="AppiumLibrary">
<doc>Closes the current application and also close webdriver session.</doc>
<status status="PASS" start="2024-10-10T16:03:26.968201" elapsed="0.463764"/>
</kw>
<status status="PASS" start="2024-10-10T16:03:26.968201" elapsed="0.463764"/>
</kw>
<doc>This scenario test User Create User Management (Site/PIC) with invalid format email</doc>
<tag>1000s</tag>
<tag>test</tag>
<tag>user management</tag>
<status status="PASS" start="2024-10-10T16:03:01.619103" elapsed="25.813860"/>
</test>
<test id="s1-t3" name="Test Create User Management with format No Telp invalid" line="20">
<kw name="Open app Dev Project" owner="openApp" type="SETUP">
<kw name="Open Application" owner="AppiumLibrary">
<arg>http://127.0.0.1:4723</arg>
<arg>platformName=${platformName}</arg>
<arg>deviceName=${udid}</arg>
<arg>appPackage=${appPackage}</arg>
<arg>appActivity=${appActivity}</arg>
<arg>automationName=UiAutomator2</arg>
<doc>Opens a new application to given Appium server.
Capabilities of appium server, Android and iOS,
Please check https://appium.io/docs/en/2.1/cli/args/
| *Option*            | *Man.* | *Description*     |
| remote_url          | Yes    | Appium server url |
| alias               | no     | alias             |
| strict_ssl          | No     | allows you to send commands to an invalid certificate host like a self-signed one. |</doc>
<status status="PASS" start="2024-10-10T16:03:27.435012" elapsed="7.932594"/>
</kw>
<status status="PASS" start="2024-10-10T16:03:27.435012" elapsed="7.932594"/>
</kw>
<kw name="User create User Management without format No Handphone valid" owner="userManagement">
<kw name="Given user go to User Management page" owner="userManagementPage">
<kw name="User Login" owner="loginPage">
<kw name="Given user input no handphone" owner="loginPage">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:03:37.286195" level="INFO">xpath criteria: //android.widget.TextView[@text="Login"]</msg>
<arg>${titleLogin}</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:03:35.370601" elapsed="1.915594"/>
</kw>
<kw name="Input Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:03:37.290214" level="INFO">Typing text '088210068283' into text field 'xpath=//android.widget.EditText[1]'</msg>
<msg time="2024-10-10T16:03:37.484270" level="INFO">xpath criteria: //android.widget.EditText[1]</msg>
<arg>${inputNoHandphone}</arg>
<arg>${noHandphone}</arg>
<doc>Types the given `text` into text field identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:03:37.286195" elapsed="0.198075"/>
</kw>
<arg>${akunOP}</arg>
<status status="PASS" start="2024-10-10T16:03:35.369605" elapsed="2.114665"/>
</kw>
<kw name="When user input password" owner="loginPage">
<kw name="Input Password" owner="AppiumLibrary">
<msg time="2024-10-10T16:03:37.489288" level="INFO">Typing password into text field 'xpath=//android.widget.EditText[2]'</msg>
<msg time="2024-10-10T16:03:37.882650" level="INFO">xpath criteria: //android.widget.EditText[2]</msg>
<arg>${inputPassword}</arg>
<arg>${password}</arg>
<doc>Types the given password into text field identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:03:37.485265" elapsed="0.397385"/>
</kw>
<arg>${passwordProject}</arg>
<status status="PASS" start="2024-10-10T16:03:37.484270" elapsed="0.398380"/>
</kw>
<kw name="Then click button masuk" owner="loginPage">
<kw name="Click Element" owner="AppiumLibrary">
<msg time="2024-10-10T16:03:37.886638" level="INFO">Clicking element 'xpath=//android.view.View/android.view.View[2]'.</msg>
<msg time="2024-10-10T16:03:38.256155" level="INFO">xpath criteria: //android.view.View/android.view.View[2]</msg>
<arg>${buttonMasuk}</arg>
<doc>Click element identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:03:37.883683" elapsed="0.372472"/>
</kw>
<status status="PASS" start="2024-10-10T16:03:37.882650" elapsed="0.373505"/>
</kw>
<kw name="And home Project" owner="loginPage">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<arg>accessibility_id=Icon Projects</arg>
<arg>timeout=10s</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:03:38.257153" elapsed="2.466911"/>
</kw>
<kw name="Element Should Be Visible" owner="AppiumLibrary">
<arg>accessibility_id=Icon Projects</arg>
<doc>Verifies that element identified with locator is visible.</doc>
<status status="PASS" start="2024-10-10T16:03:40.725065" elapsed="0.431225"/>
</kw>
<kw name="Element Should Be Visible" owner="AppiumLibrary">
<arg>accessibility_id=Notification</arg>
<doc>Verifies that element identified with locator is visible.</doc>
<status status="PASS" start="2024-10-10T16:03:41.157284" elapsed="0.127493"/>
</kw>
<kw name="Element Should Be Visible" owner="AppiumLibrary">
<arg>accessibility_id=Icon Search</arg>
<doc>Verifies that element identified with locator is visible.</doc>
<status status="PASS" start="2024-10-10T16:03:41.284777" elapsed="0.109964"/>
</kw>
<status status="PASS" start="2024-10-10T16:03:38.256155" elapsed="3.138586"/>
</kw>
<status status="PASS" start="2024-10-10T16:03:35.369605" elapsed="6.025136"/>
</kw>
<kw name="Loc Parent View" owner="generalFunction">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-10-10T16:03:41.396735" level="INFO">${loc} = xpath=//android.widget.TextView[@text="User Management"]/parent::android.view.View</msg>
<var>${loc}</var>
<arg>xpath=//android.widget.TextView[@text="${text}"]/parent::android.view.View</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-10-10T16:03:41.395734" elapsed="0.001001"/>
</kw>
<return>
<value>${loc}</value>
<status status="PASS" start="2024-10-10T16:03:41.396735" elapsed="0.000000"/>
</return>
<msg time="2024-10-10T16:03:41.396735" level="INFO">${loc} = xpath=//android.widget.TextView[@text="User Management"]/parent::android.view.View</msg>
<var>${loc}</var>
<arg>User Management</arg>
<status status="PASS" start="2024-10-10T16:03:41.395734" elapsed="0.001001"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:03:41.592837" level="INFO">xpath criteria: //android.widget.TextView[@text="User Management"]/parent::android.view.View</msg>
<arg>${loc}</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:03:41.396735" elapsed="0.196102"/>
</kw>
<kw name="Click Element" owner="AppiumLibrary">
<msg time="2024-10-10T16:03:41.595828" level="INFO">Clicking element 'xpath=//android.widget.TextView[@text="User Management"]/parent::android.view.View'.</msg>
<msg time="2024-10-10T16:03:41.822349" level="INFO">xpath criteria: //android.widget.TextView[@text="User Management"]/parent::android.view.View</msg>
<arg>${loc}</arg>
<doc>Click element identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:03:41.592837" elapsed="0.229512"/>
</kw>
<status status="PASS" start="2024-10-10T16:03:35.368603" elapsed="6.453746"/>
</kw>
<kw name="And Get Detail Text User Management" owner="userManagementPage">
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-10-10T16:03:41.824340" level="INFO">${random} = 1</msg>
<var>${random}</var>
<arg>random.randint(1, 3)</arg>
<arg>modules=random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-10-10T16:03:41.823345" elapsed="0.000995"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:03:41.824340" level="INFO">${indexUser} = 1</msg>
<arg>${indexUser}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:03:41.824340" elapsed="0.000000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-10-10T16:03:41.825337" level="INFO">Random : 1</msg>
<arg>Random : ${random}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-10-10T16:03:41.825337" elapsed="0.000000"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-10-10T16:03:41.825337" level="INFO">Length is 103.</msg>
<msg time="2024-10-10T16:03:41.825337" level="INFO">${len} = 103</msg>
<var>${len}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-10-10T16:03:41.825337" elapsed="0.000000"/>
</kw>
<for flavor="IN RANGE">
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:03:42.774173" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[1]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[1]/parent::android.view.View</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:03:41.827331" elapsed="0.946842"/>
</kw>
<msg time="2024-10-10T16:03:42.774173" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:03:41.827331" elapsed="0.946842"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:03:42.982394" level="INFO">Element 'xpath=(//android.view.View[@content-desc="Image"])[1]/parent::android.view.View/android.widget.TextView[1]' text is 'CaZz' </msg>
<msg time="2024-10-10T16:03:42.983392" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[1]/parent::android.view.View/android.widget.TextView[1]</msg>
<msg time="2024-10-10T16:03:42.983392" level="INFO">${name} = CaZz</msg>
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:03:42.775171" elapsed="0.208221"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:03:42.984391" level="INFO">${name} = CaZz</msg>
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:03:42.983392" elapsed="0.000999"/>
</kw>
<status status="PASS" start="2024-10-10T16:03:42.774173" elapsed="0.210218"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:42.984391" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:42.984391" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:03:42.774173" elapsed="0.210218"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:03:41.826334" elapsed="1.158057"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:03:42.985387" level="INFO">${nameUserManagement} = CaZz</msg>
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:03:42.985387" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-10-10T16:03:42.985387" elapsed="0.000932"/>
</kw>
<status status="PASS" start="2024-10-10T16:03:41.826334" elapsed="1.159985"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:42.986319" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:42.986319" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:42.987324" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:42.986319" elapsed="0.001005"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:42.987324" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:42.987324" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:42.988320" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:42.988320" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:42.988320" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:42.988320" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:42.988320" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:42.987324" elapsed="0.000996"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:42.989315" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:42.988320" elapsed="0.000995"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:42.989315" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:42.989315" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:42.989315" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:42.989315" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:42.990315" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:42.990315" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:42.990315" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:42.991313" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:42.991313" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:42.990315" elapsed="0.000998"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:03:42.991313" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:03:42.991313" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:03:41.826334" elapsed="1.164979"/>
</if>
<var name="${counter}">1</var>
<status status="PASS" start="2024-10-10T16:03:41.826334" elapsed="1.164979"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:42.992310" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:42.992310" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:42.992310" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:42.992310" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:03:43.197299" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[1]/parent::android.view.View</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:03:42.994305" elapsed="0.202994"/>
</kw>
<msg time="2024-10-10T16:03:43.198297" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:03:42.994305" elapsed="0.203992"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:03:43.364254" level="INFO">Element 'xpath=(//android.view.View[@content-desc="Image"])[1]/parent::android.view.View/android.widget.TextView[2]' text is 'a' </msg>
<msg time="2024-10-10T16:03:43.364254" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[1]/parent::android.view.View/android.widget.TextView[2]</msg>
<msg time="2024-10-10T16:03:43.364254" level="INFO">${name} = a</msg>
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:03:43.198297" elapsed="0.165957"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:03:43.365249" level="INFO">${name} = a</msg>
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:03:43.365249" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-10-10T16:03:43.198297" elapsed="0.166952"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:43.365249" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:43.365249" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:03:43.198297" elapsed="0.166952"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:03:42.993307" elapsed="0.372905"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:03:43.366212" level="INFO">${jabatan} = a</msg>
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:03:43.366212" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-10-10T16:03:43.366212" elapsed="0.001045"/>
</kw>
<status status="PASS" start="2024-10-10T16:03:42.993307" elapsed="0.373950"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:43.367257" elapsed="0.001002"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:43.367257" elapsed="0.001002"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:43.368259" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:43.368259" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:43.368259" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:43.369295" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:43.369295" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:43.368259" elapsed="0.001036"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:43.369295" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:43.369295" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:43.369295" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:43.370253" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:43.370253" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:43.369295" elapsed="0.000958"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:43.370253" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:43.370253" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:43.371286" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:43.371286" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:43.371286" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:43.370253" elapsed="0.001033"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:03:43.371286" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:03:43.371286" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:03:42.992310" elapsed="0.378976"/>
</if>
<var name="${counter}">2</var>
<status status="PASS" start="2024-10-10T16:03:42.992310" elapsed="0.378976"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:43.373247" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:43.373247" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:43.373247" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:43.372285" elapsed="0.000962"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:43.373247" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:43.373247" elapsed="0.001032"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:43.374279" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:43.373247" elapsed="0.001032"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:03:43.524524" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[1]/parent::android.view.View</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:03:43.375277" elapsed="0.149247"/>
</kw>
<msg time="2024-10-10T16:03:43.524524" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:03:43.375277" elapsed="0.149247"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:03:44.066259" level="INFO">Element 'xpath=(//android.view.View[@content-desc="Image"])[1]/parent::android.view.View/android.widget.TextView[3]' text is 'Nomor handphone' </msg>
<msg time="2024-10-10T16:03:44.066259" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[1]/parent::android.view.View/android.widget.TextView[3]</msg>
<msg time="2024-10-10T16:03:44.066259" level="INFO">${name} = Nomor handphone</msg>
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:03:43.524524" elapsed="0.541735"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:03:44.066259" level="INFO">${name} = Nomor handphone</msg>
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:03:44.066259" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-10-10T16:03:43.524524" elapsed="0.541735"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:44.067255" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:44.066259" elapsed="0.000996"/>
</branch>
<status status="PASS" start="2024-10-10T16:03:43.524524" elapsed="0.542731"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:03:43.374279" elapsed="0.692976"/>
</kw>
<status status="PASS" start="2024-10-10T16:03:43.374279" elapsed="0.692976"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:44.067255" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:44.067255" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:44.067255" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:44.068256" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:44.068256" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:44.067255" elapsed="0.001001"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:44.068256" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:44.068256" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:44.068256" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:44.069252" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:44.069252" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:44.068256" elapsed="0.000996"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:44.069252" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:44.069252" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:44.069252" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:44.070248" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:44.070248" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:44.069252" elapsed="0.000996"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:03:44.070248" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:03:44.070248" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:03:43.372285" elapsed="0.697963"/>
</if>
<var name="${counter}">3</var>
<status status="PASS" start="2024-10-10T16:03:43.372285" elapsed="0.697963"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:44.071226" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:44.072244" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:44.072244" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:44.071226" elapsed="0.001018"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:44.072244" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:44.072244" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:44.073242" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:44.072244" elapsed="0.000998"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:44.073242" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:44.073242" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:03:44.231859" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[1]/parent::android.view.View</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:03:44.074200" elapsed="0.157659"/>
</kw>
<msg time="2024-10-10T16:03:44.231859" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:03:44.074200" elapsed="0.157659"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:03:44.383140" level="INFO">Element 'xpath=(//android.view.View[@content-desc="Image"])[1]/parent::android.view.View/android.widget.TextView[4]' text is '0800-0000-001' </msg>
<msg time="2024-10-10T16:03:44.383140" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[1]/parent::android.view.View/android.widget.TextView[4]</msg>
<msg time="2024-10-10T16:03:44.384138" level="INFO">${name} = 0800-0000-001</msg>
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:03:44.232853" elapsed="0.151285"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:03:44.384138" level="INFO">${name} = 0800-0000-001</msg>
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:03:44.384138" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-10-10T16:03:44.232853" elapsed="0.151285"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:44.384138" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:44.384138" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:03:44.232853" elapsed="0.151285"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:03:44.074200" elapsed="0.310935"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:03:44.385135" level="INFO">${noTelp} = 0800-0000-001</msg>
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:03:44.385135" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-10-10T16:03:44.385135" elapsed="0.000997"/>
</kw>
<kw name="Replace String" owner="String">
<msg time="2024-10-10T16:03:44.387130" level="INFO">${replaceNumb} = 08000000001</msg>
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-10-10T16:03:44.386132" elapsed="0.000998"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:03:44.388131" level="INFO">${replaceNumb} = 08000000001</msg>
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:03:44.388131" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-10-10T16:03:44.073242" elapsed="0.314889"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:44.388131" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:44.388131" elapsed="0.000996"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:44.389127" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:44.389127" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:44.390126" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:44.389127" elapsed="0.000999"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:44.390126" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:44.390126" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:44.390126" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:44.391123" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:44.391123" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:44.390126" elapsed="0.000997"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:03:44.391123" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:03:44.391123" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:03:44.071226" elapsed="0.319897"/>
</if>
<var name="${counter}">4</var>
<status status="PASS" start="2024-10-10T16:03:44.071226" elapsed="0.319897"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:44.392120" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:44.392120" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:44.393117" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:44.392120" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:44.393117" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:44.394115" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:44.394115" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:44.393117" elapsed="0.000998"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:44.394115" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:44.394115" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:44.395109" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:44.395109" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:44.395109" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:44.395109" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:44.396111" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:44.394115" elapsed="0.001996"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:03:44.568121" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[1]/parent::android.view.View</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:03:44.397107" elapsed="0.171014"/>
</kw>
<msg time="2024-10-10T16:03:44.568121" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:03:44.397107" elapsed="0.172013"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:03:44.729811" level="INFO">Element 'xpath=(//android.view.View[@content-desc="Image"])[1]/parent::android.view.View/android.widget.TextView[5]' text is 'Email' </msg>
<msg time="2024-10-10T16:03:44.729811" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[1]/parent::android.view.View/android.widget.TextView[5]</msg>
<msg time="2024-10-10T16:03:44.730808" level="INFO">${name} = Email</msg>
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:03:44.569120" elapsed="0.161688"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:03:44.730808" level="INFO">${name} = Email</msg>
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:03:44.730808" elapsed="0.001002"/>
</kw>
<status status="PASS" start="2024-10-10T16:03:44.569120" elapsed="0.162690"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:44.731810" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:44.731810" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:03:44.569120" elapsed="0.162690"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:03:44.396111" elapsed="0.335699"/>
</kw>
<status status="PASS" start="2024-10-10T16:03:44.396111" elapsed="0.335699"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:44.731810" elapsed="0.000997"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:44.732807" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:44.732807" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:44.731810" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:44.732807" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:44.732807" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:44.733804" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:44.733804" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:44.733804" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:44.732807" elapsed="0.000997"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:03:44.733804" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:03:44.733804" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:03:44.392120" elapsed="0.341684"/>
</if>
<var name="${counter}">5</var>
<status status="PASS" start="2024-10-10T16:03:44.392120" elapsed="0.342681"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:44.734801" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:44.735799" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:44.735799" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:44.734801" elapsed="0.000998"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:44.735799" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:44.735799" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:44.736795" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:44.735799" elapsed="0.000996"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:44.736795" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:44.736795" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:44.736795" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:44.737792" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:44.737792" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:44.737792" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:44.737792" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:44.736795" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:44.738790" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:44.737792" elapsed="0.000998"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:03:44.929492" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[1]/parent::android.view.View</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:03:44.739788" elapsed="0.190700"/>
</kw>
<msg time="2024-10-10T16:03:44.930488" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:03:44.739788" elapsed="0.190700"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:03:45.088023" level="INFO">Element 'xpath=(//android.view.View[@content-desc="Image"])[1]/parent::android.view.View/android.widget.TextView[6]' text is 'b@yopmail.com' </msg>
<msg time="2024-10-10T16:03:45.088023" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[1]/parent::android.view.View/android.widget.TextView[6]</msg>
<msg time="2024-10-10T16:03:45.088023" level="INFO">${name} = b@yopmail.com</msg>
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:03:44.930488" elapsed="0.158533"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:03:45.089021" level="INFO">${name} = b@yopmail.com</msg>
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:03:45.089021" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-10-10T16:03:44.930488" elapsed="0.158533"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:45.090019" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:45.089021" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-10-10T16:03:44.930488" elapsed="0.159531"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:03:44.738790" elapsed="0.351229"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:03:45.090019" level="INFO">${email} = b@yopmail.com</msg>
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:03:45.090019" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-10-10T16:03:45.090019" elapsed="0.000996"/>
</kw>
<status status="PASS" start="2024-10-10T16:03:44.738790" elapsed="0.352225"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:45.092011" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:45.091015" elapsed="0.000996"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:45.092011" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:45.093008" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:45.093008" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:45.092011" elapsed="0.000997"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:03:45.093008" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:03:45.093008" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:03:44.734801" elapsed="0.358207"/>
</if>
<var name="${counter}">6</var>
<status status="PASS" start="2024-10-10T16:03:44.734801" elapsed="0.358207"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:45.094043" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:45.094043" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:45.095037" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:45.094043" elapsed="0.000994"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:45.095037" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:45.095037" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:45.095037" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:45.095037" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:45.096034" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:45.095037" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:45.097034" elapsed="0.000998"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:45.098032" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:45.098032" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:45.098032" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:45.098993" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:45.096034" elapsed="0.002959"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:45.098993" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:45.098993" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:45.098993" elapsed="0.001034"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:45.100027" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:45.100027" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:45.098993" elapsed="0.001034"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:03:45.248425" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[1]/parent::android.view.View</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:03:45.101021" elapsed="0.147404"/>
</kw>
<msg time="2024-10-10T16:03:45.248425" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:03:45.101021" elapsed="0.147404"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:03:45.400096" level="INFO">Element 'xpath=(//android.view.View[@content-desc="Image"])[1]/parent::android.view.View/android.widget.TextView[7]' text is 'Project aktif' </msg>
<msg time="2024-10-10T16:03:45.400096" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[1]/parent::android.view.View/android.widget.TextView[7]</msg>
<msg time="2024-10-10T16:03:45.400096" level="INFO">${name} = Project aktif</msg>
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:03:45.249426" elapsed="0.150670"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:03:45.400096" level="INFO">${name} = Project aktif</msg>
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:03:45.400096" elapsed="0.000995"/>
</kw>
<status status="PASS" start="2024-10-10T16:03:45.249426" elapsed="0.151665"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:45.401091" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:45.401091" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:03:45.249426" elapsed="0.151665"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:03:45.100027" elapsed="0.301064"/>
</kw>
<status status="PASS" start="2024-10-10T16:03:45.100027" elapsed="0.301064"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:45.401091" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:45.402088" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:45.402088" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:45.401091" elapsed="0.000997"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:03:45.402088" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:03:45.402088" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:03:45.094043" elapsed="0.308045"/>
</if>
<var name="${counter}">7</var>
<status status="PASS" start="2024-10-10T16:03:45.094043" elapsed="0.308045"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:45.403087" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:45.403087" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:45.403087" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:45.402088" elapsed="0.000999"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:45.404083" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:45.404083" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:45.404083" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:45.403087" elapsed="0.000996"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:45.404083" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:45.404083" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:45.405083" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:45.405083" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:45.405083" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:45.406078" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:45.406078" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:45.404083" elapsed="0.001995"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:45.406078" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:45.406078" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:45.407075" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:45.408041" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:45.408041" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:45.406078" elapsed="0.001963"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:45.408041" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:45.408041" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:03:45.551088" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[1]/parent::android.view.View</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:03:45.409038" elapsed="0.142050"/>
</kw>
<msg time="2024-10-10T16:03:45.551088" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:03:45.409038" elapsed="0.142050"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:03:45.689712" level="INFO">Element 'xpath=(//android.view.View[@content-desc="Image"])[1]/parent::android.view.View/android.widget.TextView[8]' text is '0' </msg>
<msg time="2024-10-10T16:03:45.689712" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[1]/parent::android.view.View/android.widget.TextView[8]</msg>
<msg time="2024-10-10T16:03:45.689712" level="INFO">${name} = 0</msg>
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:03:45.552086" elapsed="0.137626"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:03:45.690709" level="INFO">${name} = 0</msg>
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:03:45.690709" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-10-10T16:03:45.551088" elapsed="0.139621"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:45.690709" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:45.690709" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:03:45.551088" elapsed="0.139621"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:03:45.409038" elapsed="0.281671"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:03:45.691707" level="INFO">${projActive} = 0</msg>
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:03:45.690709" elapsed="0.000998"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-10-10T16:03:45.691707" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2024-10-10T16:03:45.408041" elapsed="0.284666"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:03:45.692707" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:03:45.692707" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:03:45.402088" elapsed="0.290619"/>
</if>
<var name="${counter}">8</var>
<status status="PASS" start="2024-10-10T16:03:45.402088" elapsed="0.291615"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:45.694700" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:45.694700" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:45.695696" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:45.693703" elapsed="0.001993"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:45.695696" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:45.695696" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:45.695696" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:45.695696" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:45.696693" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:45.696693" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:45.696693" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:45.696693" elapsed="0.000997"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:45.697690" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:45.697690" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:45.697690" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:45.696693" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:45.698688" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:45.697690" elapsed="0.000998"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:45.698688" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:45.698688" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:45.698688" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:45.698688" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:45.699685" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:45.698688" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:03:45.700683" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:45.700683" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:45.700683" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:45.699685" elapsed="0.000998"/>
</branch>
<branch type="ELSE">
<break>
<status status="PASS" start="2024-10-10T16:03:45.700683" elapsed="0.000000"/>
</break>
<status status="PASS" start="2024-10-10T16:03:45.700683" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:03:45.693703" elapsed="0.006980"/>
</if>
<var name="${counter}">9</var>
<status status="PASS" start="2024-10-10T16:03:45.693703" elapsed="0.006980"/>
</iter>
<var>${counter}</var>
<value>1</value>
<value>${len}</value>
<status status="PASS" start="2024-10-10T16:03:41.825337" elapsed="3.875346"/>
</for>
<status status="PASS" start="2024-10-10T16:03:41.823345" elapsed="3.877338"/>
</kw>
<kw name="When user add user management" owner="userManagementPage">
<kw name="home Project" owner="loginPage">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<arg>accessibility_id=Icon Projects</arg>
<arg>timeout=10s</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:03:45.701679" elapsed="0.100141"/>
</kw>
<kw name="Element Should Be Visible" owner="AppiumLibrary">
<arg>accessibility_id=Icon Projects</arg>
<doc>Verifies that element identified with locator is visible.</doc>
<status status="PASS" start="2024-10-10T16:03:45.801820" elapsed="0.110195"/>
</kw>
<kw name="Element Should Be Visible" owner="AppiumLibrary">
<arg>accessibility_id=Notification</arg>
<doc>Verifies that element identified with locator is visible.</doc>
<status status="PASS" start="2024-10-10T16:03:45.913009" elapsed="0.124394"/>
</kw>
<kw name="Element Should Be Visible" owner="AppiumLibrary">
<arg>accessibility_id=Icon Search</arg>
<doc>Verifies that element identified with locator is visible.</doc>
<status status="PASS" start="2024-10-10T16:03:46.037403" elapsed="0.119005"/>
</kw>
<status status="PASS" start="2024-10-10T16:03:45.701679" elapsed="0.454729"/>
</kw>
<kw name="Loc Parent View" owner="generalFunction">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-10-10T16:03:46.157404" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Tambah User"]/parent::android.view.View</msg>
<var>${loc}</var>
<arg>xpath=//android.widget.TextView[@text="${text}"]/parent::android.view.View</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-10-10T16:03:46.157404" elapsed="0.000000"/>
</kw>
<return>
<value>${loc}</value>
<status status="PASS" start="2024-10-10T16:03:46.157404" elapsed="0.000000"/>
</return>
<msg time="2024-10-10T16:03:46.157404" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Tambah User"]/parent::android.view.View</msg>
<var>${loc}</var>
<arg>Tambah User</arg>
<status status="PASS" start="2024-10-10T16:03:46.156408" elapsed="0.002029"/>
</kw>
<kw name="Click Element" owner="AppiumLibrary">
<msg time="2024-10-10T16:03:46.161428" level="INFO">Clicking element 'xpath=//android.widget.TextView[@text="Tambah User"]/parent::android.view.View'.</msg>
<msg time="2024-10-10T16:03:47.165812" level="INFO">xpath criteria: //android.widget.TextView[@text="Tambah User"]/parent::android.view.View</msg>
<arg>${loc}</arg>
<doc>Click element identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:03:46.158437" elapsed="1.007375"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:03:47.331704" level="INFO">xpath criteria: //android.widget.ScrollView//following-sibling::android.widget.TextView[contains(@text, "upload file")]</msg>
<arg>${textUploadFile}</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:03:47.165812" elapsed="0.166888"/>
</kw>
<status status="PASS" start="2024-10-10T16:03:45.701679" elapsed="1.631021"/>
</kw>
<kw name="And user input Nama user management" owner="userManagementPage">
<kw name="Generate Simple Random Name" owner="generalFunction">
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-10-10T16:03:47.334693" level="INFO">${name} = BDHDK CLKGYGFM</msg>
<var>${name}</var>
<arg>''.join(random.choices('ABCDEFGHIJKLMNOPQRSTUVWXYZ', k=5)) + ' ' + ''.join(random.choices('ABCDEFGHIJKLMNOPQRSTUVWXYZ', k=8))</arg>
<arg>modules=random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-10-10T16:03:47.333698" elapsed="0.000995"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:03:47.335691" level="INFO">${randomStr} = BDHDK CLKGYGFM</msg>
<arg>${randomStr}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:03:47.334693" elapsed="0.000998"/>
</kw>
<status status="PASS" start="2024-10-10T16:03:47.333698" elapsed="0.001993"/>
</kw>
<kw name="Generate Random Phone Number" owner="generalFunction">
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-10-10T16:03:47.336687" level="INFO">${random_number} = 0872594421</msg>
<var>${random_number}</var>
<arg>'08' + str(random.randint(10000000, 99999999))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-10-10T16:03:47.336687" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:03:47.337685" level="INFO">${randNumber} = 0872594421</msg>
<arg>${randNumber}</arg>
<arg>${random_number}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:03:47.337685" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-10-10T16:03:47.335691" elapsed="0.002992"/>
</kw>
<kw name="Generate Random Email" owner="generalFunction">
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-10-10T16:03:47.339684" level="INFO">${name} = pbrkbjir</msg>
<var>${name}</var>
<arg>''.join(random.choices('abcdefghijklmnopqrtuvwxyz', k=8))</arg>
<arg>modules=random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-10-10T16:03:47.338683" elapsed="0.001001"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-10-10T16:03:47.339684" level="INFO">${nameEmail} = pbrkbjir@gmail.com</msg>
<var>${nameEmail}</var>
<arg>${name}@gmail.com</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-10-10T16:03:47.339684" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:03:47.340680" level="INFO">${randomEmail} = pbrkbjir@gmail.com</msg>
<arg>${randomEmail}</arg>
<arg>${nameEmail}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:03:47.340680" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-10-10T16:03:47.338683" elapsed="0.001997"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:03:47.341676" level="INFO">${nameUser} = BDHDK CLKGYGFM</msg>
<arg>${nameUser}</arg>
<arg>${randomStr}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:03:47.340680" elapsed="0.000996"/>
</kw>
<kw name="input text (EditText)" owner="generalFunction">
<kw name="Loc Parent EditText" owner="generalFunction">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-10-10T16:03:47.342674" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Masukkan nama user"]/parent::android.widget.EditText</msg>
<var>${loc}</var>
<arg>xpath=//android.widget.TextView[@text="${text}"]/parent::android.widget.EditText</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-10-10T16:03:47.342674" elapsed="0.000000"/>
</kw>
<return>
<value>${loc}</value>
<status status="PASS" start="2024-10-10T16:03:47.342674" elapsed="0.000000"/>
</return>
<msg time="2024-10-10T16:03:47.342674" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Masukkan nama user"]/parent::android.widget.EditText</msg>
<var>${loc}</var>
<arg>${locEdit}</arg>
<status status="PASS" start="2024-10-10T16:03:47.341676" elapsed="0.000998"/>
</kw>
<kw name="Input Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:03:47.346663" level="INFO">Typing text 'BDHDK CLKGYGFM' into text field 'xpath=//android.widget.TextView[@text="Masukkan nama user"]/parent::android.widget.EditText'</msg>
<msg time="2024-10-10T16:03:47.482340" level="INFO">xpath criteria: //android.widget.TextView[@text="Masukkan nama user"]/parent::android.widget.EditText</msg>
<arg>${loc}</arg>
<arg>${rand_text}</arg>
<doc>Types the given `text` into text field identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:03:47.342674" elapsed="0.140663"/>
</kw>
<arg>${randomStr}</arg>
<arg>Masukkan nama user</arg>
<status status="PASS" start="2024-10-10T16:03:47.341676" elapsed="0.141661"/>
</kw>
<status status="PASS" start="2024-10-10T16:03:47.332700" elapsed="0.150637"/>
</kw>
<kw name="Then user input text (EditText)" owner="userManagementPage">
<kw name="input text (EditText)" owner="generalFunction">
<kw name="Loc Parent EditText" owner="generalFunction">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-10-10T16:03:47.485330" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Masukan jabatan user"]/parent::android.widget.EditText</msg>
<var>${loc}</var>
<arg>xpath=//android.widget.TextView[@text="${text}"]/parent::android.widget.EditText</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-10-10T16:03:47.484335" elapsed="0.000995"/>
</kw>
<return>
<value>${loc}</value>
<status status="PASS" start="2024-10-10T16:03:47.485330" elapsed="0.000000"/>
</return>
<msg time="2024-10-10T16:03:47.485330" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Masukan jabatan user"]/parent::android.widget.EditText</msg>
<var>${loc}</var>
<arg>${locEdit}</arg>
<status status="PASS" start="2024-10-10T16:03:47.484335" elapsed="0.000995"/>
</kw>
<kw name="Input Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:03:47.489321" level="INFO">Typing text 'BDHDK CLKGYGFM' into text field 'xpath=//android.widget.TextView[@text="Masukan jabatan user"]/parent::android.widget.EditText'</msg>
<msg time="2024-10-10T16:03:47.683013" level="INFO">xpath criteria: //android.widget.TextView[@text="Masukan jabatan user"]/parent::android.widget.EditText</msg>
<arg>${loc}</arg>
<arg>${rand_text}</arg>
<doc>Types the given `text` into text field identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:03:47.485330" elapsed="0.197683"/>
</kw>
<arg>${text}</arg>
<arg>${locEditext}</arg>
<status status="PASS" start="2024-10-10T16:03:47.484335" elapsed="0.198678"/>
</kw>
<arg>${randomStr}</arg>
<arg>Masukan jabatan user</arg>
<status status="PASS" start="2024-10-10T16:03:47.483337" elapsed="0.199676"/>
</kw>
<kw name="And user input text (EditText)" owner="userManagementPage">
<kw name="input text (EditText)" owner="generalFunction">
<kw name="Loc Parent EditText" owner="generalFunction">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-10-10T16:03:47.686040" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Masukkan email user"]/parent::android.widget.EditText</msg>
<var>${loc}</var>
<arg>xpath=//android.widget.TextView[@text="${text}"]/parent::android.widget.EditText</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-10-10T16:03:47.685029" elapsed="0.001011"/>
</kw>
<return>
<value>${loc}</value>
<status status="PASS" start="2024-10-10T16:03:47.686040" elapsed="0.000000"/>
</return>
<msg time="2024-10-10T16:03:47.686040" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Masukkan email user"]/parent::android.widget.EditText</msg>
<var>${loc}</var>
<arg>${locEdit}</arg>
<status status="PASS" start="2024-10-10T16:03:47.685029" elapsed="0.001011"/>
</kw>
<kw name="Input Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:03:47.689032" level="INFO">Typing text 'pbrkbjir@gmail.com' into text field 'xpath=//android.widget.TextView[@text="Masukkan email user"]/parent::android.widget.EditText'</msg>
<msg time="2024-10-10T16:03:47.880764" level="INFO">xpath criteria: //android.widget.TextView[@text="Masukkan email user"]/parent::android.widget.EditText</msg>
<arg>${loc}</arg>
<arg>${rand_text}</arg>
<doc>Types the given `text` into text field identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:03:47.686040" elapsed="0.194724"/>
</kw>
<arg>${text}</arg>
<arg>${locEditext}</arg>
<status status="PASS" start="2024-10-10T16:03:47.684045" elapsed="0.196719"/>
</kw>
<arg>${randomEmail}</arg>
<arg>Masukkan email user</arg>
<status status="PASS" start="2024-10-10T16:03:47.683013" elapsed="0.197751"/>
</kw>
<kw name="And user input text (EditText)" owner="userManagementPage">
<kw name="input text (EditText)" owner="generalFunction">
<kw name="Loc Parent EditText" owner="generalFunction">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-10-10T16:03:47.882792" level="INFO">${loc} = xpath=//android.widget.TextView[@text="08xxxxxxxxxx"]/parent::android.widget.EditText</msg>
<var>${loc}</var>
<arg>xpath=//android.widget.TextView[@text="${text}"]/parent::android.widget.EditText</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-10-10T16:03:47.882792" elapsed="0.000000"/>
</kw>
<return>
<value>${loc}</value>
<status status="PASS" start="2024-10-10T16:03:47.882792" elapsed="0.000000"/>
</return>
<msg time="2024-10-10T16:03:47.882792" level="INFO">${loc} = xpath=//android.widget.TextView[@text="08xxxxxxxxxx"]/parent::android.widget.EditText</msg>
<var>${loc}</var>
<arg>${locEdit}</arg>
<status status="PASS" start="2024-10-10T16:03:47.881798" elapsed="0.000994"/>
</kw>
<kw name="Input Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:03:47.885783" level="INFO">Typing text '12345' into text field 'xpath=//android.widget.TextView[@text="08xxxxxxxxxx"]/parent::android.widget.EditText'</msg>
<msg time="2024-10-10T16:03:48.058948" level="INFO">xpath criteria: //android.widget.TextView[@text="08xxxxxxxxxx"]/parent::android.widget.EditText</msg>
<arg>${loc}</arg>
<arg>${rand_text}</arg>
<doc>Types the given `text` into text field identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:03:47.883789" elapsed="0.175159"/>
</kw>
<arg>${text}</arg>
<arg>${locEditext}</arg>
<status status="PASS" start="2024-10-10T16:03:47.881798" elapsed="0.177150"/>
</kw>
<arg>12345</arg>
<arg>08xxxxxxxxxx</arg>
<status status="PASS" start="2024-10-10T16:03:47.880764" elapsed="0.178184"/>
</kw>
<kw name="And user input text (EditText)" owner="userManagementPage">
<kw name="input text (EditText)" owner="generalFunction">
<kw name="Loc Parent EditText" owner="generalFunction">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-10-10T16:03:48.060941" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Masukkan password"]/parent::android.widget.EditText</msg>
<var>${loc}</var>
<arg>xpath=//android.widget.TextView[@text="${text}"]/parent::android.widget.EditText</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-10-10T16:03:48.059946" elapsed="0.000995"/>
</kw>
<return>
<value>${loc}</value>
<status status="PASS" start="2024-10-10T16:03:48.060941" elapsed="0.000000"/>
</return>
<msg time="2024-10-10T16:03:48.060941" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Masukkan password"]/parent::android.widget.EditText</msg>
<var>${loc}</var>
<arg>${locEdit}</arg>
<status status="PASS" start="2024-10-10T16:03:48.059946" elapsed="0.000995"/>
</kw>
<kw name="Input Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:03:48.064930" level="INFO">Typing text 'test1234' into text field 'xpath=//android.widget.TextView[@text="Masukkan password"]/parent::android.widget.EditText'</msg>
<msg time="2024-10-10T16:03:48.292686" level="INFO">xpath criteria: //android.widget.TextView[@text="Masukkan password"]/parent::android.widget.EditText</msg>
<arg>${loc}</arg>
<arg>${rand_text}</arg>
<doc>Types the given `text` into text field identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:03:48.061939" elapsed="0.230747"/>
</kw>
<arg>${text}</arg>
<arg>${locEditext}</arg>
<status status="PASS" start="2024-10-10T16:03:48.059946" elapsed="0.232740"/>
</kw>
<arg>${passwordSite}</arg>
<arg>Masukkan password</arg>
<status status="PASS" start="2024-10-10T16:03:48.058948" elapsed="0.233738"/>
</kw>
<kw name="And user input konfirmasi password" owner="userManagementPage">
<kw name="input password form user management" owner="generalFunction">
<kw name="Loc Parent EditText" owner="generalFunction">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-10-10T16:03:48.295681" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Masukkan Konfirmasi password"]/parent::android.widget.EditText</msg>
<var>${loc}</var>
<arg>xpath=//android.widget.TextView[@text="${text}"]/parent::android.widget.EditText</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-10-10T16:03:48.295681" elapsed="0.000000"/>
</kw>
<return>
<value>${loc}</value>
<status status="PASS" start="2024-10-10T16:03:48.295681" elapsed="0.000000"/>
</return>
<msg time="2024-10-10T16:03:48.295681" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Masukkan Konfirmasi password"]/parent::android.widget.EditText</msg>
<var>${loc}</var>
<arg>${locatorText}</arg>
<status status="PASS" start="2024-10-10T16:03:48.294682" elapsed="0.000999"/>
</kw>
<kw name="Swipe" owner="AppiumLibrary">
<arg>${521}</arg>
<arg>${1798}</arg>
<arg>${530}</arg>
<arg>${1207}</arg>
<doc>Swipe from one point to another point, for an optional duration.</doc>
<status status="PASS" start="2024-10-10T16:03:48.295681" elapsed="1.323404"/>
</kw>
<kw name="Input Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:03:49.623110" level="INFO">Typing text 'test1234' into text field 'xpath=//android.widget.TextView[@text="Masukkan Konfirmasi password"]/parent::android.widget.EditText'</msg>
<msg time="2024-10-10T16:03:49.981642" level="INFO">xpath criteria: //android.widget.TextView[@text="Masukkan Konfirmasi password"]/parent::android.widget.EditText</msg>
<arg>${loc}</arg>
<arg>${password}</arg>
<doc>Types the given `text` into text field identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:03:49.620084" elapsed="0.361558"/>
</kw>
<arg>${text}</arg>
<arg>Masukkan Konfirmasi password</arg>
<status status="PASS" start="2024-10-10T16:03:48.293683" elapsed="1.687959"/>
</kw>
<arg>${passwordSite}</arg>
<status status="PASS" start="2024-10-10T16:03:48.293683" elapsed="1.687959"/>
</kw>
<kw name="And show error message" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:03:50.112906" level="INFO">xpath criteria: //android.widget.TextView[contains(@text, "harus")]</msg>
<arg>${errState}</arg>
<arg>timeout=3s</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:03:49.982639" elapsed="0.130267"/>
</kw>
<msg time="2024-10-10T16:03:50.112906" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${errState}</arg>
<arg>timeout=3s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:03:49.982639" elapsed="0.130267"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:03:50.238092" level="INFO">Element 'xpath=//android.widget.TextView[contains(@text, "harus")]' text is 'No. handphone harus diawali dengan 08' </msg>
<msg time="2024-10-10T16:03:50.238092" level="INFO">xpath criteria: //android.widget.TextView[contains(@text, "harus")]</msg>
<msg time="2024-10-10T16:03:50.238092" level="INFO">${text} = No. handphone harus diawali dengan 08</msg>
<var>${text}</var>
<arg>${errState}</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:03:50.113934" elapsed="0.124158"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Error Log: ${text}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-10-10T16:03:50.238092" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${text}</arg>
<arg>${errMsg}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-10-10T16:03:50.239092" elapsed="0.000996"/>
</kw>
<status status="PASS" start="2024-10-10T16:03:50.112906" elapsed="0.127182"/>
</branch>
<branch type="ELSE">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${hasRegistered}</arg>
<arg>timeout=3s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:50.240088" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<var>${text}</var>
<arg>${hasRegistered}</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="NOT RUN" start="2024-10-10T16:03:50.241085" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Error Log: ${text}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:50.241085" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${text}</arg>
<arg>${errMsg}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:50.241085" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:50.241085" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>N/A</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:50.242081" elapsed="0.000000"/>
</kw>
<kw name="Get Text" owner="AppiumLibrary">
<var>${text}</var>
<arg>${notPassVerif}</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="NOT RUN" start="2024-10-10T16:03:50.242081" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Error Log: ${text}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:03:50.242081" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:03:50.241085" elapsed="0.000996"/>
</branch>
<status status="NOT RUN" start="2024-10-10T16:03:50.241085" elapsed="0.000996"/>
</if>
<status status="NOT RUN" start="2024-10-10T16:03:50.240088" elapsed="0.001993"/>
</branch>
<status status="PASS" start="2024-10-10T16:03:50.112906" elapsed="0.129175"/>
</if>
<arg>No. handphone harus diawali dengan 08</arg>
<status status="PASS" start="2024-10-10T16:03:49.981642" elapsed="0.260439"/>
</kw>
<status status="PASS" start="2024-10-10T16:03:35.368603" elapsed="14.873478"/>
</kw>
<kw name="Close App" owner="openApp" type="TEARDOWN">
<kw name="Close Application" owner="AppiumLibrary">
<doc>Closes the current application and also close webdriver session.</doc>
<status status="PASS" start="2024-10-10T16:03:50.242938" elapsed="0.403394"/>
</kw>
<status status="PASS" start="2024-10-10T16:03:50.242938" elapsed="0.403394"/>
</kw>
<doc>This scenario test User Create User Management (Site/PIC) with invalid format No Telp</doc>
<tag>1000s</tag>
<tag>test</tag>
<tag>user management</tag>
<status status="PASS" start="2024-10-10T16:03:27.433963" elapsed="23.213363"/>
</test>
<test id="s1-t4" name="Test Create User Management with No Handphone has registered" line="25">
<kw name="Open app Dev Project" owner="openApp" type="SETUP">
<kw name="Open Application" owner="AppiumLibrary">
<arg>http://127.0.0.1:4723</arg>
<arg>platformName=${platformName}</arg>
<arg>deviceName=${udid}</arg>
<arg>appPackage=${appPackage}</arg>
<arg>appActivity=${appActivity}</arg>
<arg>automationName=UiAutomator2</arg>
<doc>Opens a new application to given Appium server.
Capabilities of appium server, Android and iOS,
Please check https://appium.io/docs/en/2.1/cli/args/
| *Option*            | *Man.* | *Description*     |
| remote_url          | Yes    | Appium server url |
| alias               | no     | alias             |
| strict_ssl          | No     | allows you to send commands to an invalid certificate host like a self-signed one. |</doc>
<status status="PASS" start="2024-10-10T16:03:50.648933" elapsed="6.971122"/>
</kw>
<status status="PASS" start="2024-10-10T16:03:50.648933" elapsed="6.971122"/>
</kw>
<kw name="User create User Management with No Telp has been registered" owner="userManagement">
<kw name="Given user go to User Management page" owner="userManagementPage">
<kw name="User Login" owner="loginPage">
<kw name="Given user input no handphone" owner="loginPage">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:03:59.502491" level="INFO">xpath criteria: //android.widget.TextView[@text="Login"]</msg>
<arg>${titleLogin}</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:03:57.623013" elapsed="1.879478"/>
</kw>
<kw name="Input Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:03:59.505519" level="INFO">Typing text '088210068283' into text field 'xpath=//android.widget.EditText[1]'</msg>
<msg time="2024-10-10T16:03:59.661842" level="INFO">xpath criteria: //android.widget.EditText[1]</msg>
<arg>${inputNoHandphone}</arg>
<arg>${noHandphone}</arg>
<doc>Types the given `text` into text field identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:03:59.502491" elapsed="0.159351"/>
</kw>
<arg>${akunOP}</arg>
<status status="PASS" start="2024-10-10T16:03:57.622049" elapsed="2.040793"/>
</kw>
<kw name="When user input password" owner="loginPage">
<kw name="Input Password" owner="AppiumLibrary">
<msg time="2024-10-10T16:03:59.666829" level="INFO">Typing password into text field 'xpath=//android.widget.EditText[2]'</msg>
<msg time="2024-10-10T16:04:00.053283" level="INFO">xpath criteria: //android.widget.EditText[2]</msg>
<arg>${inputPassword}</arg>
<arg>${password}</arg>
<doc>Types the given password into text field identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:03:59.663836" elapsed="0.389447"/>
</kw>
<arg>${passwordProject}</arg>
<status status="PASS" start="2024-10-10T16:03:59.662842" elapsed="0.390441"/>
</kw>
<kw name="Then click button masuk" owner="loginPage">
<kw name="Click Element" owner="AppiumLibrary">
<msg time="2024-10-10T16:04:00.057272" level="INFO">Clicking element 'xpath=//android.view.View/android.view.View[2]'.</msg>
<msg time="2024-10-10T16:04:00.885970" level="INFO">xpath criteria: //android.view.View/android.view.View[2]</msg>
<arg>${buttonMasuk}</arg>
<doc>Click element identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:04:00.054281" elapsed="0.831689"/>
</kw>
<status status="PASS" start="2024-10-10T16:04:00.053283" elapsed="0.832687"/>
</kw>
<kw name="And home Project" owner="loginPage">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<arg>accessibility_id=Icon Projects</arg>
<arg>timeout=10s</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:04:00.887962" elapsed="3.225597"/>
</kw>
<kw name="Element Should Be Visible" owner="AppiumLibrary">
<arg>accessibility_id=Icon Projects</arg>
<doc>Verifies that element identified with locator is visible.</doc>
<status status="PASS" start="2024-10-10T16:04:04.113559" elapsed="0.135749"/>
</kw>
<kw name="Element Should Be Visible" owner="AppiumLibrary">
<arg>accessibility_id=Notification</arg>
<doc>Verifies that element identified with locator is visible.</doc>
<status status="PASS" start="2024-10-10T16:04:04.249308" elapsed="0.609116"/>
</kw>
<kw name="Element Should Be Visible" owner="AppiumLibrary">
<arg>accessibility_id=Icon Search</arg>
<doc>Verifies that element identified with locator is visible.</doc>
<status status="PASS" start="2024-10-10T16:04:04.859424" elapsed="0.137151"/>
</kw>
<status status="PASS" start="2024-10-10T16:04:00.886966" elapsed="4.110609"/>
</kw>
<status status="PASS" start="2024-10-10T16:03:57.622049" elapsed="7.375526"/>
</kw>
<kw name="Loc Parent View" owner="generalFunction">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-10-10T16:04:04.998570" level="INFO">${loc} = xpath=//android.widget.TextView[@text="User Management"]/parent::android.view.View</msg>
<var>${loc}</var>
<arg>xpath=//android.widget.TextView[@text="${text}"]/parent::android.view.View</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-10-10T16:04:04.998570" elapsed="0.000000"/>
</kw>
<return>
<value>${loc}</value>
<status status="PASS" start="2024-10-10T16:04:04.998570" elapsed="0.000000"/>
</return>
<msg time="2024-10-10T16:04:04.998570" level="INFO">${loc} = xpath=//android.widget.TextView[@text="User Management"]/parent::android.view.View</msg>
<var>${loc}</var>
<arg>User Management</arg>
<status status="PASS" start="2024-10-10T16:04:04.997575" elapsed="0.000995"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:04:05.199505" level="INFO">xpath criteria: //android.widget.TextView[@text="User Management"]/parent::android.view.View</msg>
<arg>${loc}</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:04:04.999568" elapsed="0.199937"/>
</kw>
<kw name="Click Element" owner="AppiumLibrary">
<msg time="2024-10-10T16:04:05.204491" level="INFO">Clicking element 'xpath=//android.widget.TextView[@text="User Management"]/parent::android.view.View'.</msg>
<msg time="2024-10-10T16:04:05.431792" level="INFO">xpath criteria: //android.widget.TextView[@text="User Management"]/parent::android.view.View</msg>
<arg>${loc}</arg>
<doc>Click element identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:04:05.199505" elapsed="0.232287"/>
</kw>
<status status="PASS" start="2024-10-10T16:03:57.622049" elapsed="7.809743"/>
</kw>
<kw name="And Get Detail Text User Management" owner="userManagementPage">
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-10-10T16:04:05.432823" level="INFO">${random} = 1</msg>
<var>${random}</var>
<arg>random.randint(1, 3)</arg>
<arg>modules=random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-10-10T16:04:05.432823" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:04:05.433821" level="INFO">${indexUser} = 1</msg>
<arg>${indexUser}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:04:05.433821" elapsed="0.000000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-10-10T16:04:05.433821" level="INFO">Random : 1</msg>
<arg>Random : ${random}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-10-10T16:04:05.433821" elapsed="0.000000"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-10-10T16:04:05.434817" level="INFO">Length is 103.</msg>
<msg time="2024-10-10T16:04:05.434817" level="INFO">${len} = 103</msg>
<var>${len}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-10-10T16:04:05.433821" elapsed="0.000996"/>
</kw>
<for flavor="IN RANGE">
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:04:07.137179" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[1]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[1]/parent::android.view.View</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:04:05.436813" elapsed="1.700366"/>
</kw>
<msg time="2024-10-10T16:04:07.137179" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:04:05.436813" elapsed="1.700366"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:04:07.350563" level="INFO">Element 'xpath=(//android.view.View[@content-desc="Image"])[1]/parent::android.view.View/android.widget.TextView[1]' text is 'ab' </msg>
<msg time="2024-10-10T16:04:07.350563" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[1]/parent::android.view.View/android.widget.TextView[1]</msg>
<msg time="2024-10-10T16:04:07.350563" level="INFO">${name} = ab</msg>
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:04:07.137179" elapsed="0.213384"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:04:07.351525" level="INFO">${name} = ab</msg>
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:04:07.350563" elapsed="0.000962"/>
</kw>
<status status="PASS" start="2024-10-10T16:04:07.137179" elapsed="0.214346"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:07.351525" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:07.351525" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:04:07.137179" elapsed="0.214346"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:04:05.435780" elapsed="1.916745"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:04:07.352525" level="INFO">${nameUserManagement} = ab</msg>
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:04:07.352525" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-10-10T16:04:07.352525" elapsed="0.001168"/>
</kw>
<status status="PASS" start="2024-10-10T16:04:05.435780" elapsed="1.917913"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:07.353693" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:07.353693" elapsed="0.001004"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:07.354697" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:07.353693" elapsed="0.001004"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:07.354697" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:07.354697" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:07.354697" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:07.355694" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:07.355694" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:07.355694" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:07.355694" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:07.354697" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:07.356692" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:07.355694" elapsed="0.000998"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:07.356692" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:07.356692" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:07.356692" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:07.356692" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:07.357688" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:07.356692" elapsed="0.000996"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:07.357688" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:07.357688" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:07.357688" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:07.357688" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:04:07.357688" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:04:07.357688" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:04:05.435780" elapsed="1.922906"/>
</if>
<var name="${counter}">1</var>
<status status="PASS" start="2024-10-10T16:04:05.434817" elapsed="1.923869"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:07.359683" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:07.359683" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:07.359683" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:07.358686" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:04:07.521191" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[1]/parent::android.view.View</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:04:07.360681" elapsed="0.160510"/>
</kw>
<msg time="2024-10-10T16:04:07.521191" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:04:07.360681" elapsed="0.160510"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:04:07.671268" level="INFO">Element 'xpath=(//android.view.View[@content-desc="Image"])[1]/parent::android.view.View/android.widget.TextView[2]' text is 'jassw' </msg>
<msg time="2024-10-10T16:04:07.672267" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[1]/parent::android.view.View/android.widget.TextView[2]</msg>
<msg time="2024-10-10T16:04:07.672267" level="INFO">${name} = jassw</msg>
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:04:07.521191" elapsed="0.151076"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:04:07.673266" level="INFO">${name} = jassw</msg>
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:04:07.672267" elapsed="0.000999"/>
</kw>
<status status="PASS" start="2024-10-10T16:04:07.521191" elapsed="0.152075"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:07.673266" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:07.673266" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:04:07.521191" elapsed="0.152075"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:04:07.359683" elapsed="0.313583"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:04:07.674230" level="INFO">${jabatan} = jassw</msg>
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:04:07.674230" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-10-10T16:04:07.674230" elapsed="0.000990"/>
</kw>
<status status="PASS" start="2024-10-10T16:04:07.359683" elapsed="0.315537"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:07.675220" elapsed="0.001002"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:07.675220" elapsed="0.001002"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:07.676222" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:07.676222" elapsed="0.001000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:07.677222" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:07.677222" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:07.677222" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:07.676222" elapsed="0.001000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:07.677222" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:07.677222" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:07.678218" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:07.678218" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:07.678218" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:07.678218" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:07.678218" elapsed="0.000997"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:07.678218" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:07.679215" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:07.679215" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:07.679215" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:07.679215" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:04:07.679215" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:04:07.679215" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:04:07.358686" elapsed="0.320529"/>
</if>
<var name="${counter}">2</var>
<status status="PASS" start="2024-10-10T16:04:07.358686" elapsed="0.320529"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:07.680213" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:07.680213" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:07.681210" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:07.680213" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:07.681210" elapsed="0.000999"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:07.682209" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:07.682209" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:07.681210" elapsed="0.000999"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:04:07.827810" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[1]/parent::android.view.View</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:04:07.683207" elapsed="0.144603"/>
</kw>
<msg time="2024-10-10T16:04:07.827810" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:04:07.683207" elapsed="0.144603"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:04:07.977422" level="INFO">Element 'xpath=(//android.view.View[@content-desc="Image"])[1]/parent::android.view.View/android.widget.TextView[3]' text is 'Nomor handphone' </msg>
<msg time="2024-10-10T16:04:07.977422" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[1]/parent::android.view.View/android.widget.TextView[3]</msg>
<msg time="2024-10-10T16:04:07.978420" level="INFO">${name} = Nomor handphone</msg>
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:04:07.828808" elapsed="0.149612"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:04:07.978420" level="INFO">${name} = Nomor handphone</msg>
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:04:07.978420" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-10-10T16:04:07.827810" elapsed="0.150610"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:07.978420" elapsed="0.000997"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:07.978420" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-10-10T16:04:07.827810" elapsed="0.151607"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:04:07.683207" elapsed="0.296210"/>
</kw>
<status status="PASS" start="2024-10-10T16:04:07.682209" elapsed="0.297208"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:07.979417" elapsed="0.000964"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:07.980381" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:07.980381" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:07.980381" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:07.980381" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:07.979417" elapsed="0.001996"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:07.981413" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:07.981413" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:07.981413" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:07.982376" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:07.982376" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:07.981413" elapsed="0.000963"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:07.982376" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:07.982376" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:07.982376" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:07.982376" elapsed="0.001031"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:07.983407" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:07.982376" elapsed="0.001031"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:04:07.983407" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:04:07.983407" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:04:07.680213" elapsed="0.303194"/>
</if>
<var name="${counter}">3</var>
<status status="PASS" start="2024-10-10T16:04:07.680213" elapsed="0.303194"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:07.984404" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:07.984404" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:07.984404" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:07.983407" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:07.985367" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:07.985367" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:07.985367" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:07.984404" elapsed="0.000963"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:07.986365" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:07.985367" elapsed="0.000998"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:04:08.132095" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[1]/parent::android.view.View</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:04:07.987396" elapsed="0.144699"/>
</kw>
<msg time="2024-10-10T16:04:08.132095" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:04:07.987396" elapsed="0.144699"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:04:08.283368" level="INFO">Element 'xpath=(//android.view.View[@content-desc="Image"])[1]/parent::android.view.View/android.widget.TextView[4]' text is '0882-1231-23' </msg>
<msg time="2024-10-10T16:04:08.283368" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[1]/parent::android.view.View/android.widget.TextView[4]</msg>
<msg time="2024-10-10T16:04:08.284366" level="INFO">${name} = 0882-1231-23</msg>
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:04:08.133092" elapsed="0.151274"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:04:08.285330" level="INFO">${name} = 0882-1231-23</msg>
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:04:08.284366" elapsed="0.000964"/>
</kw>
<status status="PASS" start="2024-10-10T16:04:08.132095" elapsed="0.153235"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:08.285330" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:08.285330" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:04:08.132095" elapsed="0.153235"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:04:07.986365" elapsed="0.298965"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:04:08.286328" level="INFO">${noTelp} = 0882-1231-23</msg>
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:04:08.285330" elapsed="0.000998"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-10-10T16:04:08.286328" elapsed="0.000838"/>
</kw>
<kw name="Replace String" owner="String">
<msg time="2024-10-10T16:04:08.289167" level="INFO">${replaceNumb} = 0882123123</msg>
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-10-10T16:04:08.287166" elapsed="0.002001"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:04:08.289167" level="INFO">${replaceNumb} = 0882123123</msg>
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:04:08.289167" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-10-10T16:04:07.986365" elapsed="0.302802"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:08.290164" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:08.289167" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:08.290164" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:08.290164" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:08.290164" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:08.290164" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:08.291161" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:08.290164" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:08.291161" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:08.291161" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:08.292158" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:08.291161" elapsed="0.000997"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:04:08.292158" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:04:08.292158" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:04:07.983407" elapsed="0.308751"/>
</if>
<var name="${counter}">4</var>
<status status="PASS" start="2024-10-10T16:04:07.983407" elapsed="0.308751"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:08.293160" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:08.294151" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:08.294151" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:08.292158" elapsed="0.001993"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:08.295149" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:08.295149" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:08.296147" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:08.294151" elapsed="0.001996"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:08.296147" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:08.296147" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:08.297146" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:08.297146" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:08.297146" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:08.297146" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:08.298142" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:08.296147" elapsed="0.001995"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:04:09.115286" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[1]/parent::android.view.View</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:04:08.299140" elapsed="0.816146"/>
</kw>
<msg time="2024-10-10T16:04:09.115286" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:04:08.299140" elapsed="0.817142"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:04:09.259914" level="INFO">Element 'xpath=(//android.view.View[@content-desc="Image"])[1]/parent::android.view.View/android.widget.TextView[5]' text is 'Email' </msg>
<msg time="2024-10-10T16:04:09.259914" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[1]/parent::android.view.View/android.widget.TextView[5]</msg>
<msg time="2024-10-10T16:04:09.259914" level="INFO">${name} = Email</msg>
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:04:09.116282" elapsed="0.143632"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:04:09.260910" level="INFO">${name} = Email</msg>
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:04:09.259914" elapsed="0.000996"/>
</kw>
<status status="PASS" start="2024-10-10T16:04:09.116282" elapsed="0.144628"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:09.260910" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:09.260910" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:04:09.116282" elapsed="0.144628"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:04:08.298142" elapsed="0.962768"/>
</kw>
<status status="PASS" start="2024-10-10T16:04:08.298142" elapsed="0.962768"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:09.260910" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:09.261912" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:09.261912" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:09.260910" elapsed="0.001002"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:09.261912" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:09.261912" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:09.262906" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:09.262906" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:09.262906" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:09.261912" elapsed="0.000994"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:04:09.262906" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:04:09.262906" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:04:08.292158" elapsed="0.970748"/>
</if>
<var name="${counter}">5</var>
<status status="PASS" start="2024-10-10T16:04:08.292158" elapsed="0.970748"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:09.263903" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:09.263903" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:09.263903" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:09.263903" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:09.264899" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:09.264899" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:09.264899" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:09.264899" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:09.265896" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:09.264899" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:09.265896" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:09.266901" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:09.266901" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:09.266901" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:09.266901" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:09.265896" elapsed="0.001005"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:09.267895" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:09.266901" elapsed="0.000994"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:04:09.402406" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[1]/parent::android.view.View</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:04:09.268893" elapsed="0.133513"/>
</kw>
<msg time="2024-10-10T16:04:09.402406" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:04:09.267895" elapsed="0.134511"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:04:09.544203" level="INFO">Element 'xpath=(//android.view.View[@content-desc="Image"])[1]/parent::android.view.View/android.widget.TextView[6]' text is 'asd!!!######@gmail.com' </msg>
<msg time="2024-10-10T16:04:09.544203" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[1]/parent::android.view.View/android.widget.TextView[6]</msg>
<msg time="2024-10-10T16:04:09.544203" level="INFO">${name} = asd!!!######@gmail.com</msg>
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:04:09.403404" elapsed="0.140799"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:04:09.545201" level="INFO">${name} = asd!!!######@gmail.com</msg>
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:04:09.545201" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-10-10T16:04:09.403404" elapsed="0.141797"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:09.545201" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:09.545201" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:04:09.403404" elapsed="0.141797"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:04:09.267895" elapsed="0.277306"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:04:09.546200" level="INFO">${email} = asd!!!######@gmail.com</msg>
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:04:09.545201" elapsed="0.000999"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-10-10T16:04:09.546200" elapsed="0.001119"/>
</kw>
<status status="PASS" start="2024-10-10T16:04:09.267895" elapsed="0.279424"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:09.547319" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:09.547319" elapsed="0.001038"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:09.548357" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:09.548357" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:09.548357" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:09.548357" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:04:09.548357" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:04:09.548357" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:04:09.263903" elapsed="0.284454"/>
</if>
<var name="${counter}">6</var>
<status status="PASS" start="2024-10-10T16:04:09.263903" elapsed="0.284454"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:09.549355" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:09.549355" elapsed="0.000995"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:09.550350" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:09.549355" elapsed="0.000995"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:09.550350" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:09.550350" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:09.551347" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:09.550350" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:09.551347" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:09.551347" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:09.551347" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:09.552345" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:09.552345" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:09.552345" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:09.552345" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:09.551347" elapsed="0.000998"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:09.553342" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:09.552345" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:09.553342" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:09.553342" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:09.553342" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:09.553342" elapsed="0.000968"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:04:09.693738" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[1]/parent::android.view.View</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:04:09.555306" elapsed="0.138432"/>
</kw>
<msg time="2024-10-10T16:04:09.693738" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:04:09.554310" elapsed="0.139428"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:04:09.836106" level="INFO">Element 'xpath=(//android.view.View[@content-desc="Image"])[1]/parent::android.view.View/android.widget.TextView[7]' text is 'Project aktif' </msg>
<msg time="2024-10-10T16:04:09.836106" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[1]/parent::android.view.View/android.widget.TextView[7]</msg>
<msg time="2024-10-10T16:04:09.836106" level="INFO">${name} = Project aktif</msg>
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:04:09.694734" elapsed="0.141372"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:04:09.837101" level="INFO">${name} = Project aktif</msg>
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:04:09.836106" elapsed="0.000995"/>
</kw>
<status status="PASS" start="2024-10-10T16:04:09.693738" elapsed="0.143363"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:09.837101" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:09.837101" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:04:09.693738" elapsed="0.143363"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:04:09.554310" elapsed="0.282791"/>
</kw>
<status status="PASS" start="2024-10-10T16:04:09.554310" elapsed="0.282791"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:09.837101" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:09.838097" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:09.838097" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:09.837101" elapsed="0.000996"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:04:09.838097" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:04:09.838097" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:04:09.549355" elapsed="0.288742"/>
</if>
<var name="${counter}">7</var>
<status status="PASS" start="2024-10-10T16:04:09.549355" elapsed="0.288742"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:09.840093" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:09.840093" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:09.840093" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:09.839099" elapsed="0.000994"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:09.840093" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:09.841089" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:09.841089" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:09.840093" elapsed="0.000996"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:09.842054" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:09.841089" elapsed="0.000965"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:09.842054" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:09.842054" elapsed="0.001035"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:09.843089" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:09.843089" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:09.843089" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:09.842054" elapsed="0.001035"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:09.843089" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:09.843089" elapsed="0.000993"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:09.844082" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:09.844082" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:09.844082" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:09.844082" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:09.845080" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:09.844082" elapsed="0.000998"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:04:09.987539" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[1]/parent::android.view.View</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:04:09.846077" elapsed="0.141462"/>
</kw>
<msg time="2024-10-10T16:04:09.987539" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:04:09.845080" elapsed="0.142459"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:04:10.126850" level="INFO">Element 'xpath=(//android.view.View[@content-desc="Image"])[1]/parent::android.view.View/android.widget.TextView[8]' text is '0' </msg>
<msg time="2024-10-10T16:04:10.126850" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[1]/parent::android.view.View/android.widget.TextView[8]</msg>
<msg time="2024-10-10T16:04:10.126850" level="INFO">${name} = 0</msg>
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:04:09.988542" elapsed="0.138308"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:04:10.126850" level="INFO">${name} = 0</msg>
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:04:10.126850" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-10-10T16:04:09.988542" elapsed="0.138308"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:10.127846" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:10.126850" elapsed="0.000996"/>
</branch>
<status status="PASS" start="2024-10-10T16:04:09.987539" elapsed="0.140307"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:04:09.845080" elapsed="0.282766"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:04:10.127846" level="INFO">${projActive} = 0</msg>
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:04:10.127846" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-10-10T16:04:10.128845" elapsed="0.000961"/>
</kw>
<status status="PASS" start="2024-10-10T16:04:09.845080" elapsed="0.284726"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:04:10.129806" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:04:10.129806" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:04:09.839099" elapsed="0.290707"/>
</if>
<var name="${counter}">8</var>
<status status="PASS" start="2024-10-10T16:04:09.839099" elapsed="0.290707"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:10.130807" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:10.130807" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:10.130807" elapsed="0.000996"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:10.130807" elapsed="0.000996"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:10.131803" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:10.132801" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:10.132801" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:10.131803" elapsed="0.000998"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:10.132801" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:10.132801" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:10.133797" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:10.133797" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:10.133797" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:10.133797" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:10.134795" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:10.132801" elapsed="0.001994"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:10.134795" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:10.134795" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:10.135793" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:10.136787" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:10.136787" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:10.134795" elapsed="0.001992"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:10.137788" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:10.136787" elapsed="0.001001"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:10.137788" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:10.137788" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:10.138785" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:10.137788" elapsed="0.000997"/>
</branch>
<branch type="ELSE">
<break>
<status status="PASS" start="2024-10-10T16:04:10.138785" elapsed="0.000000"/>
</break>
<status status="PASS" start="2024-10-10T16:04:10.138785" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:04:10.130807" elapsed="0.007978"/>
</if>
<var name="${counter}">9</var>
<status status="PASS" start="2024-10-10T16:04:10.130807" elapsed="0.007978"/>
</iter>
<var>${counter}</var>
<value>1</value>
<value>${len}</value>
<status status="PASS" start="2024-10-10T16:04:05.434817" elapsed="4.703968"/>
</for>
<status status="PASS" start="2024-10-10T16:04:05.432823" elapsed="4.705962"/>
</kw>
<kw name="When user add user management" owner="userManagementPage">
<kw name="home Project" owner="loginPage">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<arg>accessibility_id=Icon Projects</arg>
<arg>timeout=10s</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:04:10.139781" elapsed="0.100838"/>
</kw>
<kw name="Element Should Be Visible" owner="AppiumLibrary">
<arg>accessibility_id=Icon Projects</arg>
<doc>Verifies that element identified with locator is visible.</doc>
<status status="PASS" start="2024-10-10T16:04:10.241615" elapsed="0.100596"/>
</kw>
<kw name="Element Should Be Visible" owner="AppiumLibrary">
<arg>accessibility_id=Notification</arg>
<doc>Verifies that element identified with locator is visible.</doc>
<status status="PASS" start="2024-10-10T16:04:10.342211" elapsed="0.159538"/>
</kw>
<kw name="Element Should Be Visible" owner="AppiumLibrary">
<arg>accessibility_id=Icon Search</arg>
<doc>Verifies that element identified with locator is visible.</doc>
<status status="PASS" start="2024-10-10T16:04:10.502746" elapsed="0.103723"/>
</kw>
<status status="PASS" start="2024-10-10T16:04:10.139781" elapsed="0.466688"/>
</kw>
<kw name="Loc Parent View" owner="generalFunction">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-10-10T16:04:10.608463" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Tambah User"]/parent::android.view.View</msg>
<var>${loc}</var>
<arg>xpath=//android.widget.TextView[@text="${text}"]/parent::android.view.View</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-10-10T16:04:10.607467" elapsed="0.000996"/>
</kw>
<return>
<value>${loc}</value>
<status status="PASS" start="2024-10-10T16:04:10.608463" elapsed="0.000000"/>
</return>
<msg time="2024-10-10T16:04:10.608463" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Tambah User"]/parent::android.view.View</msg>
<var>${loc}</var>
<arg>Tambah User</arg>
<status status="PASS" start="2024-10-10T16:04:10.607467" elapsed="0.000996"/>
</kw>
<kw name="Click Element" owner="AppiumLibrary">
<msg time="2024-10-10T16:04:10.615443" level="INFO">Clicking element 'xpath=//android.widget.TextView[@text="Tambah User"]/parent::android.view.View'.</msg>
<msg time="2024-10-10T16:04:11.973215" level="INFO">xpath criteria: //android.widget.TextView[@text="Tambah User"]/parent::android.view.View</msg>
<arg>${loc}</arg>
<doc>Click element identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:04:10.609460" elapsed="1.364752"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:04:12.124386" level="INFO">xpath criteria: //android.widget.ScrollView//following-sibling::android.widget.TextView[contains(@text, "upload file")]</msg>
<arg>${textUploadFile}</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:04:11.974212" elapsed="0.150174"/>
</kw>
<status status="PASS" start="2024-10-10T16:04:10.138785" elapsed="1.985601"/>
</kw>
<kw name="And user input Nama user management" owner="userManagementPage">
<kw name="Generate Simple Random Name" owner="generalFunction">
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-10-10T16:04:12.126378" level="INFO">${name} = VEOPS HMDAGVGT</msg>
<var>${name}</var>
<arg>''.join(random.choices('ABCDEFGHIJKLMNOPQRSTUVWXYZ', k=5)) + ' ' + ''.join(random.choices('ABCDEFGHIJKLMNOPQRSTUVWXYZ', k=8))</arg>
<arg>modules=random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-10-10T16:04:12.125383" elapsed="0.000995"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:04:12.126378" level="INFO">${randomStr} = VEOPS HMDAGVGT</msg>
<arg>${randomStr}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:04:12.126378" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-10-10T16:04:12.125383" elapsed="0.000995"/>
</kw>
<kw name="Generate Random Phone Number" owner="generalFunction">
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-10-10T16:04:12.127376" level="INFO">${random_number} = 0863197539</msg>
<var>${random_number}</var>
<arg>'08' + str(random.randint(10000000, 99999999))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-10-10T16:04:12.127376" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:04:12.127376" level="INFO">${randNumber} = 0863197539</msg>
<arg>${randNumber}</arg>
<arg>${random_number}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:04:12.127376" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-10-10T16:04:12.126378" elapsed="0.000998"/>
</kw>
<kw name="Generate Random Email" owner="generalFunction">
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-10-10T16:04:12.131366" level="INFO">${name} = rmcpqmqx</msg>
<var>${name}</var>
<arg>''.join(random.choices('abcdefghijklmnopqrtuvwxyz', k=8))</arg>
<arg>modules=random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-10-10T16:04:12.128373" elapsed="0.002993"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-10-10T16:04:12.131366" level="INFO">${nameEmail} = rmcpqmqx@gmail.com</msg>
<var>${nameEmail}</var>
<arg>${name}@gmail.com</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-10-10T16:04:12.131366" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:04:12.132362" level="INFO">${randomEmail} = rmcpqmqx@gmail.com</msg>
<arg>${randomEmail}</arg>
<arg>${nameEmail}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:04:12.131366" elapsed="0.000996"/>
</kw>
<status status="PASS" start="2024-10-10T16:04:12.128373" elapsed="0.003989"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:04:12.132362" level="INFO">${nameUser} = VEOPS HMDAGVGT</msg>
<arg>${nameUser}</arg>
<arg>${randomStr}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:04:12.132362" elapsed="0.000000"/>
</kw>
<kw name="input text (EditText)" owner="generalFunction">
<kw name="Loc Parent EditText" owner="generalFunction">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-10-10T16:04:12.134358" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Masukkan nama user"]/parent::android.widget.EditText</msg>
<var>${loc}</var>
<arg>xpath=//android.widget.TextView[@text="${text}"]/parent::android.widget.EditText</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-10-10T16:04:12.133359" elapsed="0.000999"/>
</kw>
<return>
<value>${loc}</value>
<status status="PASS" start="2024-10-10T16:04:12.134358" elapsed="0.000000"/>
</return>
<msg time="2024-10-10T16:04:12.134358" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Masukkan nama user"]/parent::android.widget.EditText</msg>
<var>${loc}</var>
<arg>${locEdit}</arg>
<status status="PASS" start="2024-10-10T16:04:12.133359" elapsed="0.000999"/>
</kw>
<kw name="Input Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:04:12.138346" level="INFO">Typing text 'VEOPS HMDAGVGT' into text field 'xpath=//android.widget.TextView[@text="Masukkan nama user"]/parent::android.widget.EditText'</msg>
<msg time="2024-10-10T16:04:12.272476" level="INFO">xpath criteria: //android.widget.TextView[@text="Masukkan nama user"]/parent::android.widget.EditText</msg>
<arg>${loc}</arg>
<arg>${rand_text}</arg>
<doc>Types the given `text` into text field identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:04:12.134358" elapsed="0.138118"/>
</kw>
<arg>${randomStr}</arg>
<arg>Masukkan nama user</arg>
<status status="PASS" start="2024-10-10T16:04:12.132362" elapsed="0.140114"/>
</kw>
<status status="PASS" start="2024-10-10T16:04:12.124386" elapsed="0.148090"/>
</kw>
<kw name="And user input text (EditText)" owner="userManagementPage">
<kw name="input text (EditText)" owner="generalFunction">
<kw name="Loc Parent EditText" owner="generalFunction">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-10-10T16:04:12.274501" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Masukan jabatan user"]/parent::android.widget.EditText</msg>
<var>${loc}</var>
<arg>xpath=//android.widget.TextView[@text="${text}"]/parent::android.widget.EditText</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-10-10T16:04:12.274501" elapsed="0.000000"/>
</kw>
<return>
<value>${loc}</value>
<status status="PASS" start="2024-10-10T16:04:12.274501" elapsed="0.000000"/>
</return>
<msg time="2024-10-10T16:04:12.274501" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Masukan jabatan user"]/parent::android.widget.EditText</msg>
<var>${loc}</var>
<arg>${locEdit}</arg>
<status status="PASS" start="2024-10-10T16:04:12.273471" elapsed="0.001030"/>
</kw>
<kw name="Input Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:04:12.278490" level="INFO">Typing text 'VEOPS HMDAGVGT' into text field 'xpath=//android.widget.TextView[@text="Masukan jabatan user"]/parent::android.widget.EditText'</msg>
<msg time="2024-10-10T16:04:12.890066" level="INFO">xpath criteria: //android.widget.TextView[@text="Masukan jabatan user"]/parent::android.widget.EditText</msg>
<arg>${loc}</arg>
<arg>${rand_text}</arg>
<doc>Types the given `text` into text field identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:04:12.274501" elapsed="0.616601"/>
</kw>
<arg>${text}</arg>
<arg>${locEditext}</arg>
<status status="PASS" start="2024-10-10T16:04:12.273471" elapsed="0.617631"/>
</kw>
<arg>${randomStr}</arg>
<arg>Masukan jabatan user</arg>
<status status="PASS" start="2024-10-10T16:04:12.272476" elapsed="0.618626"/>
</kw>
<kw name="And user input text (EditText)" owner="userManagementPage">
<kw name="input text (EditText)" owner="generalFunction">
<kw name="Loc Parent EditText" owner="generalFunction">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-10-10T16:04:12.893056" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Masukkan email user"]/parent::android.widget.EditText</msg>
<var>${loc}</var>
<arg>xpath=//android.widget.TextView[@text="${text}"]/parent::android.widget.EditText</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-10-10T16:04:12.893056" elapsed="0.000000"/>
</kw>
<return>
<value>${loc}</value>
<status status="PASS" start="2024-10-10T16:04:12.893056" elapsed="0.000000"/>
</return>
<msg time="2024-10-10T16:04:12.893056" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Masukkan email user"]/parent::android.widget.EditText</msg>
<var>${loc}</var>
<arg>${locEdit}</arg>
<status status="PASS" start="2024-10-10T16:04:12.892095" elapsed="0.000961"/>
</kw>
<kw name="Input Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:04:12.896083" level="INFO">Typing text 'rmcpqmqx@gmail.com' into text field 'xpath=//android.widget.TextView[@text="Masukkan email user"]/parent::android.widget.EditText'</msg>
<msg time="2024-10-10T16:04:13.067007" level="INFO">xpath criteria: //android.widget.TextView[@text="Masukkan email user"]/parent::android.widget.EditText</msg>
<arg>${loc}</arg>
<arg>${rand_text}</arg>
<doc>Types the given `text` into text field identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:04:12.893056" elapsed="0.173951"/>
</kw>
<arg>${text}</arg>
<arg>${locEditext}</arg>
<status status="PASS" start="2024-10-10T16:04:12.892095" elapsed="0.174912"/>
</kw>
<arg>${randomEmail}</arg>
<arg>Masukkan email user</arg>
<status status="PASS" start="2024-10-10T16:04:12.891102" elapsed="0.175905"/>
</kw>
<kw name="And user input text (EditText)" owner="userManagementPage">
<kw name="input text (EditText)" owner="generalFunction">
<kw name="Loc Parent EditText" owner="generalFunction">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-10-10T16:04:13.069033" level="INFO">${loc} = xpath=//android.widget.TextView[@text="08xxxxxxxxxx"]/parent::android.widget.EditText</msg>
<var>${loc}</var>
<arg>xpath=//android.widget.TextView[@text="${text}"]/parent::android.widget.EditText</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-10-10T16:04:13.069033" elapsed="0.000000"/>
</kw>
<return>
<value>${loc}</value>
<status status="PASS" start="2024-10-10T16:04:13.069033" elapsed="0.000000"/>
</return>
<msg time="2024-10-10T16:04:13.070034" level="INFO">${loc} = xpath=//android.widget.TextView[@text="08xxxxxxxxxx"]/parent::android.widget.EditText</msg>
<var>${loc}</var>
<arg>${locEdit}</arg>
<status status="PASS" start="2024-10-10T16:04:13.069033" elapsed="0.001001"/>
</kw>
<kw name="Input Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:04:13.072025" level="INFO">Typing text '0882123123' into text field 'xpath=//android.widget.TextView[@text="08xxxxxxxxxx"]/parent::android.widget.EditText'</msg>
<msg time="2024-10-10T16:04:13.277595" level="INFO">xpath criteria: //android.widget.TextView[@text="08xxxxxxxxxx"]/parent::android.widget.EditText</msg>
<arg>${loc}</arg>
<arg>${rand_text}</arg>
<doc>Types the given `text` into text field identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:04:13.070034" elapsed="0.207561"/>
</kw>
<arg>${text}</arg>
<arg>${locEditext}</arg>
<status status="PASS" start="2024-10-10T16:04:13.068007" elapsed="0.209588"/>
</kw>
<arg>${replaceNumb}</arg>
<arg>08xxxxxxxxxx</arg>
<status status="PASS" start="2024-10-10T16:04:13.068007" elapsed="0.209588"/>
</kw>
<kw name="And user input text (EditText)" owner="userManagementPage">
<kw name="input text (EditText)" owner="generalFunction">
<kw name="Loc Parent EditText" owner="generalFunction">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-10-10T16:04:13.279622" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Masukkan password"]/parent::android.widget.EditText</msg>
<var>${loc}</var>
<arg>xpath=//android.widget.TextView[@text="${text}"]/parent::android.widget.EditText</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-10-10T16:04:13.279622" elapsed="0.000000"/>
</kw>
<return>
<value>${loc}</value>
<status status="PASS" start="2024-10-10T16:04:13.279622" elapsed="0.000000"/>
</return>
<msg time="2024-10-10T16:04:13.279622" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Masukkan password"]/parent::android.widget.EditText</msg>
<var>${loc}</var>
<arg>${locEdit}</arg>
<status status="PASS" start="2024-10-10T16:04:13.279622" elapsed="0.000000"/>
</kw>
<kw name="Input Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:04:13.282613" level="INFO">Typing text 'test1234' into text field 'xpath=//android.widget.TextView[@text="Masukkan password"]/parent::android.widget.EditText'</msg>
<msg time="2024-10-10T16:04:14.133853" level="INFO">xpath criteria: //android.widget.TextView[@text="Masukkan password"]/parent::android.widget.EditText</msg>
<arg>${loc}</arg>
<arg>${rand_text}</arg>
<doc>Types the given `text` into text field identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:04:13.280620" elapsed="0.853233"/>
</kw>
<arg>${text}</arg>
<arg>${locEditext}</arg>
<status status="PASS" start="2024-10-10T16:04:13.278592" elapsed="0.855261"/>
</kw>
<arg>${passwordSite}</arg>
<arg>Masukkan password</arg>
<status status="PASS" start="2024-10-10T16:04:13.278592" elapsed="0.855261"/>
</kw>
<kw name="And user input konfirmasi password" owner="userManagementPage">
<kw name="input password form user management" owner="generalFunction">
<kw name="Loc Parent EditText" owner="generalFunction">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-10-10T16:04:14.135886" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Masukkan Konfirmasi password"]/parent::android.widget.EditText</msg>
<var>${loc}</var>
<arg>xpath=//android.widget.TextView[@text="${text}"]/parent::android.widget.EditText</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-10-10T16:04:14.135886" elapsed="0.000000"/>
</kw>
<return>
<value>${loc}</value>
<status status="PASS" start="2024-10-10T16:04:14.135886" elapsed="0.000000"/>
</return>
<msg time="2024-10-10T16:04:14.135886" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Masukkan Konfirmasi password"]/parent::android.widget.EditText</msg>
<var>${loc}</var>
<arg>${locatorText}</arg>
<status status="PASS" start="2024-10-10T16:04:14.134854" elapsed="0.001032"/>
</kw>
<kw name="Swipe" owner="AppiumLibrary">
<arg>${521}</arg>
<arg>${1798}</arg>
<arg>${530}</arg>
<arg>${1207}</arg>
<doc>Swipe from one point to another point, for an optional duration.</doc>
<status status="PASS" start="2024-10-10T16:04:14.136884" elapsed="1.325458"/>
</kw>
<kw name="Input Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:04:15.465332" level="INFO">Typing text 'test1234' into text field 'xpath=//android.widget.TextView[@text="Masukkan Konfirmasi password"]/parent::android.widget.EditText'</msg>
<msg time="2024-10-10T16:04:16.094123" level="INFO">xpath criteria: //android.widget.TextView[@text="Masukkan Konfirmasi password"]/parent::android.widget.EditText</msg>
<arg>${loc}</arg>
<arg>${password}</arg>
<doc>Types the given `text` into text field identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:04:15.462342" elapsed="0.631781"/>
</kw>
<arg>${text}</arg>
<arg>Masukkan Konfirmasi password</arg>
<status status="PASS" start="2024-10-10T16:04:14.134854" elapsed="1.959269"/>
</kw>
<arg>${passwordSite}</arg>
<status status="PASS" start="2024-10-10T16:04:14.133853" elapsed="1.960270"/>
</kw>
<kw name="And user click button (parent view)" owner="generalFunction">
<kw name="Loc Parent View" owner="generalFunction">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-10-10T16:04:16.096118" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Tambah"]/parent::android.view.View</msg>
<var>${loc}</var>
<arg>xpath=//android.widget.TextView[@text="${text}"]/parent::android.view.View</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-10-10T16:04:16.096118" elapsed="0.000000"/>
</kw>
<return>
<value>${loc}</value>
<status status="PASS" start="2024-10-10T16:04:16.097114" elapsed="0.000000"/>
</return>
<msg time="2024-10-10T16:04:16.097114" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Tambah"]/parent::android.view.View</msg>
<var>${loc}</var>
<arg>${btn}</arg>
<status status="PASS" start="2024-10-10T16:04:16.095121" elapsed="0.001993"/>
</kw>
<kw name="Click Element" owner="AppiumLibrary">
<msg time="2024-10-10T16:04:16.100104" level="INFO">Clicking element 'xpath=//android.widget.TextView[@text="Tambah"]/parent::android.view.View'.</msg>
<msg time="2024-10-10T16:04:16.291625" level="INFO">xpath criteria: //android.widget.TextView[@text="Tambah"]/parent::android.view.View</msg>
<arg>${loc}</arg>
<doc>Click element identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:04:16.097114" elapsed="0.194511"/>
</kw>
<arg>Tambah</arg>
<status status="PASS" start="2024-10-10T16:04:16.095121" elapsed="0.196504"/>
</kw>
<kw name="And click alert" owner="userManagementPage">
<kw name="alert pop up show" owner="generalFunction">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:04:18.008460" level="INFO">xpath criteria: //android.widget.ImageView</msg>
<arg>${icon}</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:04:16.294617" elapsed="1.713843"/>
</kw>
<msg time="2024-10-10T16:04:18.008460" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${icon}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:04:16.294617" elapsed="1.713843"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:04:18.090731" level="INFO">Element 'xpath=//android.widget.TextView[contains(@text, "User")]' text is 'Tambah User' </msg>
<msg time="2024-10-10T16:04:18.090731" level="INFO">xpath criteria: //android.widget.TextView[contains(@text, "User")]</msg>
<msg time="2024-10-10T16:04:18.090731" level="INFO">${textTitle} = Tambah User</msg>
<var>${textTitle}</var>
<arg>${alertText}</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:04:18.008460" elapsed="0.082271"/>
</kw>
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:04:18.159816" level="INFO">Element 'xpath=//android.widget.ImageView/parent::android.view.View/android.widget.TextView[2]' text is 'Apakah Anda yakin untuk menambahkan user?' </msg>
<msg time="2024-10-10T16:04:18.159816" level="INFO">xpath criteria: //android.widget.ImageView/parent::android.view.View/android.widget.TextView[2]</msg>
<msg time="2024-10-10T16:04:18.159816" level="INFO">${textDesc} = Apakah Anda yakin untuk menambahkan user?</msg>
<var>${textDesc}</var>
<arg>${descText}</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:04:18.090731" elapsed="0.069085"/>
</kw>
<kw name="click alert parent View" owner="generalFunction">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:04:18.243008" level="INFO">xpath criteria: //android.widget.TextView[contains(@text, "User")]</msg>
<arg>${locator}</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:04:18.160814" elapsed="0.082194"/>
</kw>
<kw name="Loc Parent View" owner="generalFunction">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-10-10T16:04:18.244005" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Ya"]/parent::android.view.View</msg>
<var>${loc}</var>
<arg>xpath=//android.widget.TextView[@text="${text}"]/parent::android.view.View</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-10-10T16:04:18.244005" elapsed="0.000000"/>
</kw>
<return>
<value>${loc}</value>
<status status="PASS" start="2024-10-10T16:04:18.244005" elapsed="0.000000"/>
</return>
<msg time="2024-10-10T16:04:18.244005" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Ya"]/parent::android.view.View</msg>
<var>${loc}</var>
<arg>${btn}</arg>
<status status="PASS" start="2024-10-10T16:04:18.243008" elapsed="0.001993"/>
</kw>
<kw name="Click Element" owner="AppiumLibrary">
<msg time="2024-10-10T16:04:18.246996" level="INFO">Clicking element 'xpath=//android.widget.TextView[@text="Ya"]/parent::android.view.View'.</msg>
<msg time="2024-10-10T16:04:19.145438" level="INFO">xpath criteria: //android.widget.TextView[@text="Ya"]/parent::android.view.View</msg>
<arg>${loc}</arg>
<doc>Click element identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:04:18.245001" elapsed="0.900437"/>
</kw>
<arg>${loc_btn_alert}</arg>
<arg>${btn_click}</arg>
<status status="PASS" start="2024-10-10T16:04:18.159816" elapsed="0.985622"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Title PopUp: ${textTitle}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-10-10T16:04:19.145438" elapsed="0.001091"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Desc PopUp: ${textDesc}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-10-10T16:04:19.146529" elapsed="0.000874"/>
</kw>
<status status="PASS" start="2024-10-10T16:04:18.008460" elapsed="1.138943"/>
</branch>
<status status="PASS" start="2024-10-10T16:04:18.008460" elapsed="1.138943"/>
</if>
<arg>${iconImg}</arg>
<arg>${alertTitle}</arg>
<arg>${descTitle}</arg>
<arg>${alertTitle}</arg>
<arg>${btn_click}</arg>
<status status="PASS" start="2024-10-10T16:04:16.292623" elapsed="2.854780"/>
</kw>
<arg>Ya</arg>
<status status="PASS" start="2024-10-10T16:04:16.291625" elapsed="2.855778"/>
</kw>
<kw name="And show error message" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<kw name="Capture Page Screenshot" owner="AppiumLibrary">
<msg time="2024-10-10T16:04:22.861775" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;img src="data:image/png;base64, " width="800px"&gt;</msg>
<doc>Takes a screenshot of the current page and embeds it into the log.</doc>
<status status="PASS" start="2024-10-10T16:04:22.430783" elapsed="0.434022"/>
</kw>
<msg time="2024-10-10T16:04:22.864805" level="INFO">xpath criteria: //android.widget.TextView[contains(@text, "harus")]
xpath criteria: //android.widget.TextView[contains(@text, "harus")]
xpath criteria: //android.widget.TextView[contains(@text, "harus")]
xpath criteria: //android.widget.TextView[contains(@text, "harus")]
xpath criteria: //android.widget.TextView[contains(@text, "harus")]
xpath criteria: //android.widget.TextView[contains(@text, "harus")]
xpath criteria: //android.widget.TextView[contains(@text, "harus")]</msg>
<msg time="2024-10-10T16:04:22.864805" level="FAIL">Element locator 'xpath=//android.widget.TextView[contains(@text, "harus")]' did not match any elements after 3 seconds</msg>
<arg>${errState}</arg>
<arg>timeout=3s</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="FAIL" start="2024-10-10T16:04:19.148407" elapsed="3.717394">Element locator 'xpath=//android.widget.TextView[contains(@text, "harus")]' did not match any elements after 3 seconds</status>
</kw>
<msg time="2024-10-10T16:04:22.865801" level="INFO">${res} = False</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${errState}</arg>
<arg>timeout=3s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:04:19.148407" elapsed="3.717394"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<var>${text}</var>
<arg>${errState}</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="NOT RUN" start="2024-10-10T16:04:22.866798" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Error Log: ${text}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:22.866798" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${text}</arg>
<arg>${errMsg}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:22.866798" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:22.866798" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:04:23.140745" level="INFO">xpath criteria: //android.widget.TextView[contains(@text, "terdaftar")]</msg>
<arg>${hasRegistered}</arg>
<arg>timeout=3s</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:04:22.867795" elapsed="0.272950"/>
</kw>
<msg time="2024-10-10T16:04:23.140745" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${hasRegistered}</arg>
<arg>timeout=3s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:04:22.866798" elapsed="0.273947"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:04:23.341860" level="INFO">Element 'xpath=//android.widget.TextView[contains(@text, "terdaftar")]' text is 'No. handphone sudah terdaftar' </msg>
<msg time="2024-10-10T16:04:23.341860" level="INFO">xpath criteria: //android.widget.TextView[contains(@text, "terdaftar")]</msg>
<msg time="2024-10-10T16:04:23.341860" level="INFO">${text} = No. handphone sudah terdaftar</msg>
<var>${text}</var>
<arg>${hasRegistered}</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:04:23.141739" elapsed="0.201117"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Error Log: ${text}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-10-10T16:04:23.342856" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${text}</arg>
<arg>${errMsg}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-10-10T16:04:23.343817" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2024-10-10T16:04:23.140745" elapsed="0.204072"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>N/A</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:23.344817" elapsed="0.000000"/>
</kw>
<kw name="Get Text" owner="AppiumLibrary">
<var>${text}</var>
<arg>${notPassVerif}</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="NOT RUN" start="2024-10-10T16:04:23.345812" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Error Log: ${text}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:23.345812" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:23.344817" elapsed="0.000995"/>
</branch>
<status status="PASS" start="2024-10-10T16:04:23.140745" elapsed="0.205067"/>
</if>
<status status="PASS" start="2024-10-10T16:04:22.866798" elapsed="0.479014"/>
</branch>
<status status="PASS" start="2024-10-10T16:04:22.866798" elapsed="0.479014"/>
</if>
<arg>No. handphone sudah terdaftar</arg>
<status status="PASS" start="2024-10-10T16:04:19.147403" elapsed="4.198409"/>
</kw>
<status status="PASS" start="2024-10-10T16:03:57.621017" elapsed="25.724795"/>
</kw>
<kw name="Close App" owner="openApp" type="TEARDOWN">
<kw name="Close Application" owner="AppiumLibrary">
<doc>Closes the current application and also close webdriver session.</doc>
<status status="PASS" start="2024-10-10T16:04:23.346529" elapsed="0.415261"/>
</kw>
<status status="PASS" start="2024-10-10T16:04:23.346529" elapsed="0.415261"/>
</kw>
<doc>This scenario test User Create User Management (Site/PIC) with No Telp has been resgistered</doc>
<tag>1000s</tag>
<tag>test</tag>
<tag>user Management</tag>
<status status="PASS" start="2024-10-10T16:03:50.647897" elapsed="33.113893"/>
</test>
<test id="s1-t5" name="Test Create User Management with confirm password not match" line="30">
<kw name="Open app Dev Project" owner="openApp" type="SETUP">
<kw name="Open Application" owner="AppiumLibrary">
<arg>http://127.0.0.1:4723</arg>
<arg>platformName=${platformName}</arg>
<arg>deviceName=${udid}</arg>
<arg>appPackage=${appPackage}</arg>
<arg>appActivity=${appActivity}</arg>
<arg>automationName=UiAutomator2</arg>
<doc>Opens a new application to given Appium server.
Capabilities of appium server, Android and iOS,
Please check https://appium.io/docs/en/2.1/cli/args/
| *Option*            | *Man.* | *Description*     |
| remote_url          | Yes    | Appium server url |
| alias               | no     | alias             |
| strict_ssl          | No     | allows you to send commands to an invalid certificate host like a self-signed one. |</doc>
<status status="PASS" start="2024-10-10T16:04:23.764421" elapsed="7.749437"/>
</kw>
<status status="PASS" start="2024-10-10T16:04:23.764421" elapsed="7.749437"/>
</kw>
<kw name="User create User Management confirm password not match" owner="userManagement">
<kw name="Given user go to User Management page" owner="userManagementPage">
<kw name="User Login" owner="loginPage">
<kw name="Given user input no handphone" owner="loginPage">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:04:33.457656" level="INFO">xpath criteria: //android.widget.TextView[@text="Login"]</msg>
<arg>${titleLogin}</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:04:31.516476" elapsed="1.941180"/>
</kw>
<kw name="Input Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:04:33.461679" level="INFO">Typing text '088210068283' into text field 'xpath=//android.widget.EditText[1]'</msg>
<msg time="2024-10-10T16:04:33.621995" level="INFO">xpath criteria: //android.widget.EditText[1]</msg>
<arg>${inputNoHandphone}</arg>
<arg>${noHandphone}</arg>
<doc>Types the given `text` into text field identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:04:33.457656" elapsed="0.164339"/>
</kw>
<arg>${akunOP}</arg>
<status status="PASS" start="2024-10-10T16:04:31.515444" elapsed="2.106551"/>
</kw>
<kw name="When user input password" owner="loginPage">
<kw name="Input Password" owner="AppiumLibrary">
<msg time="2024-10-10T16:04:33.626016" level="INFO">Typing password into text field 'xpath=//android.widget.EditText[2]'</msg>
<msg time="2024-10-10T16:04:34.277276" level="INFO">xpath criteria: //android.widget.EditText[2]</msg>
<arg>${inputPassword}</arg>
<arg>${password}</arg>
<doc>Types the given password into text field identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:04:33.622991" elapsed="0.655281"/>
</kw>
<arg>${passwordProject}</arg>
<status status="PASS" start="2024-10-10T16:04:33.622991" elapsed="0.655281"/>
</kw>
<kw name="Then click button masuk" owner="loginPage">
<kw name="Click Element" owner="AppiumLibrary">
<msg time="2024-10-10T16:04:34.282263" level="INFO">Clicking element 'xpath=//android.view.View/android.view.View[2]'.</msg>
<msg time="2024-10-10T16:04:34.651325" level="INFO">xpath criteria: //android.view.View/android.view.View[2]</msg>
<arg>${buttonMasuk}</arg>
<doc>Click element identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:04:34.279271" elapsed="0.373054"/>
</kw>
<status status="PASS" start="2024-10-10T16:04:34.278272" elapsed="0.374053"/>
</kw>
<kw name="And home Project" owner="loginPage">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<arg>accessibility_id=Icon Projects</arg>
<arg>timeout=10s</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:04:34.652325" elapsed="2.407446"/>
</kw>
<kw name="Element Should Be Visible" owner="AppiumLibrary">
<arg>accessibility_id=Icon Projects</arg>
<doc>Verifies that element identified with locator is visible.</doc>
<status status="PASS" start="2024-10-10T16:04:37.059771" elapsed="0.383344"/>
</kw>
<kw name="Element Should Be Visible" owner="AppiumLibrary">
<arg>accessibility_id=Notification</arg>
<doc>Verifies that element identified with locator is visible.</doc>
<status status="PASS" start="2024-10-10T16:04:37.443115" elapsed="0.134546"/>
</kw>
<kw name="Element Should Be Visible" owner="AppiumLibrary">
<arg>accessibility_id=Icon Search</arg>
<doc>Verifies that element identified with locator is visible.</doc>
<status status="PASS" start="2024-10-10T16:04:37.577661" elapsed="0.114976"/>
</kw>
<status status="PASS" start="2024-10-10T16:04:34.652325" elapsed="3.040312"/>
</kw>
<status status="PASS" start="2024-10-10T16:04:31.515444" elapsed="6.177193"/>
</kw>
<kw name="Loc Parent View" owner="generalFunction">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-10-10T16:04:37.693669" level="INFO">${loc} = xpath=//android.widget.TextView[@text="User Management"]/parent::android.view.View</msg>
<var>${loc}</var>
<arg>xpath=//android.widget.TextView[@text="${text}"]/parent::android.view.View</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-10-10T16:04:37.693669" elapsed="0.000000"/>
</kw>
<return>
<value>${loc}</value>
<status status="PASS" start="2024-10-10T16:04:37.693669" elapsed="0.000000"/>
</return>
<msg time="2024-10-10T16:04:37.693669" level="INFO">${loc} = xpath=//android.widget.TextView[@text="User Management"]/parent::android.view.View</msg>
<var>${loc}</var>
<arg>User Management</arg>
<status status="PASS" start="2024-10-10T16:04:37.692637" elapsed="0.001032"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:04:37.890392" level="INFO">xpath criteria: //android.widget.TextView[@text="User Management"]/parent::android.view.View</msg>
<arg>${loc}</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:04:37.693669" elapsed="0.196723"/>
</kw>
<kw name="Click Element" owner="AppiumLibrary">
<msg time="2024-10-10T16:04:37.894377" level="INFO">Clicking element 'xpath=//android.widget.TextView[@text="User Management"]/parent::android.view.View'.</msg>
<msg time="2024-10-10T16:04:38.125307" level="INFO">xpath criteria: //android.widget.TextView[@text="User Management"]/parent::android.view.View</msg>
<arg>${loc}</arg>
<doc>Click element identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:04:37.890392" elapsed="0.234915"/>
</kw>
<status status="PASS" start="2024-10-10T16:04:31.515444" elapsed="6.609863"/>
</kw>
<kw name="And Get Detail Text User Management" owner="userManagementPage">
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-10-10T16:04:38.126342" level="INFO">${random} = 2</msg>
<var>${random}</var>
<arg>random.randint(1, 3)</arg>
<arg>modules=random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-10-10T16:04:38.126342" elapsed="0.000997"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:04:38.127339" level="INFO">${indexUser} = 2</msg>
<arg>${indexUser}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:04:38.127339" elapsed="0.000000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-10-10T16:04:38.127339" level="INFO">Random : 2</msg>
<arg>Random : ${random}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-10-10T16:04:38.127339" elapsed="0.000000"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-10-10T16:04:38.128298" level="INFO">Length is 103.</msg>
<msg time="2024-10-10T16:04:38.128298" level="INFO">${len} = 103</msg>
<var>${len}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-10-10T16:04:38.128298" elapsed="0.000000"/>
</kw>
<for flavor="IN RANGE">
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<kw name="Capture Page Screenshot" owner="AppiumLibrary">
<msg time="2024-10-10T16:04:43.603724" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;img src="data:image/png;base64, " width="800px"&gt;</msg>
<doc>Takes a screenshot of the current page and embeds it into the log.</doc>
<status status="PASS" start="2024-10-10T16:04:43.225946" elapsed="0.379774"/>
</kw>
<msg time="2024-10-10T16:04:43.605720" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View</msg>
<msg time="2024-10-10T16:04:43.606715" level="FAIL">Element locator 'xpath=(//android.view.View[@content-desc="Image"])[2]/parent::android.view.View' did not match any elements after 5 seconds</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="FAIL" start="2024-10-10T16:04:38.130294" elapsed="5.476421">Element locator 'xpath=(//android.view.View[@content-desc="Image"])[2]/parent::android.view.View' did not match any elements after 5 seconds</status>
</kw>
<msg time="2024-10-10T16:04:43.607713" level="INFO">${res} = False</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:04:38.129333" elapsed="5.478380"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="NOT RUN" start="2024-10-10T16:04:43.607713" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:43.608711" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:43.607713" elapsed="0.000998"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<msg time="2024-10-10T16:04:43.608711" level="INFO">false</msg>
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-10-10T16:04:43.608711" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-10-10T16:04:43.608711" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:04:43.607713" elapsed="0.000998"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:04:38.129333" elapsed="5.479378"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:04:43.609707" level="INFO">${nameUserManagement} = 0</msg>
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:04:43.608711" elapsed="0.000996"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-10-10T16:04:43.609707" elapsed="0.000998"/>
</kw>
<status status="PASS" start="2024-10-10T16:04:38.129333" elapsed="5.481372"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:43.610705" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:43.610705" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:43.611702" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:43.610705" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:43.611702" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:43.611702" elapsed="0.001000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:43.612702" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:43.612702" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:43.612702" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:43.613737" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:43.613737" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:43.612702" elapsed="0.001035"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:43.613737" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:43.613737" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:43.614730" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:43.614730" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:43.614730" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:43.613737" elapsed="0.000993"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:43.614730" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:43.614730" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:43.615729" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:43.615729" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:43.616690" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:43.615729" elapsed="0.000961"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:04:43.616690" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:04:43.616690" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:04:38.129333" elapsed="5.487357"/>
</if>
<var name="${counter}">1</var>
<status status="PASS" start="2024-10-10T16:04:38.128298" elapsed="5.488392"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:43.617687" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:43.617687" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:43.617687" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:43.616690" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<kw name="Capture Page Screenshot" owner="AppiumLibrary">
<msg time="2024-10-10T16:04:49.666181" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;img src="data:image/png;base64, " width="800px"&gt;</msg>
<doc>Takes a screenshot of the current page and embeds it into the log.</doc>
<status status="PASS" start="2024-10-10T16:04:49.348676" elapsed="0.319499"/>
</kw>
<msg time="2024-10-10T16:04:49.668175" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View</msg>
<msg time="2024-10-10T16:04:49.668175" level="FAIL">Element locator 'xpath=(//android.view.View[@content-desc="Image"])[2]/parent::android.view.View' did not match any elements after 5 seconds</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="FAIL" start="2024-10-10T16:04:43.618718" elapsed="6.050454">Element locator 'xpath=(//android.view.View[@content-desc="Image"])[2]/parent::android.view.View' did not match any elements after 5 seconds</status>
</kw>
<msg time="2024-10-10T16:04:49.669172" level="INFO">${res} = False</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:04:43.618718" elapsed="6.050454"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="NOT RUN" start="2024-10-10T16:04:49.670169" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:49.670169" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:49.670169" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<msg time="2024-10-10T16:04:49.670169" level="INFO">false</msg>
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-10-10T16:04:49.670169" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-10-10T16:04:49.670169" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:04:49.670169" elapsed="0.000000"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:04:43.617687" elapsed="6.053479"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:04:49.671166" level="INFO">${jabatan} = 0</msg>
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:04:49.671166" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-10-10T16:04:49.671166" elapsed="0.000914"/>
</kw>
<status status="PASS" start="2024-10-10T16:04:43.617687" elapsed="6.054393"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:49.672080" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:49.672080" elapsed="0.001005"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:49.673085" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:49.673085" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:49.673085" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:49.673085" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:49.673085" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:49.673085" elapsed="0.000996"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:49.674081" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:49.674081" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:49.675080" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:49.675080" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:49.675080" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:49.674081" elapsed="0.000999"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:49.676076" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:49.676076" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:49.676076" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:49.677074" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:49.677074" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:49.676076" elapsed="0.000998"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:04:49.677074" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:04:49.677074" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:04:43.616690" elapsed="6.060384"/>
</if>
<var name="${counter}">2</var>
<status status="PASS" start="2024-10-10T16:04:43.616690" elapsed="6.060384"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:49.678070" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:49.679069" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:49.679069" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:49.678070" elapsed="0.000999"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:49.679069" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:49.679069" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:49.680066" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:49.679069" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<kw name="Capture Page Screenshot" owner="AppiumLibrary">
<msg time="2024-10-10T16:04:56.633692" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;img src="data:image/png;base64, " width="800px"&gt;</msg>
<doc>Takes a screenshot of the current page and embeds it into the log.</doc>
<status status="PASS" start="2024-10-10T16:04:56.239702" elapsed="0.395987"/>
</kw>
<msg time="2024-10-10T16:04:56.635689" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View</msg>
<msg time="2024-10-10T16:04:56.635689" level="FAIL">Element locator 'xpath=(//android.view.View[@content-desc="Image"])[2]/parent::android.view.View' did not match any elements after 5 seconds</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="FAIL" start="2024-10-10T16:04:49.681063" elapsed="6.955623">Element locator 'xpath=(//android.view.View[@content-desc="Image"])[2]/parent::android.view.View' did not match any elements after 5 seconds</status>
</kw>
<msg time="2024-10-10T16:04:56.636686" level="INFO">${res} = False</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:04:49.680066" elapsed="6.956620"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="NOT RUN" start="2024-10-10T16:04:56.636686" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:56.637682" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:56.636686" elapsed="0.000996"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<msg time="2024-10-10T16:04:56.637682" level="INFO">false</msg>
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-10-10T16:04:56.637682" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-10-10T16:04:56.637682" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:04:56.636686" elapsed="0.000996"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:04:49.680066" elapsed="6.957616"/>
</kw>
<status status="PASS" start="2024-10-10T16:04:49.680066" elapsed="6.957616"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:56.638680" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:56.638680" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:56.638680" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:56.639677" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:56.639677" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:56.637682" elapsed="0.001995"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:56.639677" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:56.639677" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:56.640674" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:56.640674" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:56.640674" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:56.639677" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:56.641672" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:56.640674" elapsed="0.000998"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:56.641672" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:56.641672" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:56.642669" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:56.641672" elapsed="0.000997"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:04:56.642669" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:04:56.642669" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:04:49.678070" elapsed="6.964599"/>
</if>
<var name="${counter}">3</var>
<status status="PASS" start="2024-10-10T16:04:49.678070" elapsed="6.964599"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:56.643666" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:56.643666" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:56.644664" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:56.642669" elapsed="0.001995"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:56.644664" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:56.644664" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:04:56.644664" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:56.644664" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:04:56.645661" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:04:56.645661" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<kw name="Capture Page Screenshot" owner="AppiumLibrary">
<msg time="2024-10-10T16:05:02.582431" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;img src="data:image/png;base64, " width="800px"&gt;</msg>
<doc>Takes a screenshot of the current page and embeds it into the log.</doc>
<status status="PASS" start="2024-10-10T16:05:02.220555" elapsed="0.363904"/>
</kw>
<msg time="2024-10-10T16:05:02.584459" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View</msg>
<msg time="2024-10-10T16:05:02.584459" level="FAIL">Element locator 'xpath=(//android.view.View[@content-desc="Image"])[2]/parent::android.view.View' did not match any elements after 5 seconds</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="FAIL" start="2024-10-10T16:04:56.646657" elapsed="5.938805">Element locator 'xpath=(//android.view.View[@content-desc="Image"])[2]/parent::android.view.View' did not match any elements after 5 seconds</status>
</kw>
<msg time="2024-10-10T16:05:02.585462" level="INFO">${res} = False</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:04:56.646657" elapsed="5.938805"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="NOT RUN" start="2024-10-10T16:05:02.585462" elapsed="0.000994"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:02.586456" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:02.585462" elapsed="0.000994"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<msg time="2024-10-10T16:05:02.586456" level="INFO">false</msg>
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-10-10T16:05:02.586456" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-10-10T16:05:02.586456" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:05:02.585462" elapsed="0.000994"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:04:56.645661" elapsed="5.940795"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:05:02.587453" level="INFO">${noTelp} = 0</msg>
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:05:02.586456" elapsed="0.000997"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-10-10T16:05:02.587453" elapsed="0.000960"/>
</kw>
<kw name="Replace String" owner="String">
<msg time="2024-10-10T16:05:02.589449" level="INFO">${replaceNumb} = 0</msg>
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-10-10T16:05:02.588413" elapsed="0.001036"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:05:02.590408" level="INFO">${replaceNumb} = 0</msg>
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:05:02.589449" elapsed="0.000959"/>
</kw>
<status status="PASS" start="2024-10-10T16:04:56.645661" elapsed="5.944747"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:02.590408" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:02.590408" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:02.590408" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:02.591445" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:02.591445" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:02.590408" elapsed="0.001037"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:02.591445" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:02.591445" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:02.591445" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:02.592439" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:02.592439" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:02.591445" elapsed="0.000994"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:05:02.592439" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:05:02.592439" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:04:56.642669" elapsed="5.949770"/>
</if>
<var name="${counter}">4</var>
<status status="PASS" start="2024-10-10T16:04:56.642669" elapsed="5.949770"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:02.593401" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:02.594400" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:02.594400" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:02.593401" elapsed="0.000999"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:02.594400" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:02.595397" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:02.595397" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:02.594400" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:02.595397" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:02.595397" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:02.596395" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:02.596395" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:02.596395" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:02.596395" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:02.597396" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:02.595397" elapsed="0.001999"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<kw name="Capture Page Screenshot" owner="AppiumLibrary">
<msg time="2024-10-10T16:05:08.685129" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;img src="data:image/png;base64, " width="800px"&gt;</msg>
<doc>Takes a screenshot of the current page and embeds it into the log.</doc>
<status status="PASS" start="2024-10-10T16:05:08.329757" elapsed="0.357366"/>
</kw>
<msg time="2024-10-10T16:05:08.687123" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View</msg>
<msg time="2024-10-10T16:05:08.687123" level="FAIL">Element locator 'xpath=(//android.view.View[@content-desc="Image"])[2]/parent::android.view.View' did not match any elements after 5 seconds</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="FAIL" start="2024-10-10T16:05:02.598389" elapsed="6.089769">Element locator 'xpath=(//android.view.View[@content-desc="Image"])[2]/parent::android.view.View' did not match any elements after 5 seconds</status>
</kw>
<msg time="2024-10-10T16:05:08.688158" level="INFO">${res} = False</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:05:02.598389" elapsed="6.089769"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="NOT RUN" start="2024-10-10T16:05:08.688158" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:08.689152" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:08.688158" elapsed="0.000994"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<msg time="2024-10-10T16:05:08.689152" level="INFO">false</msg>
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-10-10T16:05:08.689152" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-10-10T16:05:08.689152" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:05:08.688158" elapsed="0.000994"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:05:02.597396" elapsed="6.091756"/>
</kw>
<status status="PASS" start="2024-10-10T16:05:02.597396" elapsed="6.091756"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:08.689152" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:08.690150" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:08.690150" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:08.689152" elapsed="0.000998"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:08.690150" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:08.690150" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:08.691111" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:08.691111" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:08.691111" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:08.690150" elapsed="0.000961"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:05:08.691111" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:05:08.691111" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:05:02.593401" elapsed="6.097710"/>
</if>
<var name="${counter}">5</var>
<status status="PASS" start="2024-10-10T16:05:02.593401" elapsed="6.097710"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:08.692111" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:08.693142" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:08.693142" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:08.692111" elapsed="0.001031"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:08.693142" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:08.694139" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:08.694139" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:08.693142" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:08.694139" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:08.694139" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:08.695138" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:08.695138" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:08.695138" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:08.695138" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:08.695138" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:08.694139" elapsed="0.001993"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:08.696132" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:08.696132" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<kw name="Capture Page Screenshot" owner="AppiumLibrary">
<msg time="2024-10-10T16:05:14.138213" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;img src="data:image/png;base64, " width="800px"&gt;</msg>
<doc>Takes a screenshot of the current page and embeds it into the log.</doc>
<status status="PASS" start="2024-10-10T16:05:13.801532" elapsed="0.338640"/>
</kw>
<msg time="2024-10-10T16:05:14.140172" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View</msg>
<msg time="2024-10-10T16:05:14.140172" level="FAIL">Element locator 'xpath=(//android.view.View[@content-desc="Image"])[2]/parent::android.view.View' did not match any elements after 5 seconds</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="FAIL" start="2024-10-10T16:05:08.697136" elapsed="5.444034">Element locator 'xpath=(//android.view.View[@content-desc="Image"])[2]/parent::android.view.View' did not match any elements after 5 seconds</status>
</kw>
<msg time="2024-10-10T16:05:14.141170" level="INFO">${res} = False</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:05:08.697136" elapsed="5.444034"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="NOT RUN" start="2024-10-10T16:05:14.141170" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:14.142167" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:14.141170" elapsed="0.000997"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<msg time="2024-10-10T16:05:14.142167" level="INFO">false</msg>
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-10-10T16:05:14.142167" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-10-10T16:05:14.142167" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:05:14.141170" elapsed="0.000997"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:05:08.696132" elapsed="5.446035"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:05:14.143200" level="INFO">${email} = 0</msg>
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:05:14.142167" elapsed="0.001033"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-10-10T16:05:14.143200" elapsed="0.000961"/>
</kw>
<status status="PASS" start="2024-10-10T16:05:08.696132" elapsed="5.448029"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:14.144161" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:14.144161" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:14.144161" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:14.145193" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:14.145193" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:14.144161" elapsed="0.001032"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:05:14.145193" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:05:14.145193" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:05:08.692111" elapsed="5.453082"/>
</if>
<var name="${counter}">6</var>
<status status="PASS" start="2024-10-10T16:05:08.692111" elapsed="5.453082"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:14.146195" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:14.146195" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:14.147152" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:14.146195" elapsed="0.000957"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:14.147152" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:14.147152" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:14.148151" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:14.147152" elapsed="0.000999"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:14.148151" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:14.148151" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:14.149186" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:14.149186" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:14.149186" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:14.149186" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:14.149186" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:14.148151" elapsed="0.001035"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:14.150181" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:14.149186" elapsed="0.000995"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:14.150181" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:14.150181" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:14.151186" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:14.150181" elapsed="0.001005"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<kw name="Capture Page Screenshot" owner="AppiumLibrary">
<msg time="2024-10-10T16:05:19.762226" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;img src="data:image/png;base64, " width="800px"&gt;</msg>
<doc>Takes a screenshot of the current page and embeds it into the log.</doc>
<status status="PASS" start="2024-10-10T16:05:19.424754" elapsed="0.339469"/>
</kw>
<msg time="2024-10-10T16:05:19.764223" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View</msg>
<msg time="2024-10-10T16:05:19.764223" level="FAIL">Element locator 'xpath=(//android.view.View[@content-desc="Image"])[2]/parent::android.view.View' did not match any elements after 5 seconds</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="FAIL" start="2024-10-10T16:05:14.153140" elapsed="5.612115">Element locator 'xpath=(//android.view.View[@content-desc="Image"])[2]/parent::android.view.View' did not match any elements after 5 seconds</status>
</kw>
<msg time="2024-10-10T16:05:19.765255" level="INFO">${res} = False</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:05:14.152182" elapsed="5.613073"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="NOT RUN" start="2024-10-10T16:05:19.765255" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:19.766251" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:19.765255" elapsed="0.000996"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<msg time="2024-10-10T16:05:19.766251" level="INFO">false</msg>
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-10-10T16:05:19.766251" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-10-10T16:05:19.766251" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:05:19.765255" elapsed="0.000996"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:05:14.151186" elapsed="5.615065"/>
</kw>
<status status="PASS" start="2024-10-10T16:05:14.151186" elapsed="5.615065"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:19.767249" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:19.767249" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:19.767249" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:19.766251" elapsed="0.000998"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:05:19.767249" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:05:19.767249" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:05:14.146195" elapsed="5.621054"/>
</if>
<var name="${counter}">7</var>
<status status="PASS" start="2024-10-10T16:05:14.146195" elapsed="5.621054"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:19.768248" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:19.768248" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:19.768248" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:19.768248" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:19.769244" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:19.769244" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:19.769244" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:19.768248" elapsed="0.000996"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:19.770242" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:19.769244" elapsed="0.000998"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:19.771201" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:19.771201" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:19.771201" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:19.771201" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:19.771201" elapsed="0.001033"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:19.770242" elapsed="0.001992"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:19.772234" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:19.772234" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:19.772234" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:19.773230" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:19.773230" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:19.772234" elapsed="0.000996"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:19.773230" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:19.773230" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<kw name="Capture Page Screenshot" owner="AppiumLibrary">
<msg time="2024-10-10T16:05:25.352823" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;img src="data:image/png;base64, " width="800px"&gt;</msg>
<doc>Takes a screenshot of the current page and embeds it into the log.</doc>
<status status="PASS" start="2024-10-10T16:05:25.007658" elapsed="0.347155"/>
</kw>
<msg time="2024-10-10T16:05:25.354813" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View</msg>
<msg time="2024-10-10T16:05:25.354813" level="FAIL">Element locator 'xpath=(//android.view.View[@content-desc="Image"])[2]/parent::android.view.View' did not match any elements after 5 seconds</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="FAIL" start="2024-10-10T16:05:19.774231" elapsed="5.581582">Element locator 'xpath=(//android.view.View[@content-desc="Image"])[2]/parent::android.view.View' did not match any elements after 5 seconds</status>
</kw>
<msg time="2024-10-10T16:05:25.355813" level="INFO">${res} = False</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:05:19.774231" elapsed="5.581582"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="NOT RUN" start="2024-10-10T16:05:25.356811" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:25.356811" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:25.355813" elapsed="0.000998"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<msg time="2024-10-10T16:05:25.356811" level="INFO">false</msg>
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-10-10T16:05:25.356811" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-10-10T16:05:25.356811" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:05:25.355813" elapsed="0.000998"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:05:19.774231" elapsed="5.583576"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:05:25.357807" level="INFO">${projActive} = 0</msg>
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:05:25.357807" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-10-10T16:05:25.357807" elapsed="0.000922"/>
</kw>
<status status="PASS" start="2024-10-10T16:05:19.773230" elapsed="5.585499"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:05:25.358729" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:05:25.358729" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:05:19.768248" elapsed="5.590481"/>
</if>
<var name="${counter}">8</var>
<status status="PASS" start="2024-10-10T16:05:19.768248" elapsed="5.590481"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:25.359765" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:25.359765" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:25.359765" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:25.359765" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:25.360764" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:25.360764" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:25.360764" elapsed="0.000998"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:25.359765" elapsed="0.001997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:25.361762" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:25.361762" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:25.362722" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:25.362722" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:25.362722" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:25.363719" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:25.363719" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:25.361762" elapsed="0.001957"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:25.363719" elapsed="0.000998"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:25.363719" elapsed="0.000998"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:25.364717" elapsed="0.000998"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:25.365715" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:25.365715" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:25.364717" elapsed="0.000998"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:25.366712" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:25.365715" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:25.367710" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:25.367710" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:25.367710" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:25.366712" elapsed="0.001994"/>
</branch>
<branch type="ELSE">
<break>
<status status="PASS" start="2024-10-10T16:05:25.368706" elapsed="0.000000"/>
</break>
<status status="PASS" start="2024-10-10T16:05:25.368706" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:05:25.359765" elapsed="0.008941"/>
</if>
<var name="${counter}">9</var>
<status status="PASS" start="2024-10-10T16:05:25.359765" elapsed="0.008941"/>
</iter>
<var>${counter}</var>
<value>1</value>
<value>${len}</value>
<status status="PASS" start="2024-10-10T16:04:38.128298" elapsed="47.240408"/>
</for>
<status status="PASS" start="2024-10-10T16:04:38.126342" elapsed="47.242364"/>
</kw>
<kw name="When user add user management" owner="userManagementPage">
<kw name="home Project" owner="loginPage">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<kw name="Capture Page Screenshot" owner="AppiumLibrary">
<msg time="2024-10-10T16:05:26.530152" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;img src="data:image/png;base64, " width="800px"&gt;</msg>
<doc>Takes a screenshot of the current page and embeds it into the log.</doc>
<status status="PASS" start="2024-10-10T16:05:26.191387" elapsed="0.340761"/>
</kw>
<msg time="2024-10-10T16:05:26.533181" level="FAIL">StaleElementReferenceException: Message: Cached elements 'By.accessibilityId: Icon Projects' do not exist in DOM anymore; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception
Stacktrace:
io.appium.uiautomator2.common.exceptions.StaleElementReferenceException: Cached elements 'By.accessibilityId: Icon Projects' do not exist in DOM anymore
	at io.appium.uiautomator2.model.ElementsCache.restore(ElementsCache.java:78)
	at io.appium.uiautomator2.model.ElementsCache.get(ElementsCache.java:153)
	at io.appium.uiautomator2.handler.GetElementAttribute.safeHandle(GetElementAttribute.java:23)
	at io.appium.uiautomator2.handler.request.SafeRequestHandler.handle(SafeRequestHandler.java:59)
	at io.appium.uiautomator2.server.AppiumServlet.handleRequest(AppiumServlet.java:259)
	at io.appium.uiautomator2.server.AppiumServlet.handleHttpRequest(AppiumServlet.java:253)
	at io.appium.uiautomator2.http.ServerHandler.channelRead(ServerHandler.java:77)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:435)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:293)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:267)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:250)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)
	at io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:266)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1294)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:911)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:611)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:552)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:466)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:438)
	at io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:140)
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:144)
	at java.lang.Thread.run(Thread.java:1012)
</msg>
<arg>accessibility_id=Icon Projects</arg>
<arg>timeout=10s</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="FAIL" start="2024-10-10T16:05:25.370701" elapsed="1.165436">StaleElementReferenceException: Message: Cached elements 'By.accessibilityId: Icon Projects' do not exist in DOM anymore; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception
Stacktrace:
io.appium.uiautomator2.common.exceptions.StaleElementReferenceException: Cached elements 'By.accessibilityId: Icon Projects' do not exist in DOM anymore
	at io.appium.uiautomator2.model.ElementsCache.restore(ElementsCache.java:78)
	at io.appium.uiautomator2.model.ElementsCache.get(ElementsCache.java:153)
	at io.appium.uiautomator2.handler.GetElementAttribute.safeHandle(GetElementAttribute.java:23)
	at io.appium.uiautomator2.handler.request.SafeRequestHandler.handle(SafeRequestHandler.java:59)
	at io.appium.uiautomator2.server.AppiumServlet.handleRequest(AppiumServlet.java:259)
	at io.appium.uiautomator2.server.AppiumServlet.handleHttpRequest(AppiumServlet.java:253)
	at io.appium.uiautomator2.http.ServerHandler.channelRead(ServerHandler.java:77)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(Abstra...
    [ Message content over the limit has been removed. ]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:911)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:611)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:552)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:466)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:438)
	at io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:140)
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:144)
	at java.lang.Thread.run(Thread.java:1012)</status>
</kw>
<kw name="Element Should Be Visible" owner="AppiumLibrary">
<arg>accessibility_id=Icon Projects</arg>
<doc>Verifies that element identified with locator is visible.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:26.536137" elapsed="0.001035"/>
</kw>
<kw name="Element Should Be Visible" owner="AppiumLibrary">
<arg>accessibility_id=Notification</arg>
<doc>Verifies that element identified with locator is visible.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:26.537172" elapsed="0.000000"/>
</kw>
<kw name="Element Should Be Visible" owner="AppiumLibrary">
<arg>accessibility_id=Icon Search</arg>
<doc>Verifies that element identified with locator is visible.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:26.537172" elapsed="0.000000"/>
</kw>
<status status="FAIL" start="2024-10-10T16:05:25.370701" elapsed="1.166471">StaleElementReferenceException: Message: Cached elements 'By.accessibilityId: Icon Projects' do not exist in DOM anymore; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception
Stacktrace:
io.appium.uiautomator2.common.exceptions.StaleElementReferenceException: Cached elements 'By.accessibilityId: Icon Projects' do not exist in DOM anymore
	at io.appium.uiautomator2.model.ElementsCache.restore(ElementsCache.java:78)
	at io.appium.uiautomator2.model.ElementsCache.get(ElementsCache.java:153)
	at io.appium.uiautomator2.handler.GetElementAttribute.safeHandle(GetElementAttribute.java:23)
	at io.appium.uiautomator2.handler.request.SafeRequestHandler.handle(SafeRequestHandler.java:59)
	at io.appium.uiautomator2.server.AppiumServlet.handleRequest(AppiumServlet.java:259)
	at io.appium.uiautomator2.server.AppiumServlet.handleHttpRequest(AppiumServlet.java:253)
	at io.appium.uiautomator2.http.ServerHandler.channelRead(ServerHandler.java:77)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(Abstra...
    [ Message content over the limit has been removed. ]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:911)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:611)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:552)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:466)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:438)
	at io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:140)
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:144)
	at java.lang.Thread.run(Thread.java:1012)</status>
</kw>
<kw name="Loc Parent View" owner="generalFunction">
<var>${loc}</var>
<arg>Tambah User</arg>
<status status="NOT RUN" start="2024-10-10T16:05:26.540163" elapsed="0.000000"/>
</kw>
<kw name="Click Element" owner="AppiumLibrary">
<arg>${loc}</arg>
<doc>Click element identified by `locator`.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:26.540163" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<arg>${textUploadFile}</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:26.540163" elapsed="0.000000"/>
</kw>
<status status="FAIL" start="2024-10-10T16:05:25.369704" elapsed="1.171454">StaleElementReferenceException: Message: Cached elements 'By.accessibilityId: Icon Projects' do not exist in DOM anymore; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception
Stacktrace:
io.appium.uiautomator2.common.exceptions.StaleElementReferenceException: Cached elements 'By.accessibilityId: Icon Projects' do not exist in DOM anymore
	at io.appium.uiautomator2.model.ElementsCache.restore(ElementsCache.java:78)
	at io.appium.uiautomator2.model.ElementsCache.get(ElementsCache.java:153)
	at io.appium.uiautomator2.handler.GetElementAttribute.safeHandle(GetElementAttribute.java:23)
	at io.appium.uiautomator2.handler.request.SafeRequestHandler.handle(SafeRequestHandler.java:59)
	at io.appium.uiautomator2.server.AppiumServlet.handleRequest(AppiumServlet.java:259)
	at io.appium.uiautomator2.server.AppiumServlet.handleHttpRequest(AppiumServlet.java:253)
	at io.appium.uiautomator2.http.ServerHandler.channelRead(ServerHandler.java:77)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(Abstra...
    [ Message content over the limit has been removed. ]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:911)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:611)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:552)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:466)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:438)
	at io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:140)
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:144)
	at java.lang.Thread.run(Thread.java:1012)</status>
</kw>
<kw name="Then user input Nama user management" owner="userManagementPage">
<status status="NOT RUN" start="2024-10-10T16:05:26.541158" elapsed="0.000000"/>
</kw>
<kw name="And user input text (EditText)" owner="userManagementPage">
<arg>${randomStr}</arg>
<arg>Masukan jabatan user</arg>
<status status="NOT RUN" start="2024-10-10T16:05:26.541158" elapsed="0.000000"/>
</kw>
<kw name="And user input text (EditText)" owner="userManagementPage">
<arg>${randomEmail}</arg>
<arg>Masukkan email user</arg>
<status status="NOT RUN" start="2024-10-10T16:05:26.541158" elapsed="0.000000"/>
</kw>
<kw name="And user input text (EditText)" owner="userManagementPage">
<arg>${randNumber}</arg>
<arg>08xxxxxxxxxx</arg>
<status status="NOT RUN" start="2024-10-10T16:05:26.541158" elapsed="0.000000"/>
</kw>
<kw name="And user input text (EditText)" owner="userManagementPage">
<arg>${passwordSite}</arg>
<arg>Masukkan password</arg>
<status status="NOT RUN" start="2024-10-10T16:05:26.542158" elapsed="0.000000"/>
</kw>
<kw name="And user input konfirmasi password" owner="userManagementPage">
<arg>abcd123</arg>
<status status="NOT RUN" start="2024-10-10T16:05:26.542158" elapsed="0.000000"/>
</kw>
<kw name="And verify password" owner="userManagementPage">
<arg>Konfirmasi password tidak sesuai</arg>
<status status="NOT RUN" start="2024-10-10T16:05:26.543120" elapsed="0.000000"/>
</kw>
<status status="FAIL" start="2024-10-10T16:04:31.514440" elapsed="55.028680">StaleElementReferenceException: Message: Cached elements 'By.accessibilityId: Icon Projects' do not exist in DOM anymore; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception
Stacktrace:
io.appium.uiautomator2.common.exceptions.StaleElementReferenceException: Cached elements 'By.accessibilityId: Icon Projects' do not exist in DOM anymore
	at io.appium.uiautomator2.model.ElementsCache.restore(ElementsCache.java:78)
	at io.appium.uiautomator2.model.ElementsCache.get(ElementsCache.java:153)
	at io.appium.uiautomator2.handler.GetElementAttribute.safeHandle(GetElementAttribute.java:23)
	at io.appium.uiautomator2.handler.request.SafeRequestHandler.handle(SafeRequestHandler.java:59)
	at io.appium.uiautomator2.server.AppiumServlet.handleRequest(AppiumServlet.java:259)
	at io.appium.uiautomator2.server.AppiumServlet.handleHttpRequest(AppiumServlet.java:253)
	at io.appium.uiautomator2.http.ServerHandler.channelRead(ServerHandler.java:77)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(Abstra...
    [ Message content over the limit has been removed. ]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:911)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:611)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:552)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:466)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:438)
	at io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:140)
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:144)
	at java.lang.Thread.run(Thread.java:1012)</status>
</kw>
<kw name="Close App" owner="openApp" type="TEARDOWN">
<kw name="Close Application" owner="AppiumLibrary">
<doc>Closes the current application and also close webdriver session.</doc>
<status status="PASS" start="2024-10-10T16:05:26.544117" elapsed="0.492780"/>
</kw>
<status status="PASS" start="2024-10-10T16:05:26.544117" elapsed="0.492780"/>
</kw>
<doc>This scenario test User Create User Management (Site/PIC) with confirm password</doc>
<tag>1000s</tag>
<tag>test</tag>
<tag>user management</tag>
<status status="FAIL" start="2024-10-10T16:04:23.763377" elapsed="63.274480">StaleElementReferenceException: Message: Cached elements 'By.accessibilityId: Icon Projects' do not exist in DOM anymore; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception
Stacktrace:
io.appium.uiautomator2.common.exceptions.StaleElementReferenceException: Cached elements 'By.accessibilityId: Icon Projects' do not exist in DOM anymore
	at io.appium.uiautomator2.model.ElementsCache.restore(ElementsCache.java:78)
	at io.appium.uiautomator2.model.ElementsCache.get(ElementsCache.java:153)
	at io.appium.uiautomator2.handler.GetElementAttribute.safeHandle(GetElementAttribute.java:23)
	at io.appium.uiautomator2.handler.request.SafeRequestHandler.handle(SafeRequestHandler.java:59)
	at io.appium.uiautomator2.server.AppiumServlet.handleRequest(AppiumServlet.java:259)
	at io.appium.uiautomator2.server.AppiumServlet.handleHttpRequest(AppiumServlet.java:253)
	at io.appium.uiautomator2.http.ServerHandler.channelRead(ServerHandler.java:77)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(Abstra...
    [ Message content over the limit has been removed. ]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:911)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:611)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:552)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:466)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:438)
	at io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:140)
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:144)
	at java.lang.Thread.run(Thread.java:1012)</status>
</test>
<test id="s1-t6" name="Test Create User Management with confirm password less than 8 character" line="35">
<kw name="Open app Dev Project" owner="openApp" type="SETUP">
<kw name="Open Application" owner="AppiumLibrary">
<arg>http://127.0.0.1:4723</arg>
<arg>platformName=${platformName}</arg>
<arg>deviceName=${udid}</arg>
<arg>appPackage=${appPackage}</arg>
<arg>appActivity=${appActivity}</arg>
<arg>automationName=UiAutomator2</arg>
<doc>Opens a new application to given Appium server.
Capabilities of appium server, Android and iOS,
Please check https://appium.io/docs/en/2.1/cli/args/
| *Option*            | *Man.* | *Description*     |
| remote_url          | Yes    | Appium server url |
| alias               | no     | alias             |
| strict_ssl          | No     | allows you to send commands to an invalid certificate host like a self-signed one. |</doc>
<status status="PASS" start="2024-10-10T16:05:27.045834" elapsed="8.064750"/>
</kw>
<status status="PASS" start="2024-10-10T16:05:27.045834" elapsed="8.064750"/>
</kw>
<kw name="User create User Management password less than 8 char" owner="userManagement">
<kw name="Given user go to User Management page" owner="userManagementPage">
<kw name="User Login" owner="loginPage">
<kw name="Given user input no handphone" owner="loginPage">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:05:37.088981" level="INFO">xpath criteria: //android.widget.TextView[@text="Login"]</msg>
<arg>${titleLogin}</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:05:35.113577" elapsed="1.975404"/>
</kw>
<kw name="Input Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:05:37.091971" level="INFO">Typing text '088210068283' into text field 'xpath=//android.widget.EditText[1]'</msg>
<msg time="2024-10-10T16:05:37.244894" level="INFO">xpath criteria: //android.widget.EditText[1]</msg>
<arg>${inputNoHandphone}</arg>
<arg>${noHandphone}</arg>
<doc>Types the given `text` into text field identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:05:37.088981" elapsed="0.155913"/>
</kw>
<arg>${akunOP}</arg>
<status status="PASS" start="2024-10-10T16:05:35.112579" elapsed="2.132315"/>
</kw>
<kw name="When user input password" owner="loginPage">
<kw name="Input Password" owner="AppiumLibrary">
<msg time="2024-10-10T16:05:37.249877" level="INFO">Typing password into text field 'xpath=//android.widget.EditText[2]'</msg>
<msg time="2024-10-10T16:05:37.658177" level="INFO">xpath criteria: //android.widget.EditText[2]</msg>
<arg>${inputPassword}</arg>
<arg>${password}</arg>
<doc>Types the given password into text field identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:05:37.245891" elapsed="0.412286"/>
</kw>
<arg>${passwordProject}</arg>
<status status="PASS" start="2024-10-10T16:05:37.244894" elapsed="0.413283"/>
</kw>
<kw name="Then click button masuk" owner="loginPage">
<kw name="Click Element" owner="AppiumLibrary">
<msg time="2024-10-10T16:05:37.662167" level="INFO">Clicking element 'xpath=//android.view.View/android.view.View[2]'.</msg>
<msg time="2024-10-10T16:05:38.045141" level="INFO">xpath criteria: //android.view.View/android.view.View[2]</msg>
<arg>${buttonMasuk}</arg>
<doc>Click element identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:05:37.659177" elapsed="0.385964"/>
</kw>
<status status="PASS" start="2024-10-10T16:05:37.659177" elapsed="0.386962"/>
</kw>
<kw name="And home Project" owner="loginPage">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<arg>accessibility_id=Icon Projects</arg>
<arg>timeout=10s</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:05:38.047136" elapsed="2.983824"/>
</kw>
<kw name="Element Should Be Visible" owner="AppiumLibrary">
<arg>accessibility_id=Icon Projects</arg>
<doc>Verifies that element identified with locator is visible.</doc>
<status status="PASS" start="2024-10-10T16:05:41.030960" elapsed="0.180705"/>
</kw>
<kw name="Element Should Be Visible" owner="AppiumLibrary">
<arg>accessibility_id=Notification</arg>
<doc>Verifies that element identified with locator is visible.</doc>
<status status="PASS" start="2024-10-10T16:05:41.212664" elapsed="0.143299"/>
</kw>
<kw name="Element Should Be Visible" owner="AppiumLibrary">
<arg>accessibility_id=Icon Search</arg>
<doc>Verifies that element identified with locator is visible.</doc>
<status status="PASS" start="2024-10-10T16:05:41.355963" elapsed="0.130234"/>
</kw>
<status status="PASS" start="2024-10-10T16:05:38.046139" elapsed="3.440058"/>
</kw>
<status status="PASS" start="2024-10-10T16:05:35.112579" elapsed="6.373618"/>
</kw>
<kw name="Loc Parent View" owner="generalFunction">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-10-10T16:05:41.487196" level="INFO">${loc} = xpath=//android.widget.TextView[@text="User Management"]/parent::android.view.View</msg>
<var>${loc}</var>
<arg>xpath=//android.widget.TextView[@text="${text}"]/parent::android.view.View</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-10-10T16:05:41.487196" elapsed="0.000000"/>
</kw>
<return>
<value>${loc}</value>
<status status="PASS" start="2024-10-10T16:05:41.487196" elapsed="0.001032"/>
</return>
<msg time="2024-10-10T16:05:41.488228" level="INFO">${loc} = xpath=//android.widget.TextView[@text="User Management"]/parent::android.view.View</msg>
<var>${loc}</var>
<arg>User Management</arg>
<status status="PASS" start="2024-10-10T16:05:41.487196" elapsed="0.001032"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:05:41.692025" level="INFO">xpath criteria: //android.widget.TextView[@text="User Management"]/parent::android.view.View</msg>
<arg>${loc}</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:05:41.488228" elapsed="0.203797"/>
</kw>
<kw name="Click Element" owner="AppiumLibrary">
<msg time="2024-10-10T16:05:41.696052" level="INFO">Clicking element 'xpath=//android.widget.TextView[@text="User Management"]/parent::android.view.View'.</msg>
<msg time="2024-10-10T16:05:42.381778" level="INFO">xpath criteria: //android.widget.TextView[@text="User Management"]/parent::android.view.View</msg>
<arg>${loc}</arg>
<doc>Click element identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:05:41.692025" elapsed="0.689753"/>
</kw>
<status status="PASS" start="2024-10-10T16:05:35.112579" elapsed="7.269199"/>
</kw>
<kw name="And Get Detail Text User Management" owner="userManagementPage">
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-10-10T16:05:42.382809" level="INFO">${random} = 3</msg>
<var>${random}</var>
<arg>random.randint(1, 3)</arg>
<arg>modules=random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-10-10T16:05:42.382809" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:05:42.383770" level="INFO">${indexUser} = 3</msg>
<arg>${indexUser}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:05:42.383770" elapsed="0.000000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-10-10T16:05:42.383770" level="INFO">Random : 3</msg>
<arg>Random : ${random}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-10-10T16:05:42.383770" elapsed="0.000000"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-10-10T16:05:42.384804" level="INFO">Length is 103.</msg>
<msg time="2024-10-10T16:05:42.384804" level="INFO">${len} = 103</msg>
<var>${len}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-10-10T16:05:42.384804" elapsed="0.000000"/>
</kw>
<for flavor="IN RANGE">
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:05:43.583556" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[3]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[3]/parent::android.view.View</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:05:42.386798" elapsed="1.196758"/>
</kw>
<msg time="2024-10-10T16:05:43.583556" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:05:42.385766" elapsed="1.197790"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:05:43.746294" level="INFO">Element 'xpath=(//android.view.View[@content-desc="Image"])[3]/parent::android.view.View/android.widget.TextView[1]' text is 'Damon Brakus' </msg>
<msg time="2024-10-10T16:05:43.746294" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[3]/parent::android.view.View/android.widget.TextView[1]</msg>
<msg time="2024-10-10T16:05:43.746294" level="INFO">${name} = Damon Brakus</msg>
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:05:43.584550" elapsed="0.161744"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:05:43.747288" level="INFO">${name} = Damon Brakus</msg>
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:05:43.747288" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-10-10T16:05:43.584550" elapsed="0.162738"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:43.748286" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:43.748286" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:05:43.583556" elapsed="0.164730"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:05:42.385766" elapsed="1.362520"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:05:43.749283" level="INFO">${nameUserManagement} = Damon Brakus</msg>
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:05:43.748286" elapsed="0.000997"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-10-10T16:05:43.749283" elapsed="0.000999"/>
</kw>
<status status="PASS" start="2024-10-10T16:05:42.385766" elapsed="1.364516"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:43.751243" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:43.751243" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:43.751243" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:43.750282" elapsed="0.000961"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:43.752240" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:43.751243" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:43.752240" elapsed="0.000996"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:43.753236" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:43.753236" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:43.753236" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:43.754270" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:43.752240" elapsed="0.002030"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:43.754270" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:43.754270" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:43.755270" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:43.755270" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:43.756228" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:43.755270" elapsed="0.000958"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:43.756228" elapsed="0.001034"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:43.756228" elapsed="0.001034"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:43.757262" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:43.758222" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:43.758222" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:43.757262" elapsed="0.000960"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:05:43.758222" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:05:43.758222" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:05:42.385766" elapsed="1.372456"/>
</if>
<var name="${counter}">1</var>
<status status="PASS" start="2024-10-10T16:05:42.385766" elapsed="1.372456"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:43.759221" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:43.760251" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:43.760251" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:43.759221" elapsed="0.001030"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:05:44.299936" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[3]/parent::android.view.View</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:05:43.761250" elapsed="0.538686"/>
</kw>
<msg time="2024-10-10T16:05:44.299936" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:05:43.761250" elapsed="0.538686"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:05:44.445648" level="INFO">Element 'xpath=(//android.view.View[@content-desc="Image"])[3]/parent::android.view.View/android.widget.TextView[2]' text is 'Consultant' </msg>
<msg time="2024-10-10T16:05:44.445648" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[3]/parent::android.view.View/android.widget.TextView[2]</msg>
<msg time="2024-10-10T16:05:44.445648" level="INFO">${name} = Consultant</msg>
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:05:44.300932" elapsed="0.144716"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:05:44.446646" level="INFO">${name} = Consultant</msg>
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:05:44.446646" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-10-10T16:05:44.300932" elapsed="0.145714"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:44.446646" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:44.446646" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:05:44.300932" elapsed="0.145714"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:05:43.760251" elapsed="0.686395"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:05:44.447643" level="INFO">${jabatan} = Consultant</msg>
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:05:44.447643" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-10-10T16:05:44.447643" elapsed="0.001251"/>
</kw>
<status status="PASS" start="2024-10-10T16:05:43.760251" elapsed="0.688643"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:44.448894" elapsed="0.001003"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:44.448894" elapsed="0.001003"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:44.449897" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:44.449897" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:44.449897" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:44.449897" elapsed="0.000997"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:44.450894" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:44.449897" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:44.450894" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:44.450894" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:44.450894" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:44.451891" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:44.451891" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:44.450894" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:44.451891" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:44.451891" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:44.452889" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:44.452889" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:44.452889" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:44.451891" elapsed="0.000998"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:05:44.452889" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:05:44.452889" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:05:43.759221" elapsed="0.693668"/>
</if>
<var name="${counter}">2</var>
<status status="PASS" start="2024-10-10T16:05:43.759221" elapsed="0.693668"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:44.453886" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:44.454885" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:44.454885" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:44.453886" elapsed="0.000999"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:44.454885" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:44.455882" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:44.455882" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:44.454885" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:05:44.612806" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[3]/parent::android.view.View</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:05:44.457877" elapsed="0.154929"/>
</kw>
<msg time="2024-10-10T16:05:44.612806" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:05:44.457877" elapsed="0.154929"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:05:44.759784" level="INFO">Element 'xpath=(//android.view.View[@content-desc="Image"])[3]/parent::android.view.View/android.widget.TextView[3]' text is 'Nomor handphone' </msg>
<msg time="2024-10-10T16:05:44.759784" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[3]/parent::android.view.View/android.widget.TextView[3]</msg>
<msg time="2024-10-10T16:05:44.759784" level="INFO">${name} = Nomor handphone</msg>
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:05:44.613804" elapsed="0.145980"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:05:44.760782" level="INFO">${name} = Nomor handphone</msg>
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:05:44.760782" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-10-10T16:05:44.613804" elapsed="0.146978"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:44.761779" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:44.761779" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:05:44.613804" elapsed="0.147975"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:05:44.456879" elapsed="0.304900"/>
</kw>
<status status="PASS" start="2024-10-10T16:05:44.455882" elapsed="0.305897"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:44.762776" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:44.762776" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:44.762776" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:44.763777" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:44.763777" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:44.761779" elapsed="0.001998"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:44.763777" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:44.763777" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:44.764774" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:44.764774" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:44.764774" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:44.763777" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:44.764774" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:44.764774" elapsed="0.000998"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:44.765772" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:44.765772" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:44.765772" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:44.765772" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:05:44.765772" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:05:44.765772" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:05:44.453886" elapsed="0.311886"/>
</if>
<var name="${counter}">3</var>
<status status="PASS" start="2024-10-10T16:05:44.453886" elapsed="0.312882"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:44.767767" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:44.767767" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:44.767767" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:44.766768" elapsed="0.000999"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:44.768764" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:44.768764" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:44.768764" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:44.767767" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:44.769760" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:44.768764" elapsed="0.000996"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:05:45.347858" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[3]/parent::android.view.View</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:05:44.770759" elapsed="0.577099"/>
</kw>
<msg time="2024-10-10T16:05:45.347858" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:05:44.770759" elapsed="0.577099"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:05:45.501633" level="INFO">Element 'xpath=(//android.view.View[@content-desc="Image"])[3]/parent::android.view.View/android.widget.TextView[4]' text is '0874-5053-6867' </msg>
<msg time="2024-10-10T16:05:45.501633" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[3]/parent::android.view.View/android.widget.TextView[4]</msg>
<msg time="2024-10-10T16:05:45.501633" level="INFO">${name} = 0874-5053-6867</msg>
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:05:45.347858" elapsed="0.153775"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:05:45.502592" level="INFO">${name} = 0874-5053-6867</msg>
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:05:45.501633" elapsed="0.000959"/>
</kw>
<status status="PASS" start="2024-10-10T16:05:45.347858" elapsed="0.154734"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:45.502592" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:45.502592" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:05:45.347858" elapsed="0.154734"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:05:44.769760" elapsed="0.732832"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:05:45.503626" level="INFO">${noTelp} = 0874-5053-6867</msg>
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:05:45.502592" elapsed="0.001034"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-10-10T16:05:45.503626" elapsed="0.000919"/>
</kw>
<kw name="Replace String" owner="String">
<msg time="2024-10-10T16:05:45.505548" level="INFO">${replaceNumb} = 087450536867</msg>
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-10-10T16:05:45.504545" elapsed="0.002002"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:05:45.506547" level="INFO">${replaceNumb} = 087450536867</msg>
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:05:45.506547" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-10-10T16:05:44.769760" elapsed="0.736787"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:45.507544" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:45.506547" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:45.507544" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:45.507544" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:45.508540" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:45.507544" elapsed="0.000996"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:45.508540" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:45.508540" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:45.508540" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:45.509538" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:45.509538" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:45.508540" elapsed="0.000998"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:05:45.509538" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:05:45.509538" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:05:44.766768" elapsed="0.742770"/>
</if>
<var name="${counter}">4</var>
<status status="PASS" start="2024-10-10T16:05:44.766768" elapsed="0.742770"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:45.510535" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:45.510535" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:45.510535" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:45.509538" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:45.511533" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:45.511533" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:45.511533" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:45.510535" elapsed="0.000998"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:45.512531" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:45.511533" elapsed="0.000998"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:45.512531" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:45.512531" elapsed="0.000998"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:45.513529" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:45.513529" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:45.513529" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:45.512531" elapsed="0.000998"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:05:45.658077" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[3]/parent::android.view.View</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:05:45.514525" elapsed="0.144549"/>
</kw>
<msg time="2024-10-10T16:05:45.659074" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:05:45.514525" elapsed="0.144549"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:05:45.800174" level="INFO">Element 'xpath=(//android.view.View[@content-desc="Image"])[3]/parent::android.view.View/android.widget.TextView[5]' text is 'Email' </msg>
<msg time="2024-10-10T16:05:45.800174" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[3]/parent::android.view.View/android.widget.TextView[5]</msg>
<msg time="2024-10-10T16:05:45.800174" level="INFO">${name} = Email</msg>
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:05:45.659074" elapsed="0.141100"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:05:45.801173" level="INFO">${name} = Email</msg>
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:05:45.800174" elapsed="0.000999"/>
</kw>
<status status="PASS" start="2024-10-10T16:05:45.659074" elapsed="0.142099"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:45.801173" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:45.801173" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:05:45.659074" elapsed="0.142099"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:05:45.514525" elapsed="0.286648"/>
</kw>
<status status="PASS" start="2024-10-10T16:05:45.513529" elapsed="0.287644"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:45.801173" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:45.802170" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:45.802170" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:45.801173" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:45.803165" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:45.802170" elapsed="0.000995"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:45.803165" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:45.803165" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:45.803165" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:45.803165" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:05:45.804165" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:05:45.803165" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-10-10T16:05:45.509538" elapsed="0.294627"/>
</if>
<var name="${counter}">5</var>
<status status="PASS" start="2024-10-10T16:05:45.509538" elapsed="0.294627"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:45.805162" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:45.805162" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:45.805162" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:45.804165" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:45.806159" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:45.806159" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:45.806159" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:45.805162" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:45.807154" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:45.806159" elapsed="0.000995"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:45.807154" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:45.808155" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:45.808155" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:45.808155" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:45.808155" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:45.807154" elapsed="0.001001"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:45.809151" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:45.808155" elapsed="0.000996"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:05:46.453024" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[3]/parent::android.view.View</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:05:45.810148" elapsed="0.642876"/>
</kw>
<msg time="2024-10-10T16:05:46.453024" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:05:45.809151" elapsed="0.643873"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:05:46.592250" level="INFO">Element 'xpath=(//android.view.View[@content-desc="Image"])[3]/parent::android.view.View/android.widget.TextView[6]' text is 'Mossie27@gmail.com' </msg>
<msg time="2024-10-10T16:05:46.592250" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[3]/parent::android.view.View/android.widget.TextView[6]</msg>
<msg time="2024-10-10T16:05:46.592250" level="INFO">${name} = Mossie27@gmail.com</msg>
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:05:46.454024" elapsed="0.138226"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:05:46.593247" level="INFO">${name} = Mossie27@gmail.com</msg>
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:05:46.592250" elapsed="0.000997"/>
</kw>
<status status="PASS" start="2024-10-10T16:05:46.453024" elapsed="0.140223"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:46.593247" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:46.593247" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:05:46.453024" elapsed="0.140223"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:05:45.809151" elapsed="0.784096"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:05:46.594244" level="INFO">${email} = Mossie27@gmail.com</msg>
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:05:46.593247" elapsed="0.000997"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-10-10T16:05:46.594244" elapsed="0.000963"/>
</kw>
<status status="PASS" start="2024-10-10T16:05:45.809151" elapsed="0.786056"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:46.596203" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:46.595207" elapsed="0.000996"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:46.597202" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:46.597202" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:46.597202" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:46.596203" elapsed="0.000999"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:05:46.597202" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:05:46.597202" elapsed="0.001035"/>
</branch>
<status status="PASS" start="2024-10-10T16:05:45.804165" elapsed="0.794072"/>
</if>
<var name="${counter}">6</var>
<status status="PASS" start="2024-10-10T16:05:45.804165" elapsed="0.794072"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:46.599232" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:46.599232" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:46.600228" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:46.598237" elapsed="0.001991"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:46.600228" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:46.601226" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:46.601226" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:46.600228" elapsed="0.000998"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:46.602224" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:46.601226" elapsed="0.000998"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:46.603187" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:46.603187" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:46.603187" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:46.603187" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:46.603187" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:46.602224" elapsed="0.000963"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:46.604184" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:46.604184" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:46.605182" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:46.605182" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:46.605182" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:46.604184" elapsed="0.000998"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:05:46.744320" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[3]/parent::android.view.View</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:05:46.606179" elapsed="0.139139"/>
</kw>
<msg time="2024-10-10T16:05:46.745318" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:05:46.606179" elapsed="0.139139"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:05:47.358833" level="INFO">Element 'xpath=(//android.view.View[@content-desc="Image"])[3]/parent::android.view.View/android.widget.TextView[7]' text is 'Project aktif' </msg>
<msg time="2024-10-10T16:05:47.358833" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[3]/parent::android.view.View/android.widget.TextView[7]</msg>
<msg time="2024-10-10T16:05:47.358833" level="INFO">${name} = Project aktif</msg>
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:05:46.746314" elapsed="0.612519"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:05:47.358833" level="INFO">${name} = Project aktif</msg>
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:05:47.358833" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-10-10T16:05:46.745318" elapsed="0.613515"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:47.359831" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:47.358833" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-10-10T16:05:46.745318" elapsed="0.614513"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:05:46.606179" elapsed="0.753652"/>
</kw>
<status status="PASS" start="2024-10-10T16:05:46.605182" elapsed="0.754649"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:47.359831" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:47.359831" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:47.360828" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:47.359831" elapsed="0.000997"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:05:47.360828" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:05:47.360828" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:05:46.598237" elapsed="0.762591"/>
</if>
<var name="${counter}">7</var>
<status status="PASS" start="2024-10-10T16:05:46.598237" elapsed="0.762591"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:47.361825" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:47.361825" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:47.361825" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:47.360828" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:47.361825" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:47.362822" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:47.362822" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:47.361825" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:47.362822" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:47.362822" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:47.363820" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:47.363820" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:47.363820" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:47.363820" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:47.364817" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:47.362822" elapsed="0.001995"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:47.364817" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:47.364817" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:47.365814" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:47.365814" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:47.365814" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:47.364817" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:47.365814" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:47.365814" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:05:47.510061" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[3]/parent::android.view.View</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:05:47.366812" elapsed="0.143249"/>
</kw>
<msg time="2024-10-10T16:05:47.510061" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:05:47.366812" elapsed="0.143249"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:05:47.646706" level="INFO">Element 'xpath=(//android.view.View[@content-desc="Image"])[3]/parent::android.view.View/android.widget.TextView[8]' text is '0' </msg>
<msg time="2024-10-10T16:05:47.646706" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[3]/parent::android.view.View/android.widget.TextView[8]</msg>
<msg time="2024-10-10T16:05:47.646706" level="INFO">${name} = 0</msg>
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:05:47.511057" elapsed="0.135649"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:05:47.647667" level="INFO">${name} = 0</msg>
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:05:47.647667" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-10-10T16:05:47.510061" elapsed="0.137606"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:47.647667" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:47.647667" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:05:47.510061" elapsed="0.137606"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:05:47.366812" elapsed="0.280855"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:05:47.648703" level="INFO">${projActive} = 0</msg>
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:05:47.648703" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-10-10T16:05:47.648703" elapsed="0.000996"/>
</kw>
<status status="PASS" start="2024-10-10T16:05:47.365814" elapsed="0.283885"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:05:47.649699" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:05:47.649699" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:05:47.360828" elapsed="0.288871"/>
</if>
<var name="${counter}">8</var>
<status status="PASS" start="2024-10-10T16:05:47.360828" elapsed="0.288871"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:47.651659" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:47.651659" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:47.651659" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:47.650662" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:47.652657" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:47.652657" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:47.652657" elapsed="0.001031"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:47.651659" elapsed="0.002029"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:47.653688" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:47.653688" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:47.653688" elapsed="0.001001"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:47.654689" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:47.654689" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:47.654689" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:47.654689" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:47.653688" elapsed="0.001001"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:47.655685" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:47.654689" elapsed="0.000996"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:47.655685" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:47.656682" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:47.656682" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:47.655685" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:47.656682" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:47.656682" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:05:47.657677" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:47.657677" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:47.657677" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:47.656682" elapsed="0.000995"/>
</branch>
<branch type="ELSE">
<break>
<status status="PASS" start="2024-10-10T16:05:47.657677" elapsed="0.000000"/>
</break>
<status status="PASS" start="2024-10-10T16:05:47.657677" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:05:47.650662" elapsed="0.007015"/>
</if>
<var name="${counter}">9</var>
<status status="PASS" start="2024-10-10T16:05:47.650662" elapsed="0.007015"/>
</iter>
<var>${counter}</var>
<value>1</value>
<value>${len}</value>
<status status="PASS" start="2024-10-10T16:05:42.384804" elapsed="5.272873"/>
</for>
<status status="PASS" start="2024-10-10T16:05:42.382809" elapsed="5.274868"/>
</kw>
<kw name="When user add user management" owner="userManagementPage">
<kw name="home Project" owner="loginPage">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<arg>accessibility_id=Icon Projects</arg>
<arg>timeout=10s</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:05:47.658674" elapsed="0.097114"/>
</kw>
<kw name="Element Should Be Visible" owner="AppiumLibrary">
<arg>accessibility_id=Icon Projects</arg>
<doc>Verifies that element identified with locator is visible.</doc>
<status status="PASS" start="2024-10-10T16:05:47.755788" elapsed="0.704618"/>
</kw>
<kw name="Element Should Be Visible" owner="AppiumLibrary">
<arg>accessibility_id=Notification</arg>
<doc>Verifies that element identified with locator is visible.</doc>
<status status="PASS" start="2024-10-10T16:05:48.460406" elapsed="0.105974"/>
</kw>
<kw name="Element Should Be Visible" owner="AppiumLibrary">
<arg>accessibility_id=Icon Search</arg>
<doc>Verifies that element identified with locator is visible.</doc>
<status status="PASS" start="2024-10-10T16:05:48.566380" elapsed="0.094079"/>
</kw>
<status status="PASS" start="2024-10-10T16:05:47.658674" elapsed="1.001785"/>
</kw>
<kw name="Loc Parent View" owner="generalFunction">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-10-10T16:05:48.661489" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Tambah User"]/parent::android.view.View</msg>
<var>${loc}</var>
<arg>xpath=//android.widget.TextView[@text="${text}"]/parent::android.view.View</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-10-10T16:05:48.660459" elapsed="0.001030"/>
</kw>
<return>
<value>${loc}</value>
<status status="PASS" start="2024-10-10T16:05:48.661489" elapsed="0.000000"/>
</return>
<msg time="2024-10-10T16:05:48.661489" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Tambah User"]/parent::android.view.View</msg>
<var>${loc}</var>
<arg>Tambah User</arg>
<status status="PASS" start="2024-10-10T16:05:48.660459" elapsed="0.001030"/>
</kw>
<kw name="Click Element" owner="AppiumLibrary">
<msg time="2024-10-10T16:05:48.664482" level="INFO">Clicking element 'xpath=//android.widget.TextView[@text="Tambah User"]/parent::android.view.View'.</msg>
<msg time="2024-10-10T16:05:49.631891" level="INFO">xpath criteria: //android.widget.TextView[@text="Tambah User"]/parent::android.view.View</msg>
<arg>${loc}</arg>
<doc>Click element identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:05:48.661489" elapsed="0.970402"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:05:49.825715" level="INFO">xpath criteria: //android.widget.ScrollView//following-sibling::android.widget.TextView[contains(@text, "upload file")]</msg>
<arg>${textUploadFile}</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:05:49.631891" elapsed="0.193824"/>
</kw>
<status status="PASS" start="2024-10-10T16:05:47.658674" elapsed="2.167041"/>
</kw>
<kw name="Then user input Nama user management" owner="userManagementPage">
<kw name="Generate Simple Random Name" owner="generalFunction">
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-10-10T16:05:49.827709" level="INFO">${name} = FASUI UXXQQCXY</msg>
<var>${name}</var>
<arg>''.join(random.choices('ABCDEFGHIJKLMNOPQRSTUVWXYZ', k=5)) + ' ' + ''.join(random.choices('ABCDEFGHIJKLMNOPQRSTUVWXYZ', k=8))</arg>
<arg>modules=random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-10-10T16:05:49.826750" elapsed="0.000959"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:05:49.827709" level="INFO">${randomStr} = FASUI UXXQQCXY</msg>
<arg>${randomStr}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:05:49.827709" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-10-10T16:05:49.826750" elapsed="0.000959"/>
</kw>
<kw name="Generate Random Phone Number" owner="generalFunction">
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-10-10T16:05:49.828742" level="INFO">${random_number} = 0823713488</msg>
<var>${random_number}</var>
<arg>'08' + str(random.randint(10000000, 99999999))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-10-10T16:05:49.828742" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:05:49.829702" level="INFO">${randNumber} = 0823713488</msg>
<arg>${randNumber}</arg>
<arg>${random_number}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:05:49.828742" elapsed="0.000960"/>
</kw>
<status status="PASS" start="2024-10-10T16:05:49.827709" elapsed="0.001993"/>
</kw>
<kw name="Generate Random Email" owner="generalFunction">
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-10-10T16:05:49.830703" level="INFO">${name} = kyvdpdoz</msg>
<var>${name}</var>
<arg>''.join(random.choices('abcdefghijklmnopqrtuvwxyz', k=8))</arg>
<arg>modules=random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-10-10T16:05:49.830703" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-10-10T16:05:49.831736" level="INFO">${nameEmail} = kyvdpdoz@gmail.com</msg>
<var>${nameEmail}</var>
<arg>${name}@gmail.com</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-10-10T16:05:49.831736" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:05:49.831736" level="INFO">${randomEmail} = kyvdpdoz@gmail.com</msg>
<arg>${randomEmail}</arg>
<arg>${nameEmail}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:05:49.831736" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-10-10T16:05:49.829702" elapsed="0.002034"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:05:49.832731" level="INFO">${nameUser} = FASUI UXXQQCXY</msg>
<arg>${nameUser}</arg>
<arg>${randomStr}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:05:49.832731" elapsed="0.000000"/>
</kw>
<kw name="input text (EditText)" owner="generalFunction">
<kw name="Loc Parent EditText" owner="generalFunction">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-10-10T16:05:49.833731" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Masukkan nama user"]/parent::android.widget.EditText</msg>
<var>${loc}</var>
<arg>xpath=//android.widget.TextView[@text="${text}"]/parent::android.widget.EditText</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-10-10T16:05:49.833731" elapsed="0.000000"/>
</kw>
<return>
<value>${loc}</value>
<status status="PASS" start="2024-10-10T16:05:49.833731" elapsed="0.000000"/>
</return>
<msg time="2024-10-10T16:05:49.833731" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Masukkan nama user"]/parent::android.widget.EditText</msg>
<var>${loc}</var>
<arg>${locEdit}</arg>
<status status="PASS" start="2024-10-10T16:05:49.833731" elapsed="0.000000"/>
</kw>
<kw name="Input Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:05:49.837718" level="INFO">Typing text 'FASUI UXXQQCXY' into text field 'xpath=//android.widget.TextView[@text="Masukkan nama user"]/parent::android.widget.EditText'</msg>
<msg time="2024-10-10T16:05:49.982390" level="INFO">xpath criteria: //android.widget.TextView[@text="Masukkan nama user"]/parent::android.widget.EditText</msg>
<arg>${loc}</arg>
<arg>${rand_text}</arg>
<doc>Types the given `text` into text field identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:05:49.834727" elapsed="0.147663"/>
</kw>
<arg>${randomStr}</arg>
<arg>Masukkan nama user</arg>
<status status="PASS" start="2024-10-10T16:05:49.832731" elapsed="0.149659"/>
</kw>
<status status="PASS" start="2024-10-10T16:05:49.825715" elapsed="0.156675"/>
</kw>
<kw name="Then user input text (EditText)" owner="userManagementPage">
<kw name="input text (EditText)" owner="generalFunction">
<kw name="Loc Parent EditText" owner="generalFunction">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-10-10T16:05:49.984420" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Masukan jabatan user"]/parent::android.widget.EditText</msg>
<var>${loc}</var>
<arg>xpath=//android.widget.TextView[@text="${text}"]/parent::android.widget.EditText</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-10-10T16:05:49.984420" elapsed="0.000000"/>
</kw>
<return>
<value>${loc}</value>
<status status="PASS" start="2024-10-10T16:05:49.984420" elapsed="0.000000"/>
</return>
<msg time="2024-10-10T16:05:49.985381" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Masukan jabatan user"]/parent::android.widget.EditText</msg>
<var>${loc}</var>
<arg>${locEdit}</arg>
<status status="PASS" start="2024-10-10T16:05:49.983387" elapsed="0.001994"/>
</kw>
<kw name="Input Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:05:49.988412" level="INFO">Typing text 'FASUI UXXQQCXY' into text field 'xpath=//android.widget.TextView[@text="Masukan jabatan user"]/parent::android.widget.EditText'</msg>
<msg time="2024-10-10T16:05:50.195356" level="INFO">xpath criteria: //android.widget.TextView[@text="Masukan jabatan user"]/parent::android.widget.EditText</msg>
<arg>${loc}</arg>
<arg>${rand_text}</arg>
<doc>Types the given `text` into text field identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:05:49.985381" elapsed="0.209975"/>
</kw>
<arg>${text}</arg>
<arg>${locEditext}</arg>
<status status="PASS" start="2024-10-10T16:05:49.983387" elapsed="0.211969"/>
</kw>
<arg>${randomStr}</arg>
<arg>Masukan jabatan user</arg>
<status status="PASS" start="2024-10-10T16:05:49.983387" elapsed="0.211969"/>
</kw>
<kw name="And user input text (EditText)" owner="userManagementPage">
<kw name="input text (EditText)" owner="generalFunction">
<kw name="Loc Parent EditText" owner="generalFunction">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-10-10T16:05:50.197348" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Masukkan email user"]/parent::android.widget.EditText</msg>
<var>${loc}</var>
<arg>xpath=//android.widget.TextView[@text="${text}"]/parent::android.widget.EditText</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-10-10T16:05:50.197348" elapsed="0.000000"/>
</kw>
<return>
<value>${loc}</value>
<status status="PASS" start="2024-10-10T16:05:50.197348" elapsed="0.000000"/>
</return>
<msg time="2024-10-10T16:05:50.197348" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Masukkan email user"]/parent::android.widget.EditText</msg>
<var>${loc}</var>
<arg>${locEdit}</arg>
<status status="PASS" start="2024-10-10T16:05:50.196352" elapsed="0.000996"/>
</kw>
<kw name="Input Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:05:50.202334" level="INFO">Typing text 'kyvdpdoz@gmail.com' into text field 'xpath=//android.widget.TextView[@text="Masukkan email user"]/parent::android.widget.EditText'</msg>
<msg time="2024-10-10T16:05:50.394517" level="INFO">xpath criteria: //android.widget.TextView[@text="Masukkan email user"]/parent::android.widget.EditText</msg>
<arg>${loc}</arg>
<arg>${rand_text}</arg>
<doc>Types the given `text` into text field identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:05:50.198346" elapsed="0.196171"/>
</kw>
<arg>${text}</arg>
<arg>${locEditext}</arg>
<status status="PASS" start="2024-10-10T16:05:50.196352" elapsed="0.198165"/>
</kw>
<arg>${randomEmail}</arg>
<arg>Masukkan email user</arg>
<status status="PASS" start="2024-10-10T16:05:50.196352" elapsed="0.198165"/>
</kw>
<kw name="And user input text (EditText)" owner="userManagementPage">
<kw name="input text (EditText)" owner="generalFunction">
<kw name="Loc Parent EditText" owner="generalFunction">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-10-10T16:05:50.396549" level="INFO">${loc} = xpath=//android.widget.TextView[@text="08xxxxxxxxxx"]/parent::android.widget.EditText</msg>
<var>${loc}</var>
<arg>xpath=//android.widget.TextView[@text="${text}"]/parent::android.widget.EditText</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-10-10T16:05:50.396549" elapsed="0.000000"/>
</kw>
<return>
<value>${loc}</value>
<status status="PASS" start="2024-10-10T16:05:50.396549" elapsed="0.000000"/>
</return>
<msg time="2024-10-10T16:05:50.397542" level="INFO">${loc} = xpath=//android.widget.TextView[@text="08xxxxxxxxxx"]/parent::android.widget.EditText</msg>
<var>${loc}</var>
<arg>${locEdit}</arg>
<status status="PASS" start="2024-10-10T16:05:50.396549" elapsed="0.000993"/>
</kw>
<kw name="Input Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:05:50.400536" level="INFO">Typing text '0823713488' into text field 'xpath=//android.widget.TextView[@text="08xxxxxxxxxx"]/parent::android.widget.EditText'</msg>
<msg time="2024-10-10T16:05:50.584082" level="INFO">xpath criteria: //android.widget.TextView[@text="08xxxxxxxxxx"]/parent::android.widget.EditText</msg>
<arg>${loc}</arg>
<arg>${rand_text}</arg>
<doc>Types the given `text` into text field identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:05:50.397542" elapsed="0.186540"/>
</kw>
<arg>${text}</arg>
<arg>${locEditext}</arg>
<status status="PASS" start="2024-10-10T16:05:50.395550" elapsed="0.188532"/>
</kw>
<arg>${randNumber}</arg>
<arg>08xxxxxxxxxx</arg>
<status status="PASS" start="2024-10-10T16:05:50.394517" elapsed="0.189565"/>
</kw>
<kw name="And user input text (EditText)" owner="userManagementPage">
<kw name="input text (EditText)" owner="generalFunction">
<kw name="Loc Parent EditText" owner="generalFunction">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-10-10T16:05:50.587075" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Masukkan password"]/parent::android.widget.EditText</msg>
<var>${loc}</var>
<arg>xpath=//android.widget.TextView[@text="${text}"]/parent::android.widget.EditText</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-10-10T16:05:50.586110" elapsed="0.000965"/>
</kw>
<return>
<value>${loc}</value>
<status status="PASS" start="2024-10-10T16:05:50.587075" elapsed="0.000000"/>
</return>
<msg time="2024-10-10T16:05:50.587075" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Masukkan password"]/parent::android.widget.EditText</msg>
<var>${loc}</var>
<arg>${locEdit}</arg>
<status status="PASS" start="2024-10-10T16:05:50.586110" elapsed="0.000965"/>
</kw>
<kw name="Input Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:05:50.590101" level="INFO">Typing text 'acdfff' into text field 'xpath=//android.widget.TextView[@text="Masukkan password"]/parent::android.widget.EditText'</msg>
<msg time="2024-10-10T16:05:50.766288" level="INFO">xpath criteria: //android.widget.TextView[@text="Masukkan password"]/parent::android.widget.EditText</msg>
<arg>${loc}</arg>
<arg>${rand_text}</arg>
<doc>Types the given `text` into text field identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:05:50.587075" elapsed="0.179213"/>
</kw>
<arg>${text}</arg>
<arg>${locEditext}</arg>
<status status="PASS" start="2024-10-10T16:05:50.585079" elapsed="0.182205"/>
</kw>
<arg>acdfff</arg>
<arg>Masukkan password</arg>
<status status="PASS" start="2024-10-10T16:05:50.584082" elapsed="0.183202"/>
</kw>
<kw name="And user input konfirmasi password" owner="userManagementPage">
<kw name="input password form user management" owner="generalFunction">
<kw name="Loc Parent EditText" owner="generalFunction">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-10-10T16:05:50.769279" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Masukkan Konfirmasi password"]/parent::android.widget.EditText</msg>
<var>${loc}</var>
<arg>xpath=//android.widget.TextView[@text="${text}"]/parent::android.widget.EditText</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-10-10T16:05:50.769279" elapsed="0.001033"/>
</kw>
<return>
<value>${loc}</value>
<status status="PASS" start="2024-10-10T16:05:50.770312" elapsed="0.000000"/>
</return>
<msg time="2024-10-10T16:05:50.770312" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Masukkan Konfirmasi password"]/parent::android.widget.EditText</msg>
<var>${loc}</var>
<arg>${locatorText}</arg>
<status status="PASS" start="2024-10-10T16:05:50.768315" elapsed="0.001997"/>
</kw>
<kw name="Swipe" owner="AppiumLibrary">
<arg>${521}</arg>
<arg>${1798}</arg>
<arg>${530}</arg>
<arg>${1207}</arg>
<doc>Swipe from one point to another point, for an optional duration.</doc>
<status status="PASS" start="2024-10-10T16:05:50.770312" elapsed="1.336768"/>
</kw>
<kw name="Input Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:05:52.114061" level="INFO">Typing text 'test1234' into text field 'xpath=//android.widget.TextView[@text="Masukkan Konfirmasi password"]/parent::android.widget.EditText'</msg>
<msg time="2024-10-10T16:05:52.484030" level="INFO">xpath criteria: //android.widget.TextView[@text="Masukkan Konfirmasi password"]/parent::android.widget.EditText</msg>
<arg>${loc}</arg>
<arg>${password}</arg>
<doc>Types the given `text` into text field identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:05:52.107080" elapsed="0.377945"/>
</kw>
<arg>${text}</arg>
<arg>Masukkan Konfirmasi password</arg>
<status status="PASS" start="2024-10-10T16:05:50.768315" elapsed="1.716710"/>
</kw>
<arg>${passwordSite}</arg>
<status status="PASS" start="2024-10-10T16:05:50.767284" elapsed="1.717741"/>
</kw>
<kw name="And verify password" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<kw name="Capture Page Screenshot" owner="AppiumLibrary">
<msg time="2024-10-10T16:05:56.144091" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;img src="data:image/png;base64, " width="800px"&gt;</msg>
<doc>Takes a screenshot of the current page and embeds it into the log.</doc>
<status status="PASS" start="2024-10-10T16:05:55.767116" elapsed="0.379967"/>
</kw>
<msg time="2024-10-10T16:05:56.147083" level="INFO">xpath criteria: //android.widget.TextView[@text="Password sesuai"]
xpath criteria: //android.widget.TextView[@text="Password sesuai"]
xpath criteria: //android.widget.TextView[@text="Password sesuai"]
xpath criteria: //android.widget.TextView[@text="Password sesuai"]
xpath criteria: //android.widget.TextView[@text="Password sesuai"]
xpath criteria: //android.widget.TextView[@text="Password sesuai"]
xpath criteria: //android.widget.TextView[@text="Password sesuai"]
xpath criteria: //android.widget.TextView[@text="Password sesuai"]</msg>
<msg time="2024-10-10T16:05:56.147083" level="FAIL">Element locator 'xpath=//android.widget.TextView[@text="Password sesuai"]' did not match any elements after 3 seconds</msg>
<arg>${passVerify}</arg>
<arg>timeout=3s</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="FAIL" start="2024-10-10T16:05:52.487018" elapsed="3.661099">Element locator 'xpath=//android.widget.TextView[@text="Password sesuai"]' did not match any elements after 3 seconds</status>
</kw>
<msg time="2024-10-10T16:05:56.148117" level="INFO">${res} = False</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${passVerify}</arg>
<arg>timeout=3s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:05:52.486021" elapsed="3.662096"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<var>${text}</var>
<arg>${passVerify}</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="NOT RUN" start="2024-10-10T16:05:56.149079" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Message Password: ${text}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:56.149079" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:56.149079" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="show error message" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:05:56.673901" level="INFO">xpath criteria: //android.widget.TextView[contains(@text, "harus")]</msg>
<arg>${errState}</arg>
<arg>timeout=3s</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:05:56.151074" elapsed="0.522827"/>
</kw>
<msg time="2024-10-10T16:05:56.674896" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${errState}</arg>
<arg>timeout=3s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:05:56.150076" elapsed="0.524820"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:05:57.405746" level="INFO">Element 'xpath=//android.widget.TextView[contains(@text, "harus")]' text is 'password harus memiliki minimal 8 karakter' </msg>
<msg time="2024-10-10T16:05:57.405746" level="INFO">xpath criteria: //android.widget.TextView[contains(@text, "harus")]</msg>
<msg time="2024-10-10T16:05:57.405746" level="INFO">${text} = password harus memiliki minimal 8 karakter</msg>
<var>${text}</var>
<arg>${errState}</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:05:56.674896" elapsed="0.730850"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Error Log: ${text}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-10-10T16:05:57.405746" elapsed="0.001155"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${text}</arg>
<arg>${errMsg}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-10-10T16:05:57.406901" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-10-10T16:05:56.674896" elapsed="0.733010"/>
</branch>
<branch type="ELSE">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${hasRegistered}</arg>
<arg>timeout=3s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:57.407906" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<var>${text}</var>
<arg>${hasRegistered}</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="NOT RUN" start="2024-10-10T16:05:57.408903" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Error Log: ${text}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:57.408903" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${text}</arg>
<arg>${errMsg}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:57.408903" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:57.407906" elapsed="0.000997"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>N/A</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:57.408903" elapsed="0.000000"/>
</kw>
<kw name="Get Text" owner="AppiumLibrary">
<var>${text}</var>
<arg>${notPassVerif}</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="NOT RUN" start="2024-10-10T16:05:57.408903" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Error Log: ${text}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:05:57.409899" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:05:57.408903" elapsed="0.000996"/>
</branch>
<status status="NOT RUN" start="2024-10-10T16:05:57.407906" elapsed="0.001993"/>
</if>
<status status="NOT RUN" start="2024-10-10T16:05:57.407906" elapsed="0.001993"/>
</branch>
<status status="PASS" start="2024-10-10T16:05:56.674896" elapsed="0.735003"/>
</if>
<arg>${errMsg}</arg>
<status status="PASS" start="2024-10-10T16:05:56.150076" elapsed="1.259823"/>
</kw>
<status status="PASS" start="2024-10-10T16:05:56.149079" elapsed="1.260820"/>
</branch>
<status status="PASS" start="2024-10-10T16:05:56.149079" elapsed="1.260820"/>
</if>
<arg>password harus memiliki minimal 8 karakter</arg>
<status status="PASS" start="2024-10-10T16:05:52.486021" elapsed="4.923878"/>
</kw>
<status status="PASS" start="2024-10-10T16:05:35.111587" elapsed="22.298312"/>
</kw>
<kw name="Close App" owner="openApp" type="TEARDOWN">
<kw name="Close Application" owner="AppiumLibrary">
<doc>Closes the current application and also close webdriver session.</doc>
<status status="PASS" start="2024-10-10T16:05:57.410895" elapsed="0.448456"/>
</kw>
<status status="PASS" start="2024-10-10T16:05:57.410895" elapsed="0.448456"/>
</kw>
<doc>This scenario test User Create User Management (Site/PIC) with password less than 8 char</doc>
<tag>1000s</tag>
<tag>test</tag>
<tag>user management</tag>
<status status="PASS" start="2024-10-10T16:05:27.043842" elapsed="30.816472"/>
</test>
<test id="s1-t7" name="Test Create User Management with confirm password must be char &amp; number" line="40">
<kw name="Open app Dev Project" owner="openApp" type="SETUP">
<kw name="Open Application" owner="AppiumLibrary">
<arg>http://127.0.0.1:4723</arg>
<arg>platformName=${platformName}</arg>
<arg>deviceName=${udid}</arg>
<arg>appPackage=${appPackage}</arg>
<arg>appActivity=${appActivity}</arg>
<arg>automationName=UiAutomator2</arg>
<doc>Opens a new application to given Appium server.
Capabilities of appium server, Android and iOS,
Please check https://appium.io/docs/en/2.1/cli/args/
| *Option*            | *Man.* | *Description*     |
| remote_url          | Yes    | Appium server url |
| alias               | no     | alias             |
| strict_ssl          | No     | allows you to send commands to an invalid certificate host like a self-signed one. |</doc>
<status status="PASS" start="2024-10-10T16:05:57.862570" elapsed="7.419879"/>
</kw>
<status status="PASS" start="2024-10-10T16:05:57.862570" elapsed="7.420841"/>
</kw>
<kw name="User create User Management password must be combine char &amp; number" owner="userManagement">
<kw name="Given user go to User Management page" owner="userManagementPage">
<kw name="User Login" owner="loginPage">
<kw name="Given user input no handphone" owner="loginPage">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:06:07.224970" level="INFO">xpath criteria: //android.widget.TextView[@text="Login"]</msg>
<arg>${titleLogin}</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:06:05.286406" elapsed="1.938564"/>
</kw>
<kw name="Input Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:06:07.227999" level="INFO">Typing text '088210068283' into text field 'xpath=//android.widget.EditText[1]'</msg>
<msg time="2024-10-10T16:06:07.382726" level="INFO">xpath criteria: //android.widget.EditText[1]</msg>
<arg>${inputNoHandphone}</arg>
<arg>${noHandphone}</arg>
<doc>Types the given `text` into text field identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:06:07.224970" elapsed="0.157756"/>
</kw>
<arg>${akunOP}</arg>
<status status="PASS" start="2024-10-10T16:06:05.286406" elapsed="2.096320"/>
</kw>
<kw name="When user input password" owner="loginPage">
<kw name="Input Password" owner="AppiumLibrary">
<msg time="2024-10-10T16:06:07.387709" level="INFO">Typing password into text field 'xpath=//android.widget.EditText[2]'</msg>
<msg time="2024-10-10T16:06:07.761656" level="INFO">xpath criteria: //android.widget.EditText[2]</msg>
<arg>${inputPassword}</arg>
<arg>${password}</arg>
<doc>Types the given password into text field identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:06:07.383719" elapsed="0.377937"/>
</kw>
<arg>${passwordProject}</arg>
<status status="PASS" start="2024-10-10T16:06:07.383719" elapsed="0.377937"/>
</kw>
<kw name="Then click button masuk" owner="loginPage">
<kw name="Click Element" owner="AppiumLibrary">
<msg time="2024-10-10T16:06:07.765644" level="INFO">Clicking element 'xpath=//android.view.View/android.view.View[2]'.</msg>
<msg time="2024-10-10T16:06:08.126251" level="INFO">xpath criteria: //android.view.View/android.view.View[2]</msg>
<arg>${buttonMasuk}</arg>
<doc>Click element identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:06:07.762653" elapsed="0.363598"/>
</kw>
<status status="PASS" start="2024-10-10T16:06:07.761656" elapsed="0.364595"/>
</kw>
<kw name="And home Project" owner="loginPage">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<arg>accessibility_id=Icon Projects</arg>
<arg>timeout=10s</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:06:08.127278" elapsed="2.327896"/>
</kw>
<kw name="Element Should Be Visible" owner="AppiumLibrary">
<arg>accessibility_id=Icon Projects</arg>
<doc>Verifies that element identified with locator is visible.</doc>
<status status="PASS" start="2024-10-10T16:06:10.455174" elapsed="0.632885"/>
</kw>
<kw name="Element Should Be Visible" owner="AppiumLibrary">
<arg>accessibility_id=Notification</arg>
<doc>Verifies that element identified with locator is visible.</doc>
<status status="PASS" start="2024-10-10T16:06:11.089055" elapsed="0.145753"/>
</kw>
<kw name="Element Should Be Visible" owner="AppiumLibrary">
<arg>accessibility_id=Icon Search</arg>
<doc>Verifies that element identified with locator is visible.</doc>
<status status="PASS" start="2024-10-10T16:06:11.234808" elapsed="0.128373"/>
</kw>
<status status="PASS" start="2024-10-10T16:06:08.126251" elapsed="3.236930"/>
</kw>
<status status="PASS" start="2024-10-10T16:06:05.285407" elapsed="6.077774"/>
</kw>
<kw name="Loc Parent View" owner="generalFunction">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-10-10T16:06:11.364177" level="INFO">${loc} = xpath=//android.widget.TextView[@text="User Management"]/parent::android.view.View</msg>
<var>${loc}</var>
<arg>xpath=//android.widget.TextView[@text="${text}"]/parent::android.view.View</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-10-10T16:06:11.364177" elapsed="0.000000"/>
</kw>
<return>
<value>${loc}</value>
<status status="PASS" start="2024-10-10T16:06:11.364177" elapsed="0.000000"/>
</return>
<msg time="2024-10-10T16:06:11.364177" level="INFO">${loc} = xpath=//android.widget.TextView[@text="User Management"]/parent::android.view.View</msg>
<var>${loc}</var>
<arg>User Management</arg>
<status status="PASS" start="2024-10-10T16:06:11.363181" elapsed="0.001995"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:06:11.563886" level="INFO">xpath criteria: //android.widget.TextView[@text="User Management"]/parent::android.view.View</msg>
<arg>${loc}</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:06:11.365176" elapsed="0.198710"/>
</kw>
<kw name="Click Element" owner="AppiumLibrary">
<msg time="2024-10-10T16:06:11.566876" level="INFO">Clicking element 'xpath=//android.widget.TextView[@text="User Management"]/parent::android.view.View'.</msg>
<msg time="2024-10-10T16:06:11.834269" level="INFO">xpath criteria: //android.widget.TextView[@text="User Management"]/parent::android.view.View</msg>
<arg>${loc}</arg>
<doc>Click element identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:06:11.563886" elapsed="0.271381"/>
</kw>
<status status="PASS" start="2024-10-10T16:06:05.285407" elapsed="6.549860"/>
</kw>
<kw name="And Get Detail Text User Management" owner="userManagementPage">
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-10-10T16:06:11.837260" level="INFO">${random} = 3</msg>
<var>${random}</var>
<arg>random.randint(1, 3)</arg>
<arg>modules=random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-10-10T16:06:11.837260" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:06:11.838259" level="INFO">${indexUser} = 3</msg>
<arg>${indexUser}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:06:11.838259" elapsed="0.000996"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-10-10T16:06:11.839255" level="INFO">Random : 3</msg>
<arg>Random : ${random}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-10-10T16:06:11.839255" elapsed="0.000000"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-10-10T16:06:11.840255" level="INFO">Length is 103.</msg>
<msg time="2024-10-10T16:06:11.840255" level="INFO">${len} = 103</msg>
<var>${len}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-10-10T16:06:11.840255" elapsed="0.000000"/>
</kw>
<for flavor="IN RANGE">
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:06:13.179495" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[3]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[3]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[3]/parent::android.view.View</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:06:11.844243" elapsed="1.336246"/>
</kw>
<msg time="2024-10-10T16:06:13.180489" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:06:11.843245" elapsed="1.337244"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:06:13.333865" level="INFO">Element 'xpath=(//android.view.View[@content-desc="Image"])[3]/parent::android.view.View/android.widget.TextView[1]' text is 'Damon Brakus' </msg>
<msg time="2024-10-10T16:06:13.333865" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[3]/parent::android.view.View/android.widget.TextView[1]</msg>
<msg time="2024-10-10T16:06:13.333865" level="INFO">${name} = Damon Brakus</msg>
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:06:13.180489" elapsed="0.153376"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:06:13.333865" level="INFO">${name} = Damon Brakus</msg>
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:06:13.333865" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-10-10T16:06:13.180489" elapsed="0.153376"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:13.334860" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:13.333865" elapsed="0.000995"/>
</branch>
<status status="PASS" start="2024-10-10T16:06:13.180489" elapsed="0.154371"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:06:11.842247" elapsed="1.492613"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:06:13.335825" level="INFO">${nameUserManagement} = Damon Brakus</msg>
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:06:13.334860" elapsed="0.000965"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-10-10T16:06:13.335825" elapsed="0.000695"/>
</kw>
<status status="PASS" start="2024-10-10T16:06:11.841250" elapsed="1.495270"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:13.336520" elapsed="0.001006"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:13.337526" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:13.337526" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:13.336520" elapsed="0.001006"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:13.338523" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:13.337526" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:13.338523" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:13.338523" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:13.338523" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:13.339519" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:13.339519" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:13.338523" elapsed="0.000996"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:13.339519" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:13.339519" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:13.340516" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:13.340516" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:13.340516" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:13.339519" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:13.340516" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:13.340516" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:13.341514" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:13.341514" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:13.341514" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:13.340516" elapsed="0.000998"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:06:13.341514" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:06:13.341514" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:06:11.841250" elapsed="1.500264"/>
</if>
<var name="${counter}">1</var>
<status status="PASS" start="2024-10-10T16:06:11.841250" elapsed="1.500264"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:13.345504" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:13.345504" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:13.345504" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:13.344506" elapsed="0.000998"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:06:13.500089" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[3]/parent::android.view.View</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:06:13.347499" elapsed="0.152590"/>
</kw>
<msg time="2024-10-10T16:06:13.500089" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:06:13.346500" elapsed="0.153589"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:06:13.647036" level="INFO">Element 'xpath=(//android.view.View[@content-desc="Image"])[3]/parent::android.view.View/android.widget.TextView[2]' text is 'Consultant' </msg>
<msg time="2024-10-10T16:06:13.647036" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[3]/parent::android.view.View/android.widget.TextView[2]</msg>
<msg time="2024-10-10T16:06:13.647036" level="INFO">${name} = Consultant</msg>
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:06:13.501089" elapsed="0.145947"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:06:13.648034" level="INFO">${name} = Consultant</msg>
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:06:13.647036" elapsed="0.000998"/>
</kw>
<status status="PASS" start="2024-10-10T16:06:13.500089" elapsed="0.147945"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:13.648034" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:13.648034" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:06:13.500089" elapsed="0.147945"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:06:13.346500" elapsed="0.302533"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:06:13.649033" level="INFO">${jabatan} = Consultant</msg>
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:06:13.649033" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-10-10T16:06:13.649033" elapsed="0.001202"/>
</kw>
<status status="PASS" start="2024-10-10T16:06:13.345504" elapsed="0.304731"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:13.650235" elapsed="0.001002"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:13.650235" elapsed="0.001002"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:13.651237" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:13.652235" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:13.652235" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:13.652235" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:13.653231" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:13.651237" elapsed="0.001994"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:13.653231" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:13.653231" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:13.653231" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:13.654228" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:13.654228" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:13.653231" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:13.655226" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:13.654228" elapsed="0.000998"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:13.655226" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:13.655226" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:13.655226" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:13.655226" elapsed="0.000996"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:06:13.656222" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:06:13.656222" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:06:13.344506" elapsed="0.311716"/>
</if>
<var name="${counter}">2</var>
<status status="PASS" start="2024-10-10T16:06:13.344506" elapsed="0.311716"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:13.656222" elapsed="0.001034"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:13.657256" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:13.657256" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:13.656222" elapsed="0.001034"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:13.658252" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:13.658252" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:13.658252" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:13.657256" elapsed="0.000996"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:06:13.807098" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[3]/parent::android.view.View</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:06:13.659250" elapsed="0.147848"/>
</kw>
<msg time="2024-10-10T16:06:13.807098" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:06:13.659250" elapsed="0.147848"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:06:14.353634" level="INFO">Element 'xpath=(//android.view.View[@content-desc="Image"])[3]/parent::android.view.View/android.widget.TextView[3]' text is 'Nomor handphone' </msg>
<msg time="2024-10-10T16:06:14.353634" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[3]/parent::android.view.View/android.widget.TextView[3]</msg>
<msg time="2024-10-10T16:06:14.353634" level="INFO">${name} = Nomor handphone</msg>
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:06:13.808094" elapsed="0.546540"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:06:14.355630" level="INFO">${name} = Nomor handphone</msg>
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:06:14.354634" elapsed="0.000996"/>
</kw>
<status status="PASS" start="2024-10-10T16:06:13.808094" elapsed="0.547536"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:14.355630" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:14.355630" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-10-10T16:06:13.808094" elapsed="0.548534"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:06:13.658252" elapsed="0.698376"/>
</kw>
<status status="PASS" start="2024-10-10T16:06:13.658252" elapsed="0.698376"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:14.356628" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:14.356628" elapsed="0.000997"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:14.357625" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:14.357625" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:14.357625" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:14.356628" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:14.358622" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:14.357625" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:14.358622" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:14.359620" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:14.359620" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:14.358622" elapsed="0.000998"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:14.360617" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:14.359620" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:14.360617" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:14.361614" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:14.361614" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:14.360617" elapsed="0.000997"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:06:14.361614" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:06:14.361614" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:06:13.656222" elapsed="0.706390"/>
</if>
<var name="${counter}">3</var>
<status status="PASS" start="2024-10-10T16:06:13.656222" elapsed="0.706390"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:14.363611" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:14.364606" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:14.364606" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:14.362612" elapsed="0.001994"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:14.365603" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:14.365603" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:14.365603" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:14.364606" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:14.366600" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:14.365603" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:06:14.504236" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[3]/parent::android.view.View</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:06:14.367597" elapsed="0.136639"/>
</kw>
<msg time="2024-10-10T16:06:14.505231" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:06:14.366600" elapsed="0.138631"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:06:14.648846" level="INFO">Element 'xpath=(//android.view.View[@content-desc="Image"])[3]/parent::android.view.View/android.widget.TextView[4]' text is '0874-5053-6867' </msg>
<msg time="2024-10-10T16:06:14.648846" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[3]/parent::android.view.View/android.widget.TextView[4]</msg>
<msg time="2024-10-10T16:06:14.649842" level="INFO">${name} = 0874-5053-6867</msg>
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:06:14.505231" elapsed="0.144611"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:06:14.649842" level="INFO">${name} = 0874-5053-6867</msg>
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:06:14.649842" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-10-10T16:06:14.505231" elapsed="0.144611"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:14.649842" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:14.649842" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:06:14.505231" elapsed="0.144611"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:06:14.366600" elapsed="0.284239"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:06:14.650839" level="INFO">${noTelp} = 0874-5053-6867</msg>
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:06:14.650839" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-10-10T16:06:14.650839" elapsed="0.000997"/>
</kw>
<kw name="Replace String" owner="String">
<msg time="2024-10-10T16:06:14.653833" level="INFO">${replaceNumb} = 087450536867</msg>
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-10-10T16:06:14.651836" elapsed="0.001997"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:06:14.654830" level="INFO">${replaceNumb} = 087450536867</msg>
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:06:14.653833" elapsed="0.000997"/>
</kw>
<status status="PASS" start="2024-10-10T16:06:14.366600" elapsed="0.288230"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:14.654830" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:14.654830" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:14.655827" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:14.655827" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:14.655827" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:14.654830" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:14.655827" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:14.655827" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:14.656823" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:14.656823" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:14.656823" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:14.655827" elapsed="0.000996"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:06:14.656823" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:06:14.656823" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:06:14.362612" elapsed="0.294211"/>
</if>
<var name="${counter}">4</var>
<status status="PASS" start="2024-10-10T16:06:14.362612" elapsed="0.294211"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:14.657821" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:14.657821" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:14.658818" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:14.657821" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:14.658818" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:14.659818" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:14.659818" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:14.658818" elapsed="0.001000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:14.659818" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:14.659818" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:14.660813" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:14.660813" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:14.660813" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:14.660813" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:14.660813" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:14.659818" elapsed="0.000995"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:06:14.840334" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[3]/parent::android.view.View</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:06:14.661810" elapsed="0.178524"/>
</kw>
<msg time="2024-10-10T16:06:14.841331" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:06:14.661810" elapsed="0.179521"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:06:14.987938" level="INFO">Element 'xpath=(//android.view.View[@content-desc="Image"])[3]/parent::android.view.View/android.widget.TextView[5]' text is 'Email' </msg>
<msg time="2024-10-10T16:06:14.987938" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[3]/parent::android.view.View/android.widget.TextView[5]</msg>
<msg time="2024-10-10T16:06:14.987938" level="INFO">${name} = Email</msg>
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:06:14.841331" elapsed="0.146607"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:06:14.988936" level="INFO">${name} = Email</msg>
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:06:14.987938" elapsed="0.000998"/>
</kw>
<status status="PASS" start="2024-10-10T16:06:14.841331" elapsed="0.147605"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:14.988936" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:14.988936" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:06:14.841331" elapsed="0.147605"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:06:14.661810" elapsed="0.328124"/>
</kw>
<status status="PASS" start="2024-10-10T16:06:14.660813" elapsed="0.329121"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:14.989934" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:14.990931" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:14.990931" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:14.989934" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:14.990931" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:14.990931" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:14.991928" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:14.991928" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:14.991928" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:14.990931" elapsed="0.000997"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:06:14.991928" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:06:14.991928" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:06:14.657821" elapsed="0.334107"/>
</if>
<var name="${counter}">5</var>
<status status="PASS" start="2024-10-10T16:06:14.657821" elapsed="0.334107"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:14.992924" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:14.992924" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:14.992924" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:14.992924" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:14.993922" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:14.993922" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:14.993922" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:14.992924" elapsed="0.000998"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:14.994919" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:14.993922" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:14.994919" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:14.994919" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:14.994919" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:14.994919" elapsed="0.000997"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:14.995916" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:14.994919" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:14.995916" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:14.995916" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:06:15.605584" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[3]/parent::android.view.View</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:06:14.997914" elapsed="0.608668"/>
</kw>
<msg time="2024-10-10T16:06:15.606582" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:06:14.997914" elapsed="0.608668"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:06:15.752253" level="INFO">Element 'xpath=(//android.view.View[@content-desc="Image"])[3]/parent::android.view.View/android.widget.TextView[6]' text is 'Mossie27@gmail.com' </msg>
<msg time="2024-10-10T16:06:15.752253" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[3]/parent::android.view.View/android.widget.TextView[6]</msg>
<msg time="2024-10-10T16:06:15.752253" level="INFO">${name} = Mossie27@gmail.com</msg>
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:06:15.606582" elapsed="0.145671"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:06:15.753251" level="INFO">${name} = Mossie27@gmail.com</msg>
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:06:15.753251" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-10-10T16:06:15.606582" elapsed="0.146669"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:15.753251" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:15.753251" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:06:15.606582" elapsed="0.146669"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:06:14.996914" elapsed="0.756337"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:06:15.754248" level="INFO">${email} = Mossie27@gmail.com</msg>
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:06:15.754248" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-10-10T16:06:15.754248" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2024-10-10T16:06:14.995916" elapsed="0.759332"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:15.755248" elapsed="0.000997"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:15.755248" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:15.756245" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:15.756245" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:15.757241" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:15.756245" elapsed="0.000996"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:06:15.757241" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:06:15.757241" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:06:14.992924" elapsed="0.764317"/>
</if>
<var name="${counter}">6</var>
<status status="PASS" start="2024-10-10T16:06:14.992924" elapsed="0.764317"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:15.759235" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:15.759235" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:15.759235" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:15.758238" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:15.760232" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:15.760232" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:15.760232" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:15.759235" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:15.760232" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:15.760232" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:15.761229" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:15.761229" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:15.761229" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:15.761229" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:15.761229" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:15.760232" elapsed="0.001995"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:15.762227" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:15.762227" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:15.763225" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:15.763225" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:15.763225" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:15.762227" elapsed="0.000998"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:06:15.884077" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[3]/parent::android.view.View</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:06:15.765220" elapsed="0.118857"/>
</kw>
<msg time="2024-10-10T16:06:15.884077" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:06:15.764221" elapsed="0.119856"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:06:16.019745" level="INFO">Element 'xpath=(//android.view.View[@content-desc="Image"])[3]/parent::android.view.View/android.widget.TextView[7]' text is 'Project aktif' </msg>
<msg time="2024-10-10T16:06:16.019745" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[3]/parent::android.view.View/android.widget.TextView[7]</msg>
<msg time="2024-10-10T16:06:16.019745" level="INFO">${name} = Project aktif</msg>
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:06:15.885075" elapsed="0.134670"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:06:16.020737" level="INFO">${name} = Project aktif</msg>
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:06:16.020737" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-10-10T16:06:15.884077" elapsed="0.136660"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:16.021707" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:16.021707" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:06:15.884077" elapsed="0.137630"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:06:15.764221" elapsed="0.257486"/>
</kw>
<status status="PASS" start="2024-10-10T16:06:15.763225" elapsed="0.258482"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:16.022704" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:16.022704" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:16.022704" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:16.021707" elapsed="0.000997"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:06:16.022704" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:06:16.022704" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:06:15.758238" elapsed="0.264466"/>
</if>
<var name="${counter}">7</var>
<status status="PASS" start="2024-10-10T16:06:15.758238" elapsed="0.264466"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:16.023700" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:16.023700" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:16.024697" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:16.023700" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:16.024697" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:16.024697" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:16.024697" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:16.024697" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:16.025694" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:16.024697" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:16.025694" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:16.025694" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:16.026691" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:16.026691" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:16.026691" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:16.025694" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:16.026691" elapsed="0.000998"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:16.026691" elapsed="0.000998"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:16.027689" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:16.027689" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:16.028688" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:16.027689" elapsed="0.000999"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:16.028688" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:16.028688" elapsed="0.001037"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:06:16.165653" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[3]/parent::android.view.View</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:06:16.030719" elapsed="0.134934"/>
</kw>
<msg time="2024-10-10T16:06:16.165653" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:06:16.030719" elapsed="0.134934"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:06:16.298584" level="INFO">Element 'xpath=(//android.view.View[@content-desc="Image"])[3]/parent::android.view.View/android.widget.TextView[8]' text is '0' </msg>
<msg time="2024-10-10T16:06:16.298584" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[3]/parent::android.view.View/android.widget.TextView[8]</msg>
<msg time="2024-10-10T16:06:16.298584" level="INFO">${name} = 0</msg>
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:06:16.165653" elapsed="0.132931"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:06:16.298584" level="INFO">${name} = 0</msg>
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:06:16.298584" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-10-10T16:06:16.165653" elapsed="0.132931"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:16.299581" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:16.298584" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-10-10T16:06:16.165653" elapsed="0.133928"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:06:16.029725" elapsed="0.269856"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:06:16.299581" level="INFO">${projActive} = 0</msg>
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:06:16.299581" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-10-10T16:06:16.299581" elapsed="0.001307"/>
</kw>
<status status="PASS" start="2024-10-10T16:06:16.029725" elapsed="0.271163"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:06:16.300888" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:06:16.300888" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:06:16.023700" elapsed="0.277188"/>
</if>
<var name="${counter}">8</var>
<status status="PASS" start="2024-10-10T16:06:16.023700" elapsed="0.277188"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:16.302890" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:16.302890" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:16.302890" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:16.301891" elapsed="0.000999"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:16.302890" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:16.303886" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:16.303886" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:16.302890" elapsed="0.000996"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:16.304884" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:16.303886" elapsed="0.000998"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:16.304884" elapsed="0.000997"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:16.305881" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:16.305881" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:16.305881" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:16.305881" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:16.304884" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:16.306878" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:16.305881" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:16.306878" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:16.306878" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:16.307876" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:16.306878" elapsed="0.000998"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:16.307876" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:16.307876" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:16.308874" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:16.308874" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:16.308874" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:16.307876" elapsed="0.000998"/>
</branch>
<branch type="ELSE">
<break>
<status status="PASS" start="2024-10-10T16:06:16.308874" elapsed="0.000998"/>
</break>
<status status="PASS" start="2024-10-10T16:06:16.308874" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-10-10T16:06:16.301891" elapsed="0.007981"/>
</if>
<var name="${counter}">9</var>
<status status="PASS" start="2024-10-10T16:06:16.301891" elapsed="0.007981"/>
</iter>
<var>${counter}</var>
<value>1</value>
<value>${len}</value>
<status status="PASS" start="2024-10-10T16:06:11.840255" elapsed="4.469617"/>
</for>
<status status="PASS" start="2024-10-10T16:06:11.836263" elapsed="4.473609"/>
</kw>
<kw name="When user add user management" owner="userManagementPage">
<kw name="home Project" owner="loginPage">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<arg>accessibility_id=Icon Projects</arg>
<arg>timeout=10s</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:06:16.310870" elapsed="0.097342"/>
</kw>
<kw name="Element Should Be Visible" owner="AppiumLibrary">
<arg>accessibility_id=Icon Projects</arg>
<doc>Verifies that element identified with locator is visible.</doc>
<status status="PASS" start="2024-10-10T16:06:16.408212" elapsed="0.095756"/>
</kw>
<kw name="Element Should Be Visible" owner="AppiumLibrary">
<arg>accessibility_id=Notification</arg>
<doc>Verifies that element identified with locator is visible.</doc>
<status status="PASS" start="2024-10-10T16:06:16.503968" elapsed="0.094448"/>
</kw>
<kw name="Element Should Be Visible" owner="AppiumLibrary">
<arg>accessibility_id=Icon Search</arg>
<doc>Verifies that element identified with locator is visible.</doc>
<status status="PASS" start="2024-10-10T16:06:16.598416" elapsed="0.100644"/>
</kw>
<status status="PASS" start="2024-10-10T16:06:16.309872" elapsed="0.390185"/>
</kw>
<kw name="Loc Parent View" owner="generalFunction">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-10-10T16:06:16.701055" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Tambah User"]/parent::android.view.View</msg>
<var>${loc}</var>
<arg>xpath=//android.widget.TextView[@text="${text}"]/parent::android.view.View</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-10-10T16:06:16.701055" elapsed="0.000000"/>
</kw>
<return>
<value>${loc}</value>
<status status="PASS" start="2024-10-10T16:06:16.701055" elapsed="0.000000"/>
</return>
<msg time="2024-10-10T16:06:16.702051" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Tambah User"]/parent::android.view.View</msg>
<var>${loc}</var>
<arg>Tambah User</arg>
<status status="PASS" start="2024-10-10T16:06:16.700057" elapsed="0.001994"/>
</kw>
<kw name="Click Element" owner="AppiumLibrary">
<msg time="2024-10-10T16:06:16.705042" level="INFO">Clicking element 'xpath=//android.widget.TextView[@text="Tambah User"]/parent::android.view.View'.</msg>
<msg time="2024-10-10T16:06:17.682535" level="INFO">xpath criteria: //android.widget.TextView[@text="Tambah User"]/parent::android.view.View</msg>
<arg>${loc}</arg>
<doc>Click element identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:06:16.702051" elapsed="0.980484"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:06:17.836807" level="INFO">xpath criteria: //android.widget.ScrollView//following-sibling::android.widget.TextView[contains(@text, "upload file")]</msg>
<arg>${textUploadFile}</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:06:17.682535" elapsed="0.154272"/>
</kw>
<status status="PASS" start="2024-10-10T16:06:16.309872" elapsed="1.526935"/>
</kw>
<kw name="Then user input Nama user management" owner="userManagementPage">
<kw name="Generate Simple Random Name" owner="generalFunction">
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-10-10T16:06:17.837804" level="INFO">${name} = ZVOUP MBWDPDGG</msg>
<var>${name}</var>
<arg>''.join(random.choices('ABCDEFGHIJKLMNOPQRSTUVWXYZ', k=5)) + ' ' + ''.join(random.choices('ABCDEFGHIJKLMNOPQRSTUVWXYZ', k=8))</arg>
<arg>modules=random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-10-10T16:06:17.837804" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:06:17.838836" level="INFO">${randomStr} = ZVOUP MBWDPDGG</msg>
<arg>${randomStr}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:06:17.838836" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-10-10T16:06:17.837804" elapsed="0.001032"/>
</kw>
<kw name="Generate Random Phone Number" owner="generalFunction">
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-10-10T16:06:17.839832" level="INFO">${random_number} = 0884720129</msg>
<var>${random_number}</var>
<arg>'08' + str(random.randint(10000000, 99999999))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-10-10T16:06:17.839832" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:06:17.839832" level="INFO">${randNumber} = 0884720129</msg>
<arg>${randNumber}</arg>
<arg>${random_number}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:06:17.839832" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-10-10T16:06:17.838836" elapsed="0.000996"/>
</kw>
<kw name="Generate Random Email" owner="generalFunction">
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-10-10T16:06:17.840829" level="INFO">${name} = hxcvldut</msg>
<var>${name}</var>
<arg>''.join(random.choices('abcdefghijklmnopqrtuvwxyz', k=8))</arg>
<arg>modules=random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-10-10T16:06:17.840829" elapsed="0.000998"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-10-10T16:06:17.841827" level="INFO">${nameEmail} = hxcvldut@gmail.com</msg>
<var>${nameEmail}</var>
<arg>${name}@gmail.com</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-10-10T16:06:17.841827" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:06:17.842823" level="INFO">${randomEmail} = hxcvldut@gmail.com</msg>
<arg>${randomEmail}</arg>
<arg>${nameEmail}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:06:17.841827" elapsed="0.000996"/>
</kw>
<status status="PASS" start="2024-10-10T16:06:17.840829" elapsed="0.001994"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:06:17.842823" level="INFO">${nameUser} = ZVOUP MBWDPDGG</msg>
<arg>${nameUser}</arg>
<arg>${randomStr}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:06:17.842823" elapsed="0.000000"/>
</kw>
<kw name="input text (EditText)" owner="generalFunction">
<kw name="Loc Parent EditText" owner="generalFunction">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-10-10T16:06:17.844818" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Masukkan nama user"]/parent::android.widget.EditText</msg>
<var>${loc}</var>
<arg>xpath=//android.widget.TextView[@text="${text}"]/parent::android.widget.EditText</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-10-10T16:06:17.843824" elapsed="0.000994"/>
</kw>
<return>
<value>${loc}</value>
<status status="PASS" start="2024-10-10T16:06:17.844818" elapsed="0.000000"/>
</return>
<msg time="2024-10-10T16:06:17.844818" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Masukkan nama user"]/parent::android.widget.EditText</msg>
<var>${loc}</var>
<arg>${locEdit}</arg>
<status status="PASS" start="2024-10-10T16:06:17.843824" elapsed="0.000994"/>
</kw>
<kw name="Input Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:06:17.847816" level="INFO">Typing text 'ZVOUP MBWDPDGG' into text field 'xpath=//android.widget.TextView[@text="Masukkan nama user"]/parent::android.widget.EditText'</msg>
<msg time="2024-10-10T16:06:17.982051" level="INFO">xpath criteria: //android.widget.TextView[@text="Masukkan nama user"]/parent::android.widget.EditText</msg>
<arg>${loc}</arg>
<arg>${rand_text}</arg>
<doc>Types the given `text` into text field identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:06:17.844818" elapsed="0.137233"/>
</kw>
<arg>${randomStr}</arg>
<arg>Masukkan nama user</arg>
<status status="PASS" start="2024-10-10T16:06:17.843824" elapsed="0.139257"/>
</kw>
<status status="PASS" start="2024-10-10T16:06:17.836807" elapsed="0.146274"/>
</kw>
<kw name="And user input text (EditText)" owner="userManagementPage">
<kw name="input text (EditText)" owner="generalFunction">
<kw name="Loc Parent EditText" owner="generalFunction">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-10-10T16:06:17.985075" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Masukan jabatan user"]/parent::android.widget.EditText</msg>
<var>${loc}</var>
<arg>xpath=//android.widget.TextView[@text="${text}"]/parent::android.widget.EditText</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-10-10T16:06:17.984045" elapsed="0.001030"/>
</kw>
<return>
<value>${loc}</value>
<status status="PASS" start="2024-10-10T16:06:17.985075" elapsed="0.000000"/>
</return>
<msg time="2024-10-10T16:06:17.985075" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Masukan jabatan user"]/parent::android.widget.EditText</msg>
<var>${loc}</var>
<arg>${locEdit}</arg>
<status status="PASS" start="2024-10-10T16:06:17.984045" elapsed="0.001030"/>
</kw>
<kw name="Input Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:06:17.988069" level="INFO">Typing text 'ZVOUP MBWDPDGG' into text field 'xpath=//android.widget.TextView[@text="Masukan jabatan user"]/parent::android.widget.EditText'</msg>
<msg time="2024-10-10T16:06:18.182262" level="INFO">xpath criteria: //android.widget.TextView[@text="Masukan jabatan user"]/parent::android.widget.EditText</msg>
<arg>${loc}</arg>
<arg>${rand_text}</arg>
<doc>Types the given `text` into text field identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:06:17.985075" elapsed="0.197187"/>
</kw>
<arg>${text}</arg>
<arg>${locEditext}</arg>
<status status="PASS" start="2024-10-10T16:06:17.984045" elapsed="0.199218"/>
</kw>
<arg>${randomStr}</arg>
<arg>Masukan jabatan user</arg>
<status status="PASS" start="2024-10-10T16:06:17.983081" elapsed="0.200182"/>
</kw>
<kw name="And user input text (EditText)" owner="userManagementPage">
<kw name="input text (EditText)" owner="generalFunction">
<kw name="Loc Parent EditText" owner="generalFunction">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-10-10T16:06:18.184294" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Masukkan email user"]/parent::android.widget.EditText</msg>
<var>${loc}</var>
<arg>xpath=//android.widget.TextView[@text="${text}"]/parent::android.widget.EditText</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-10-10T16:06:18.184294" elapsed="0.000997"/>
</kw>
<return>
<value>${loc}</value>
<status status="PASS" start="2024-10-10T16:06:18.185291" elapsed="0.000000"/>
</return>
<msg time="2024-10-10T16:06:18.185291" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Masukkan email user"]/parent::android.widget.EditText</msg>
<var>${loc}</var>
<arg>${locEdit}</arg>
<status status="PASS" start="2024-10-10T16:06:18.184294" elapsed="0.000997"/>
</kw>
<kw name="Input Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:06:18.188246" level="INFO">Typing text 'hxcvldut@gmail.com' into text field 'xpath=//android.widget.TextView[@text="Masukkan email user"]/parent::android.widget.EditText'</msg>
<msg time="2024-10-10T16:06:18.377516" level="INFO">xpath criteria: //android.widget.TextView[@text="Masukkan email user"]/parent::android.widget.EditText</msg>
<arg>${loc}</arg>
<arg>${rand_text}</arg>
<doc>Types the given `text` into text field identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:06:18.185291" elapsed="0.192225"/>
</kw>
<arg>${text}</arg>
<arg>${locEditext}</arg>
<status status="PASS" start="2024-10-10T16:06:18.184294" elapsed="0.193222"/>
</kw>
<arg>${randomEmail}</arg>
<arg>Masukkan email user</arg>
<status status="PASS" start="2024-10-10T16:06:18.183263" elapsed="0.194253"/>
</kw>
<kw name="And user input text (EditText)" owner="userManagementPage">
<kw name="input text (EditText)" owner="generalFunction">
<kw name="Loc Parent EditText" owner="generalFunction">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-10-10T16:06:18.380506" level="INFO">${loc} = xpath=//android.widget.TextView[@text="08xxxxxxxxxx"]/parent::android.widget.EditText</msg>
<var>${loc}</var>
<arg>xpath=//android.widget.TextView[@text="${text}"]/parent::android.widget.EditText</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-10-10T16:06:18.379508" elapsed="0.000998"/>
</kw>
<return>
<value>${loc}</value>
<status status="PASS" start="2024-10-10T16:06:18.380506" elapsed="0.000000"/>
</return>
<msg time="2024-10-10T16:06:18.381504" level="INFO">${loc} = xpath=//android.widget.TextView[@text="08xxxxxxxxxx"]/parent::android.widget.EditText</msg>
<var>${loc}</var>
<arg>${locEdit}</arg>
<status status="PASS" start="2024-10-10T16:06:18.379508" elapsed="0.001996"/>
</kw>
<kw name="Input Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:06:18.384494" level="INFO">Typing text '0884720129' into text field 'xpath=//android.widget.TextView[@text="08xxxxxxxxxx"]/parent::android.widget.EditText'</msg>
<msg time="2024-10-10T16:06:18.535472" level="INFO">xpath criteria: //android.widget.TextView[@text="08xxxxxxxxxx"]/parent::android.widget.EditText</msg>
<arg>${loc}</arg>
<arg>${rand_text}</arg>
<doc>Types the given `text` into text field identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:06:18.381504" elapsed="0.154965"/>
</kw>
<arg>${text}</arg>
<arg>${locEditext}</arg>
<status status="PASS" start="2024-10-10T16:06:18.378512" elapsed="0.157957"/>
</kw>
<arg>${randNumber}</arg>
<arg>08xxxxxxxxxx</arg>
<status status="PASS" start="2024-10-10T16:06:18.378512" elapsed="0.157957"/>
</kw>
<kw name="And user input text (EditText)" owner="userManagementPage">
<kw name="input text (EditText)" owner="generalFunction">
<kw name="Loc Parent EditText" owner="generalFunction">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-10-10T16:06:18.538462" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Masukkan password"]/parent::android.widget.EditText</msg>
<var>${loc}</var>
<arg>xpath=//android.widget.TextView[@text="${text}"]/parent::android.widget.EditText</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-10-10T16:06:18.538462" elapsed="0.000000"/>
</kw>
<return>
<value>${loc}</value>
<status status="PASS" start="2024-10-10T16:06:18.538462" elapsed="0.000000"/>
</return>
<msg time="2024-10-10T16:06:18.538462" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Masukkan password"]/parent::android.widget.EditText</msg>
<var>${loc}</var>
<arg>${locEdit}</arg>
<status status="PASS" start="2024-10-10T16:06:18.537467" elapsed="0.000995"/>
</kw>
<kw name="Input Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:06:18.541454" level="INFO">Typing text 'acdfffwww' into text field 'xpath=//android.widget.TextView[@text="Masukkan password"]/parent::android.widget.EditText'</msg>
<msg time="2024-10-10T16:06:18.719857" level="INFO">xpath criteria: //android.widget.TextView[@text="Masukkan password"]/parent::android.widget.EditText</msg>
<arg>${loc}</arg>
<arg>${rand_text}</arg>
<doc>Types the given `text` into text field identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:06:18.538462" elapsed="0.181395"/>
</kw>
<arg>${text}</arg>
<arg>${locEditext}</arg>
<status status="PASS" start="2024-10-10T16:06:18.537467" elapsed="0.182390"/>
</kw>
<arg>acdfffwww</arg>
<arg>Masukkan password</arg>
<status status="PASS" start="2024-10-10T16:06:18.536469" elapsed="0.183388"/>
</kw>
<kw name="And user input konfirmasi password" owner="userManagementPage">
<kw name="input password form user management" owner="generalFunction">
<kw name="Loc Parent EditText" owner="generalFunction">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-10-10T16:06:18.721883" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Masukkan Konfirmasi password"]/parent::android.widget.EditText</msg>
<var>${loc}</var>
<arg>xpath=//android.widget.TextView[@text="${text}"]/parent::android.widget.EditText</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-10-10T16:06:18.720886" elapsed="0.000997"/>
</kw>
<return>
<value>${loc}</value>
<status status="PASS" start="2024-10-10T16:06:18.721883" elapsed="0.000000"/>
</return>
<msg time="2024-10-10T16:06:18.721883" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Masukkan Konfirmasi password"]/parent::android.widget.EditText</msg>
<var>${loc}</var>
<arg>${locatorText}</arg>
<status status="PASS" start="2024-10-10T16:06:18.720886" elapsed="0.000997"/>
</kw>
<kw name="Swipe" owner="AppiumLibrary">
<arg>${521}</arg>
<arg>${1798}</arg>
<arg>${530}</arg>
<arg>${1207}</arg>
<doc>Swipe from one point to another point, for an optional duration.</doc>
<status status="PASS" start="2024-10-10T16:06:18.721883" elapsed="1.326298"/>
</kw>
<kw name="Input Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:06:20.051209" level="INFO">Typing text 'test1234' into text field 'xpath=//android.widget.TextView[@text="Masukkan Konfirmasi password"]/parent::android.widget.EditText'</msg>
<msg time="2024-10-10T16:06:20.357025" level="INFO">xpath criteria: //android.widget.TextView[@text="Masukkan Konfirmasi password"]/parent::android.widget.EditText</msg>
<arg>${loc}</arg>
<arg>${password}</arg>
<doc>Types the given `text` into text field identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:06:20.048181" elapsed="0.308844"/>
</kw>
<arg>${text}</arg>
<arg>Masukkan Konfirmasi password</arg>
<status status="PASS" start="2024-10-10T16:06:18.720886" elapsed="1.636139"/>
</kw>
<arg>${passwordSite}</arg>
<status status="PASS" start="2024-10-10T16:06:18.719857" elapsed="1.637168"/>
</kw>
<kw name="And verify password" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<kw name="Capture Page Screenshot" owner="AppiumLibrary">
<msg time="2024-10-10T16:06:23.877139" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;img src="data:image/png;base64, " width="800px"&gt;</msg>
<doc>Takes a screenshot of the current page and embeds it into the log.</doc>
<status status="PASS" start="2024-10-10T16:06:23.495090" elapsed="0.385077"/>
</kw>
<msg time="2024-10-10T16:06:23.880167" level="INFO">xpath criteria: //android.widget.TextView[@text="Password sesuai"]
xpath criteria: //android.widget.TextView[@text="Password sesuai"]
xpath criteria: //android.widget.TextView[@text="Password sesuai"]
xpath criteria: //android.widget.TextView[@text="Password sesuai"]
xpath criteria: //android.widget.TextView[@text="Password sesuai"]
xpath criteria: //android.widget.TextView[@text="Password sesuai"]
xpath criteria: //android.widget.TextView[@text="Password sesuai"]
xpath criteria: //android.widget.TextView[@text="Password sesuai"]
xpath criteria: //android.widget.TextView[@text="Password sesuai"]
xpath criteria: //android.widget.TextView[@text="Password sesuai"]</msg>
<msg time="2024-10-10T16:06:23.881162" level="FAIL">Element locator 'xpath=//android.widget.TextView[@text="Password sesuai"]' did not match any elements after 3 seconds</msg>
<arg>${passVerify}</arg>
<arg>timeout=3s</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="FAIL" start="2024-10-10T16:06:20.358022" elapsed="3.524139">Element locator 'xpath=//android.widget.TextView[@text="Password sesuai"]' did not match any elements after 3 seconds</status>
</kw>
<msg time="2024-10-10T16:06:23.882161" level="INFO">${res} = False</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${passVerify}</arg>
<arg>timeout=3s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:06:20.358022" elapsed="3.524139"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<var>${text}</var>
<arg>${passVerify}</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="NOT RUN" start="2024-10-10T16:06:23.882161" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Message Password: ${text}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:23.882161" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:23.882161" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="show error message" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:06:24.454515" level="INFO">xpath criteria: //android.widget.TextView[contains(@text, "harus")]</msg>
<arg>${errState}</arg>
<arg>timeout=3s</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:06:23.883155" elapsed="0.571360"/>
</kw>
<msg time="2024-10-10T16:06:24.455512" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${errState}</arg>
<arg>timeout=3s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:06:23.883155" elapsed="0.572357"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:06:24.567625" level="INFO">Element 'xpath=//android.widget.TextView[contains(@text, "harus")]' text is 'Password harus terdiri dari kombinasi huruf dan angka' </msg>
<msg time="2024-10-10T16:06:24.567625" level="INFO">xpath criteria: //android.widget.TextView[contains(@text, "harus")]</msg>
<msg time="2024-10-10T16:06:24.567625" level="INFO">${text} = Password harus terdiri dari kombinasi huruf dan angka</msg>
<var>${text}</var>
<arg>${errState}</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:06:24.455512" elapsed="0.112113"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Error Log: ${text}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-10-10T16:06:24.568622" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${text}</arg>
<arg>${errMsg}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-10-10T16:06:24.569583" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-10-10T16:06:24.455512" elapsed="0.114071"/>
</branch>
<branch type="ELSE">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${hasRegistered}</arg>
<arg>timeout=3s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:24.570582" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<var>${text}</var>
<arg>${hasRegistered}</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="NOT RUN" start="2024-10-10T16:06:24.570582" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Error Log: ${text}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:24.571578" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${text}</arg>
<arg>${errMsg}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:24.571578" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:24.570582" elapsed="0.000996"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>N/A</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:24.572575" elapsed="0.000000"/>
</kw>
<kw name="Get Text" owner="AppiumLibrary">
<var>${text}</var>
<arg>${notPassVerif}</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="NOT RUN" start="2024-10-10T16:06:24.572575" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Error Log: ${text}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:24.572575" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:24.571578" elapsed="0.000997"/>
</branch>
<status status="NOT RUN" start="2024-10-10T16:06:24.570582" elapsed="0.001993"/>
</if>
<status status="NOT RUN" start="2024-10-10T16:06:24.569583" elapsed="0.002992"/>
</branch>
<status status="PASS" start="2024-10-10T16:06:24.455512" elapsed="0.117063"/>
</if>
<arg>${errMsg}</arg>
<status status="PASS" start="2024-10-10T16:06:23.883155" elapsed="0.689420"/>
</kw>
<status status="PASS" start="2024-10-10T16:06:23.883155" elapsed="0.690417"/>
</branch>
<status status="PASS" start="2024-10-10T16:06:23.882161" elapsed="0.691411"/>
</if>
<arg>Password harus terdiri dari kombinasi huruf dan angka</arg>
<status status="PASS" start="2024-10-10T16:06:20.358022" elapsed="4.215550"/>
</kw>
<status status="PASS" start="2024-10-10T16:06:05.284410" elapsed="19.289162"/>
</kw>
<kw name="Close App" owner="openApp" type="TEARDOWN">
<kw name="Close Application" owner="AppiumLibrary">
<doc>Closes the current application and also close webdriver session.</doc>
<status status="PASS" start="2024-10-10T16:06:24.574569" elapsed="0.413248"/>
</kw>
<status status="PASS" start="2024-10-10T16:06:24.573572" elapsed="0.414245"/>
</kw>
<doc>This scenario test User Create User Management (Site/PIC) with password combine char &amp; number</doc>
<tag>1000s</tag>
<tag>test</tag>
<tag>user management</tag>
<status status="PASS" start="2024-10-10T16:05:57.861569" elapsed="27.126248"/>
</test>
<test id="s1-t8" name="Test Cancel create User Management" line="45">
<kw name="Open app Dev Project" owner="openApp" type="SETUP">
<kw name="Open Application" owner="AppiumLibrary">
<arg>http://127.0.0.1:4723</arg>
<arg>platformName=${platformName}</arg>
<arg>deviceName=${udid}</arg>
<arg>appPackage=${appPackage}</arg>
<arg>appActivity=${appActivity}</arg>
<arg>automationName=UiAutomator2</arg>
<doc>Opens a new application to given Appium server.
Capabilities of appium server, Android and iOS,
Please check https://appium.io/docs/en/2.1/cli/args/
| *Option*            | *Man.* | *Description*     |
| remote_url          | Yes    | Appium server url |
| alias               | no     | alias             |
| strict_ssl          | No     | allows you to send commands to an invalid certificate host like a self-signed one. |</doc>
<status status="PASS" start="2024-10-10T16:06:24.990998" elapsed="8.050844"/>
</kw>
<status status="PASS" start="2024-10-10T16:06:24.990000" elapsed="8.051842"/>
</kw>
<kw name="Click Ya alert Batal Tambah User" owner="userManagement">
<kw name="Given user go to User Management page" owner="userManagementPage">
<kw name="User Login" owner="loginPage">
<kw name="Given user input no handphone" owner="loginPage">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:06:35.060499" level="INFO">xpath criteria: //android.widget.TextView[@text="Login"]</msg>
<arg>${titleLogin}</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:06:33.044835" elapsed="2.015664"/>
</kw>
<kw name="Input Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:06:35.065485" level="INFO">Typing text '088210068283' into text field 'xpath=//android.widget.EditText[1]'</msg>
<msg time="2024-10-10T16:06:35.275844" level="INFO">xpath criteria: //android.widget.EditText[1]</msg>
<arg>${inputNoHandphone}</arg>
<arg>${noHandphone}</arg>
<doc>Types the given `text` into text field identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:06:35.061498" elapsed="0.215344"/>
</kw>
<arg>${akunOP}</arg>
<status status="PASS" start="2024-10-10T16:06:33.044835" elapsed="2.232007"/>
</kw>
<kw name="When user input password" owner="loginPage">
<kw name="Input Password" owner="AppiumLibrary">
<msg time="2024-10-10T16:06:35.279832" level="INFO">Typing password into text field 'xpath=//android.widget.EditText[2]'</msg>
<msg time="2024-10-10T16:06:35.656309" level="INFO">xpath criteria: //android.widget.EditText[2]</msg>
<arg>${inputPassword}</arg>
<arg>${password}</arg>
<doc>Types the given password into text field identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:06:35.277839" elapsed="0.378470"/>
</kw>
<arg>${passwordProject}</arg>
<status status="PASS" start="2024-10-10T16:06:35.276842" elapsed="0.379467"/>
</kw>
<kw name="Then click button masuk" owner="loginPage">
<kw name="Click Element" owner="AppiumLibrary">
<msg time="2024-10-10T16:06:35.659339" level="INFO">Clicking element 'xpath=//android.view.View/android.view.View[2]'.</msg>
<msg time="2024-10-10T16:06:36.067772" level="INFO">xpath criteria: //android.view.View/android.view.View[2]</msg>
<arg>${buttonMasuk}</arg>
<doc>Click element identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:06:35.657342" elapsed="0.410430"/>
</kw>
<status status="PASS" start="2024-10-10T16:06:35.656309" elapsed="0.411463"/>
</kw>
<kw name="And home Project" owner="loginPage">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<arg>accessibility_id=Icon Projects</arg>
<arg>timeout=10s</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:06:36.068772" elapsed="3.320354"/>
</kw>
<kw name="Element Should Be Visible" owner="AppiumLibrary">
<arg>accessibility_id=Icon Projects</arg>
<doc>Verifies that element identified with locator is visible.</doc>
<status status="PASS" start="2024-10-10T16:06:39.389126" elapsed="0.179692"/>
</kw>
<kw name="Element Should Be Visible" owner="AppiumLibrary">
<arg>accessibility_id=Notification</arg>
<doc>Verifies that element identified with locator is visible.</doc>
<status status="PASS" start="2024-10-10T16:06:39.568818" elapsed="0.111250"/>
</kw>
<kw name="Element Should Be Visible" owner="AppiumLibrary">
<arg>accessibility_id=Icon Search</arg>
<doc>Verifies that element identified with locator is visible.</doc>
<status status="PASS" start="2024-10-10T16:06:39.680068" elapsed="0.116406"/>
</kw>
<status status="PASS" start="2024-10-10T16:06:36.067772" elapsed="3.729736"/>
</kw>
<status status="PASS" start="2024-10-10T16:06:33.043839" elapsed="6.753669"/>
</kw>
<kw name="Loc Parent View" owner="generalFunction">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-10-10T16:06:39.798505" level="INFO">${loc} = xpath=//android.widget.TextView[@text="User Management"]/parent::android.view.View</msg>
<var>${loc}</var>
<arg>xpath=//android.widget.TextView[@text="${text}"]/parent::android.view.View</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-10-10T16:06:39.798505" elapsed="0.000000"/>
</kw>
<return>
<value>${loc}</value>
<status status="PASS" start="2024-10-10T16:06:39.798505" elapsed="0.000000"/>
</return>
<msg time="2024-10-10T16:06:39.798505" level="INFO">${loc} = xpath=//android.widget.TextView[@text="User Management"]/parent::android.view.View</msg>
<var>${loc}</var>
<arg>User Management</arg>
<status status="PASS" start="2024-10-10T16:06:39.797508" elapsed="0.000997"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:06:40.006009" level="INFO">xpath criteria: //android.widget.TextView[@text="User Management"]/parent::android.view.View</msg>
<arg>${loc}</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:06:39.798505" elapsed="0.207504"/>
</kw>
<kw name="Click Element" owner="AppiumLibrary">
<msg time="2024-10-10T16:06:40.011989" level="INFO">Clicking element 'xpath=//android.widget.TextView[@text="User Management"]/parent::android.view.View'.</msg>
<msg time="2024-10-10T16:06:40.673117" level="INFO">xpath criteria: //android.widget.TextView[@text="User Management"]/parent::android.view.View</msg>
<arg>${loc}</arg>
<doc>Click element identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:06:40.006009" elapsed="0.667108"/>
</kw>
<status status="PASS" start="2024-10-10T16:06:33.042840" elapsed="7.630277"/>
</kw>
<kw name="And Get Detail Text User Management" owner="userManagementPage">
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-10-10T16:06:40.675152" level="INFO">${random} = 2</msg>
<var>${random}</var>
<arg>random.randint(1, 3)</arg>
<arg>modules=random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-10-10T16:06:40.674149" elapsed="0.001003"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:06:40.675152" level="INFO">${indexUser} = 2</msg>
<arg>${indexUser}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:06:40.675152" elapsed="0.000000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-10-10T16:06:40.675152" level="INFO">Random : 2</msg>
<arg>Random : ${random}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-10-10T16:06:40.675152" elapsed="0.000000"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-10-10T16:06:40.676142" level="INFO">Length is 103.</msg>
<msg time="2024-10-10T16:06:40.676142" level="INFO">${len} = 103</msg>
<var>${len}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-10-10T16:06:40.676142" elapsed="0.000000"/>
</kw>
<for flavor="IN RANGE">
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:06:42.241508" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:06:40.679101" elapsed="1.562407"/>
</kw>
<msg time="2024-10-10T16:06:42.241508" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:06:40.678101" elapsed="1.563407"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:06:42.395341" level="INFO">Element 'xpath=(//android.view.View[@content-desc="Image"])[2]/parent::android.view.View/android.widget.TextView[1]' text is 'CaZz' </msg>
<msg time="2024-10-10T16:06:42.396337" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View/android.widget.TextView[1]</msg>
<msg time="2024-10-10T16:06:42.396337" level="INFO">${name} = CaZz</msg>
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:06:42.242505" elapsed="0.153832"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:06:42.396337" level="INFO">${name} = CaZz</msg>
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:06:42.396337" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-10-10T16:06:42.242505" elapsed="0.153832"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:42.396337" elapsed="0.000999"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:42.396337" elapsed="0.000999"/>
</branch>
<status status="PASS" start="2024-10-10T16:06:42.242505" elapsed="0.154831"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:06:40.678101" elapsed="1.719235"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:06:42.397336" level="INFO">${nameUserManagement} = CaZz</msg>
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:06:42.397336" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-10-10T16:06:42.398334" elapsed="0.000959"/>
</kw>
<status status="PASS" start="2024-10-10T16:06:40.677106" elapsed="1.722187"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:42.399293" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:42.400328" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:42.400328" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:42.399293" elapsed="0.001035"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:42.400328" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:42.400328" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:42.401324" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:42.401324" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:42.401324" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:42.401324" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:42.401324" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:42.400328" elapsed="0.000996"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:42.402321" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:42.401324" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:42.402321" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:42.402321" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:42.403283" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:42.402321" elapsed="0.000962"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:42.403283" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:42.403283" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:42.403283" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:42.403283" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:42.404281" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:42.403283" elapsed="0.000998"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:06:42.404281" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:06:42.404281" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:06:40.677106" elapsed="1.727175"/>
</if>
<var name="${counter}">1</var>
<status status="PASS" start="2024-10-10T16:06:40.677106" elapsed="1.727175"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:42.405276" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:42.406273" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:42.406273" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:42.404281" elapsed="0.001992"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:06:42.603857" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:06:42.407309" elapsed="0.196548"/>
</kw>
<msg time="2024-10-10T16:06:42.603857" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:06:42.407309" elapsed="0.196548"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:06:42.876249" level="INFO">Element 'xpath=(//android.view.View[@content-desc="Image"])[2]/parent::android.view.View/android.widget.TextView[2]' text is 'a' </msg>
<msg time="2024-10-10T16:06:42.876249" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View/android.widget.TextView[2]</msg>
<msg time="2024-10-10T16:06:42.876249" level="INFO">${name} = a</msg>
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:06:42.604855" elapsed="0.271394"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:06:42.877248" level="INFO">${name} = a</msg>
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:06:42.877248" elapsed="0.001010"/>
</kw>
<status status="PASS" start="2024-10-10T16:06:42.603857" elapsed="0.274401"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:42.878258" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:42.878258" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:06:42.603857" elapsed="0.274401"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:06:42.407309" elapsed="0.470949"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:06:42.879242" level="INFO">${jabatan} = a</msg>
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:06:42.879242" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-10-10T16:06:42.880239" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-10-10T16:06:42.406273" elapsed="0.473966"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:42.881237" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:42.881237" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:42.882235" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:42.882235" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:42.883232" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:42.883232" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:42.883232" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:42.881237" elapsed="0.002991"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:42.884228" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:42.884228" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:42.885226" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:42.885226" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:42.886224" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:42.884228" elapsed="0.001996"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:42.886224" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:42.886224" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:42.887221" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:42.887221" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:42.888218" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:42.887221" elapsed="0.000997"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:06:42.888218" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:06:42.888218" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:06:42.404281" elapsed="0.483937"/>
</if>
<var name="${counter}">2</var>
<status status="PASS" start="2024-10-10T16:06:42.404281" elapsed="0.483937"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:42.890214" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:42.890214" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:42.890214" elapsed="0.000997"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:42.889216" elapsed="0.001995"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:42.891211" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:42.892208" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:42.892208" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:42.891211" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:06:43.088682" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:06:42.895200" elapsed="0.193482"/>
</kw>
<msg time="2024-10-10T16:06:43.089680" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:06:42.894202" elapsed="0.195478"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:06:43.655166" level="INFO">Element 'xpath=(//android.view.View[@content-desc="Image"])[2]/parent::android.view.View/android.widget.TextView[3]' text is 'Nomor handphone' </msg>
<msg time="2024-10-10T16:06:43.655166" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View/android.widget.TextView[3]</msg>
<msg time="2024-10-10T16:06:43.655166" level="INFO">${name} = Nomor handphone</msg>
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:06:43.089680" elapsed="0.565486"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:06:43.656163" level="INFO">${name} = Nomor handphone</msg>
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:06:43.656163" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-10-10T16:06:43.089680" elapsed="0.566483"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:43.657160" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:43.657160" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:06:43.089680" elapsed="0.567480"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:06:42.893204" elapsed="0.763956"/>
</kw>
<status status="PASS" start="2024-10-10T16:06:42.892208" elapsed="0.764952"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:43.657160" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:43.657160" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:43.658157" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:43.658157" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:43.658157" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:43.657160" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:43.659155" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:43.658157" elapsed="0.000998"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:43.659155" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:43.660154" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:43.660154" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:43.659155" elapsed="0.000999"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:43.661152" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:43.660154" elapsed="0.000998"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:43.662148" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:43.662148" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:43.662148" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:43.661152" elapsed="0.000996"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:06:43.663145" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:06:43.663145" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:06:42.889216" elapsed="0.773929"/>
</if>
<var name="${counter}">3</var>
<status status="PASS" start="2024-10-10T16:06:42.889216" elapsed="0.773929"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:43.664143" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:43.664143" elapsed="0.000997"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:43.665140" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:43.664143" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:43.666137" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:43.666137" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:43.666137" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:43.665140" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:43.667135" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:43.666137" elapsed="0.000998"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:06:43.814436" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:06:43.669130" elapsed="0.146303"/>
</kw>
<msg time="2024-10-10T16:06:43.815433" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:06:43.669130" elapsed="0.146303"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:06:44.756957" level="INFO">Element 'xpath=(//android.view.View[@content-desc="Image"])[2]/parent::android.view.View/android.widget.TextView[4]' text is '0800-0000-001' </msg>
<msg time="2024-10-10T16:06:44.757917" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View/android.widget.TextView[4]</msg>
<msg time="2024-10-10T16:06:44.757917" level="INFO">${name} = 0800-0000-001</msg>
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:06:43.816432" elapsed="0.941485"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:06:44.757917" level="INFO">${name} = 0800-0000-001</msg>
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:06:44.757917" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-10-10T16:06:43.815433" elapsed="0.942484"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:44.758953" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:44.757917" elapsed="0.001036"/>
</branch>
<status status="PASS" start="2024-10-10T16:06:43.815433" elapsed="0.943520"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:06:43.668132" elapsed="1.090821"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:06:44.758953" level="INFO">${noTelp} = 0800-0000-001</msg>
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:06:44.758953" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-10-10T16:06:44.758953" elapsed="0.000995"/>
</kw>
<kw name="Replace String" owner="String">
<msg time="2024-10-10T16:06:44.761940" level="INFO">${replaceNumb} = 08000000001</msg>
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-10-10T16:06:44.759948" elapsed="0.001992"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:06:44.761940" level="INFO">${replaceNumb} = 08000000001</msg>
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:06:44.761940" elapsed="0.000999"/>
</kw>
<status status="PASS" start="2024-10-10T16:06:43.667135" elapsed="1.095804"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:44.762939" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:44.762939" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:44.762939" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:44.762939" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:44.763933" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:44.762939" elapsed="0.000994"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:44.763933" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:44.763933" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:44.763933" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:44.763933" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:44.764933" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:44.763933" elapsed="0.001000"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:06:44.764933" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:06:44.764933" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:06:43.664143" elapsed="1.100790"/>
</if>
<var name="${counter}">4</var>
<status status="PASS" start="2024-10-10T16:06:43.663145" elapsed="1.101788"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:44.766927" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:44.766927" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:44.766927" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:44.764933" elapsed="0.001994"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:44.767925" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:44.767925" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:44.768923" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:44.766927" elapsed="0.001996"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:44.768923" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:44.768923" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:44.769885" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:44.769885" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:44.769885" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:44.769885" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:44.769885" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:44.768923" elapsed="0.000962"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:06:44.908209" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:06:44.771915" elapsed="0.136294"/>
</kw>
<msg time="2024-10-10T16:06:44.908209" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:06:44.770883" elapsed="0.137326"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:06:45.053326" level="INFO">Element 'xpath=(//android.view.View[@content-desc="Image"])[2]/parent::android.view.View/android.widget.TextView[5]' text is 'Email' </msg>
<msg time="2024-10-10T16:06:45.054322" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View/android.widget.TextView[5]</msg>
<msg time="2024-10-10T16:06:45.079132" level="INFO">${name} = Email</msg>
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:06:44.909204" elapsed="0.169928"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:06:45.079132" level="INFO">${name} = Email</msg>
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:06:45.079132" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-10-10T16:06:44.909204" elapsed="0.169928"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:45.080130" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:45.080130" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:06:44.909204" elapsed="0.170926"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:06:44.770883" elapsed="0.309247"/>
</kw>
<status status="PASS" start="2024-10-10T16:06:44.770883" elapsed="0.309247"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:45.080130" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:45.080130" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:45.081125" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:45.080130" elapsed="0.000995"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:45.081125" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:45.081125" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:45.081125" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:45.081125" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:45.082123" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:45.081125" elapsed="0.000998"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:06:45.082123" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:06:45.082123" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:06:44.764933" elapsed="0.317190"/>
</if>
<var name="${counter}">5</var>
<status status="PASS" start="2024-10-10T16:06:44.764933" elapsed="0.317190"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:45.084119" elapsed="0.000997"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:45.085116" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:45.085116" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:45.084119" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:45.086114" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:45.087111" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:45.087111" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:45.086114" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:45.088109" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:45.087111" elapsed="0.000998"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:45.089106" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:45.090103" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:45.090103" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:45.090103" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:45.091103" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:45.088109" elapsed="0.002994"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:45.091103" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:45.091103" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:06:45.253783" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:06:45.093095" elapsed="0.160688"/>
</kw>
<msg time="2024-10-10T16:06:45.253783" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:06:45.092099" elapsed="0.161684"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:06:45.398756" level="INFO">Element 'xpath=(//android.view.View[@content-desc="Image"])[2]/parent::android.view.View/android.widget.TextView[6]' text is 'b@yopmail.com' </msg>
<msg time="2024-10-10T16:06:45.398756" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View/android.widget.TextView[6]</msg>
<msg time="2024-10-10T16:06:45.398756" level="INFO">${name} = b@yopmail.com</msg>
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:06:45.254741" elapsed="0.144015"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:06:45.399753" level="INFO">${name} = b@yopmail.com</msg>
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:06:45.399753" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-10-10T16:06:45.253783" elapsed="0.145970"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:45.399753" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:45.399753" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:06:45.253783" elapsed="0.145970"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:06:45.092099" elapsed="0.308652"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:06:45.400751" level="INFO">${email} = b@yopmail.com</msg>
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:06:45.400751" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-10-10T16:06:45.400751" elapsed="0.000998"/>
</kw>
<status status="PASS" start="2024-10-10T16:06:45.091103" elapsed="0.310646"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:45.401749" elapsed="0.000996"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:45.401749" elapsed="0.000996"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:45.402745" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:45.403776" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:45.403776" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:45.402745" elapsed="0.001031"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:06:45.403776" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:06:45.403776" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:06:45.083123" elapsed="0.320653"/>
</if>
<var name="${counter}">6</var>
<status status="PASS" start="2024-10-10T16:06:45.083123" elapsed="0.320653"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:45.404778" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:45.404778" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:45.404778" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:45.404778" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:45.405772" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:45.405772" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:45.405772" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:45.404778" elapsed="0.000994"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:45.406767" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:45.405772" elapsed="0.000995"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:45.406767" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:45.406767" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:45.406767" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:45.406767" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:45.407767" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:45.406767" elapsed="0.001000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:45.407767" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:45.407767" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:45.408762" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:45.408762" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:45.408762" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:45.407767" elapsed="0.000995"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:06:45.536913" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:06:45.410723" elapsed="0.126190"/>
</kw>
<msg time="2024-10-10T16:06:45.537911" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:06:45.409725" elapsed="0.128186"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:06:45.689287" level="INFO">Element 'xpath=(//android.view.View[@content-desc="Image"])[2]/parent::android.view.View/android.widget.TextView[7]' text is 'Project aktif' </msg>
<msg time="2024-10-10T16:06:45.689287" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View/android.widget.TextView[7]</msg>
<msg time="2024-10-10T16:06:45.690285" level="INFO">${name} = Project aktif</msg>
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:06:45.537911" elapsed="0.152374"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:06:45.691284" level="INFO">${name} = Project aktif</msg>
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:06:45.690285" elapsed="0.000999"/>
</kw>
<status status="PASS" start="2024-10-10T16:06:45.537911" elapsed="0.153373"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:45.691284" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:45.691284" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:06:45.537911" elapsed="0.153373"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:06:45.409725" elapsed="0.281559"/>
</kw>
<status status="PASS" start="2024-10-10T16:06:45.408762" elapsed="0.282522"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:45.692279" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:45.692279" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:45.692279" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:45.691284" elapsed="0.000995"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:06:45.692279" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:06:45.692279" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:06:45.404778" elapsed="0.287501"/>
</if>
<var name="${counter}">7</var>
<status status="PASS" start="2024-10-10T16:06:45.403776" elapsed="0.288503"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:45.693276" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:45.693276" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:45.694274" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:45.693276" elapsed="0.000998"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:45.694274" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:45.694274" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:45.695272" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:45.694274" elapsed="0.000998"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:45.695272" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:45.695272" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:45.696270" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:45.696270" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:45.696270" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:45.696270" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:45.696270" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:45.695272" elapsed="0.001994"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:45.697266" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:45.697266" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:45.697266" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:45.698263" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:45.698263" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:45.697266" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:45.698263" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:45.698263" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:06:45.838252" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:06:45.700259" elapsed="0.138991"/>
</kw>
<msg time="2024-10-10T16:06:45.839250" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:06:45.700259" elapsed="0.138991"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:06:45.979143" level="INFO">Element 'xpath=(//android.view.View[@content-desc="Image"])[2]/parent::android.view.View/android.widget.TextView[8]' text is '0' </msg>
<msg time="2024-10-10T16:06:45.979143" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View/android.widget.TextView[8]</msg>
<msg time="2024-10-10T16:06:45.979143" level="INFO">${name} = 0</msg>
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:06:45.839250" elapsed="0.139893"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:06:45.980141" level="INFO">${name} = 0</msg>
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:06:45.979143" elapsed="0.000998"/>
</kw>
<status status="PASS" start="2024-10-10T16:06:45.839250" elapsed="0.140891"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:45.980141" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:45.980141" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:06:45.839250" elapsed="0.140891"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:06:45.699261" elapsed="0.280880"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:06:45.981139" level="INFO">${projActive} = 0</msg>
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:06:45.981139" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-10-10T16:06:45.981139" elapsed="0.001410"/>
</kw>
<status status="PASS" start="2024-10-10T16:06:45.698263" elapsed="0.284286"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:06:45.982549" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:06:45.982549" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:06:45.693276" elapsed="0.289273"/>
</if>
<var name="${counter}">8</var>
<status status="PASS" start="2024-10-10T16:06:45.693276" elapsed="0.289273"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:45.983554" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:45.983554" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:45.983554" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:45.983554" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:45.984550" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:45.984550" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:45.984550" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:45.983554" elapsed="0.000996"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:45.985547" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:45.984550" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:45.985547" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:45.985547" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:45.986545" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:45.986545" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:45.986545" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:45.985547" elapsed="0.000998"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:45.986545" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:45.986545" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:45.987542" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:45.987542" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:45.987542" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:45.987542" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:45.988539" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:45.987542" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:06:45.989540" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:45.989540" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:06:45.989540" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:06:45.988539" elapsed="0.001001"/>
</branch>
<branch type="ELSE">
<break>
<status status="PASS" start="2024-10-10T16:06:45.989540" elapsed="0.000000"/>
</break>
<status status="PASS" start="2024-10-10T16:06:45.989540" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:06:45.983554" elapsed="0.005986"/>
</if>
<var name="${counter}">9</var>
<status status="PASS" start="2024-10-10T16:06:45.983554" elapsed="0.005986"/>
</iter>
<var>${counter}</var>
<value>1</value>
<value>${len}</value>
<status status="PASS" start="2024-10-10T16:06:40.676142" elapsed="5.314392"/>
</for>
<status status="PASS" start="2024-10-10T16:06:40.674149" elapsed="5.316385"/>
</kw>
<kw name="When user add user management" owner="userManagementPage">
<kw name="home Project" owner="loginPage">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<arg>accessibility_id=Icon Projects</arg>
<arg>timeout=10s</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:06:45.990534" elapsed="0.089711"/>
</kw>
<kw name="Element Should Be Visible" owner="AppiumLibrary">
<arg>accessibility_id=Icon Projects</arg>
<doc>Verifies that element identified with locator is visible.</doc>
<status status="PASS" start="2024-10-10T16:06:46.081279" elapsed="0.580914"/>
</kw>
<kw name="Element Should Be Visible" owner="AppiumLibrary">
<arg>accessibility_id=Notification</arg>
<doc>Verifies that element identified with locator is visible.</doc>
<status status="PASS" start="2024-10-10T16:06:46.662193" elapsed="0.100388"/>
</kw>
<kw name="Element Should Be Visible" owner="AppiumLibrary">
<arg>accessibility_id=Icon Search</arg>
<doc>Verifies that element identified with locator is visible.</doc>
<status status="PASS" start="2024-10-10T16:06:46.763578" elapsed="0.096040"/>
</kw>
<status status="PASS" start="2024-10-10T16:06:45.990534" elapsed="0.869084"/>
</kw>
<kw name="Loc Parent View" owner="generalFunction">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-10-10T16:06:46.860614" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Tambah User"]/parent::android.view.View</msg>
<var>${loc}</var>
<arg>xpath=//android.widget.TextView[@text="${text}"]/parent::android.view.View</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-10-10T16:06:46.860614" elapsed="0.000000"/>
</kw>
<return>
<value>${loc}</value>
<status status="PASS" start="2024-10-10T16:06:46.860614" elapsed="0.000000"/>
</return>
<msg time="2024-10-10T16:06:46.860614" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Tambah User"]/parent::android.view.View</msg>
<var>${loc}</var>
<arg>Tambah User</arg>
<status status="PASS" start="2024-10-10T16:06:46.859618" elapsed="0.000996"/>
</kw>
<kw name="Click Element" owner="AppiumLibrary">
<msg time="2024-10-10T16:06:46.863605" level="INFO">Clicking element 'xpath=//android.widget.TextView[@text="Tambah User"]/parent::android.view.View'.</msg>
<msg time="2024-10-10T16:06:47.837685" level="INFO">xpath criteria: //android.widget.TextView[@text="Tambah User"]/parent::android.view.View</msg>
<arg>${loc}</arg>
<doc>Click element identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:06:46.861611" elapsed="0.976074"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:06:48.018373" level="INFO">xpath criteria: //android.widget.ScrollView//following-sibling::android.widget.TextView[contains(@text, "upload file")]</msg>
<arg>${textUploadFile}</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:06:47.837685" elapsed="0.180688"/>
</kw>
<status status="PASS" start="2024-10-10T16:06:45.990534" elapsed="2.027839"/>
</kw>
<kw name="Then user input Nama user management" owner="userManagementPage">
<kw name="Generate Simple Random Name" owner="generalFunction">
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-10-10T16:06:48.019370" level="INFO">${name} = GBJYD NSDVSJHU</msg>
<var>${name}</var>
<arg>''.join(random.choices('ABCDEFGHIJKLMNOPQRSTUVWXYZ', k=5)) + ' ' + ''.join(random.choices('ABCDEFGHIJKLMNOPQRSTUVWXYZ', k=8))</arg>
<arg>modules=random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-10-10T16:06:48.019370" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:06:48.020400" level="INFO">${randomStr} = GBJYD NSDVSJHU</msg>
<arg>${randomStr}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:06:48.020400" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-10-10T16:06:48.019370" elapsed="0.001030"/>
</kw>
<kw name="Generate Random Phone Number" owner="generalFunction">
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-10-10T16:06:48.021399" level="INFO">${random_number} = 0826067566</msg>
<var>${random_number}</var>
<arg>'08' + str(random.randint(10000000, 99999999))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-10-10T16:06:48.021399" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:06:48.021399" level="INFO">${randNumber} = 0826067566</msg>
<arg>${randNumber}</arg>
<arg>${random_number}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:06:48.021399" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-10-10T16:06:48.020400" elapsed="0.001994"/>
</kw>
<kw name="Generate Random Email" owner="generalFunction">
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-10-10T16:06:48.023358" level="INFO">${name} = krmaluvd</msg>
<var>${name}</var>
<arg>''.join(random.choices('abcdefghijklmnopqrtuvwxyz', k=8))</arg>
<arg>modules=random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-10-10T16:06:48.022394" elapsed="0.000964"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-10-10T16:06:48.024354" level="INFO">${nameEmail} = krmaluvd@gmail.com</msg>
<var>${nameEmail}</var>
<arg>${name}@gmail.com</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-10-10T16:06:48.023358" elapsed="0.000996"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:06:48.024354" level="INFO">${randomEmail} = krmaluvd@gmail.com</msg>
<arg>${randomEmail}</arg>
<arg>${nameEmail}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:06:48.024354" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-10-10T16:06:48.022394" elapsed="0.002958"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:06:48.025352" level="INFO">${nameUser} = GBJYD NSDVSJHU</msg>
<arg>${nameUser}</arg>
<arg>${randomStr}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:06:48.025352" elapsed="0.000000"/>
</kw>
<kw name="input text (EditText)" owner="generalFunction">
<kw name="Loc Parent EditText" owner="generalFunction">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-10-10T16:06:48.027347" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Masukkan nama user"]/parent::android.widget.EditText</msg>
<var>${loc}</var>
<arg>xpath=//android.widget.TextView[@text="${text}"]/parent::android.widget.EditText</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-10-10T16:06:48.026352" elapsed="0.000995"/>
</kw>
<return>
<value>${loc}</value>
<status status="PASS" start="2024-10-10T16:06:48.027347" elapsed="0.000000"/>
</return>
<msg time="2024-10-10T16:06:48.027347" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Masukkan nama user"]/parent::android.widget.EditText</msg>
<var>${loc}</var>
<arg>${locEdit}</arg>
<status status="PASS" start="2024-10-10T16:06:48.026352" elapsed="0.000995"/>
</kw>
<kw name="Input Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:06:48.033330" level="INFO">Typing text 'GBJYD NSDVSJHU' into text field 'xpath=//android.widget.TextView[@text="Masukkan nama user"]/parent::android.widget.EditText'</msg>
<msg time="2024-10-10T16:06:48.169296" level="INFO">xpath criteria: //android.widget.TextView[@text="Masukkan nama user"]/parent::android.widget.EditText</msg>
<arg>${loc}</arg>
<arg>${rand_text}</arg>
<doc>Types the given `text` into text field identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:06:48.028379" elapsed="0.140917"/>
</kw>
<arg>${randomStr}</arg>
<arg>Masukkan nama user</arg>
<status status="PASS" start="2024-10-10T16:06:48.026352" elapsed="0.142944"/>
</kw>
<status status="PASS" start="2024-10-10T16:06:48.018373" elapsed="0.150923"/>
</kw>
<kw name="And user click element" owner="generalFunction">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:06:48.373135" level="INFO">xpath criteria: //android.view.View[contains(@content-desc, "Localized")]/parent::android.view.View</msg>
<arg>${element}</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:06:48.170293" elapsed="0.202842"/>
</kw>
<kw name="Click Element" owner="AppiumLibrary">
<msg time="2024-10-10T16:06:48.376162" level="INFO">Clicking element 'xpath=//android.view.View[contains(@content-desc, "Localized")]/parent::android.view.View'.</msg>
<msg time="2024-10-10T16:06:49.675797" level="INFO">xpath criteria: //android.view.View[contains(@content-desc, "Localized")]/parent::android.view.View</msg>
<arg>${element}</arg>
<doc>Click element identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:06:48.373135" elapsed="1.302662"/>
</kw>
<arg>${arrowBack}</arg>
<status status="PASS" start="2024-10-10T16:06:48.169296" elapsed="1.506501"/>
</kw>
<kw name="And click alert" owner="userManagementPage">
<kw name="alert pop up show" owner="generalFunction">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:06:50.781971" level="INFO">xpath criteria: //android.widget.ImageView</msg>
<arg>${icon}</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:06:49.678822" elapsed="1.103149"/>
</kw>
<msg time="2024-10-10T16:06:50.781971" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${icon}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:06:49.677822" elapsed="1.104149"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:06:50.852584" level="INFO">Element 'xpath=//android.widget.TextView[contains(@text, "User")]' text is 'Batal Tambah User' </msg>
<msg time="2024-10-10T16:06:50.852584" level="INFO">xpath criteria: //android.widget.TextView[contains(@text, "User")]</msg>
<msg time="2024-10-10T16:06:50.852584" level="INFO">${textTitle} = Batal Tambah User</msg>
<var>${textTitle}</var>
<arg>${alertText}</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:06:50.781971" elapsed="0.070613"/>
</kw>
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:06:50.919997" level="INFO">Element 'xpath=//android.widget.ImageView/parent::android.view.View/android.widget.TextView[2]' text is 'Data yang telah terisi tidak akan tersimpan. Apakah Anda yakin untuk batal tambah user?' </msg>
<msg time="2024-10-10T16:06:50.919997" level="INFO">xpath criteria: //android.widget.ImageView/parent::android.view.View/android.widget.TextView[2]</msg>
<msg time="2024-10-10T16:06:50.920995" level="INFO">${textDesc} = Data yang telah terisi tidak akan tersimpan. Apakah Anda yakin untuk batal tambah user?</msg>
<var>${textDesc}</var>
<arg>${descText}</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:06:50.852584" elapsed="0.068411"/>
</kw>
<kw name="click alert parent View" owner="generalFunction">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:06:50.984674" level="INFO">xpath criteria: //android.widget.TextView[contains(@text, "User")]</msg>
<arg>${locator}</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:06:50.920995" elapsed="0.063679"/>
</kw>
<kw name="Loc Parent View" owner="generalFunction">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-10-10T16:06:50.985672" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Ya"]/parent::android.view.View</msg>
<var>${loc}</var>
<arg>xpath=//android.widget.TextView[@text="${text}"]/parent::android.view.View</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-10-10T16:06:50.985672" elapsed="0.000000"/>
</kw>
<return>
<value>${loc}</value>
<status status="PASS" start="2024-10-10T16:06:50.985672" elapsed="0.000000"/>
</return>
<msg time="2024-10-10T16:06:50.985672" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Ya"]/parent::android.view.View</msg>
<var>${loc}</var>
<arg>${btn}</arg>
<status status="PASS" start="2024-10-10T16:06:50.984674" elapsed="0.000998"/>
</kw>
<kw name="Click Element" owner="AppiumLibrary">
<msg time="2024-10-10T16:06:50.988662" level="INFO">Clicking element 'xpath=//android.widget.TextView[@text="Ya"]/parent::android.view.View'.</msg>
<msg time="2024-10-10T16:06:51.804418" level="INFO">xpath criteria: //android.widget.TextView[@text="Ya"]/parent::android.view.View</msg>
<arg>${loc}</arg>
<doc>Click element identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:06:50.985672" elapsed="0.818746"/>
</kw>
<arg>${loc_btn_alert}</arg>
<arg>${btn_click}</arg>
<status status="PASS" start="2024-10-10T16:06:50.920995" elapsed="0.883423"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Title PopUp: ${textTitle}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-10-10T16:06:51.805417" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Desc PopUp: ${textDesc}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-10-10T16:06:51.806414" elapsed="0.174235"/>
</kw>
<status status="PASS" start="2024-10-10T16:06:50.781971" elapsed="1.200673"/>
</branch>
<status status="PASS" start="2024-10-10T16:06:50.781971" elapsed="1.200673"/>
</if>
<arg>${iconImg}</arg>
<arg>${alertTitle}</arg>
<arg>${descTitle}</arg>
<arg>${alertTitle}</arg>
<arg>${btn_click}</arg>
<status status="PASS" start="2024-10-10T16:06:49.677822" elapsed="2.304822"/>
</kw>
<arg>Ya</arg>
<status status="PASS" start="2024-10-10T16:06:49.676791" elapsed="2.306851"/>
</kw>
<status status="PASS" start="2024-10-10T16:06:33.042840" elapsed="18.940802"/>
</kw>
<kw name="Close App" owner="openApp" type="TEARDOWN">
<kw name="Close Application" owner="AppiumLibrary">
<doc>Closes the current application and also close webdriver session.</doc>
<status status="PASS" start="2024-10-10T16:06:51.989625" elapsed="0.395423"/>
</kw>
<status status="PASS" start="2024-10-10T16:06:51.988628" elapsed="0.396420"/>
</kw>
<doc>This scenario test User cancel Create User Management (Site/PIC)</doc>
<tag>1000s</tag>
<tag>test</tag>
<tag>user management</tag>
<status status="PASS" start="2024-10-10T16:06:24.988996" elapsed="27.396052"/>
</test>
<test id="s1-t9" name="Test Click Tidak on alert Batal Tambah User" line="50">
<kw name="Open app Dev Project" owner="openApp" type="SETUP">
<kw name="Open Application" owner="AppiumLibrary">
<arg>http://127.0.0.1:4723</arg>
<arg>platformName=${platformName}</arg>
<arg>deviceName=${udid}</arg>
<arg>appPackage=${appPackage}</arg>
<arg>appActivity=${appActivity}</arg>
<arg>automationName=UiAutomator2</arg>
<doc>Opens a new application to given Appium server.
Capabilities of appium server, Android and iOS,
Please check https://appium.io/docs/en/2.1/cli/args/
| *Option*            | *Man.* | *Description*     |
| remote_url          | Yes    | Appium server url |
| alias               | no     | alias             |
| strict_ssl          | No     | allows you to send commands to an invalid certificate host like a self-signed one. |</doc>
<status status="PASS" start="2024-10-10T16:06:52.389071" elapsed="7.847253"/>
</kw>
<status status="PASS" start="2024-10-10T16:06:52.388041" elapsed="7.849279"/>
</kw>
<kw name="Click Tidak alert Batal Tambah User" owner="userManagement">
<kw name="Given user go to User Management page" owner="userManagementPage">
<kw name="User Login" owner="loginPage">
<kw name="Given user input no handphone" owner="loginPage">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:07:02.959664" level="INFO">xpath criteria: //android.widget.TextView[@text="Login"]
xpath criteria: //android.widget.TextView[@text="Login"]</msg>
<arg>${titleLogin}</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:07:00.241310" elapsed="2.718354"/>
</kw>
<kw name="Input Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:07:02.964651" level="INFO">Typing text '088210068283' into text field 'xpath=//android.widget.EditText[1]'</msg>
<msg time="2024-10-10T16:07:03.097299" level="INFO">xpath criteria: //android.widget.EditText[1]</msg>
<arg>${inputNoHandphone}</arg>
<arg>${noHandphone}</arg>
<doc>Types the given `text` into text field identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:07:02.959664" elapsed="0.137635"/>
</kw>
<arg>${akunOP}</arg>
<status status="PASS" start="2024-10-10T16:07:00.240312" elapsed="2.857983"/>
</kw>
<kw name="When user input password" owner="loginPage">
<kw name="Input Password" owner="AppiumLibrary">
<msg time="2024-10-10T16:07:03.101319" level="INFO">Typing password into text field 'xpath=//android.widget.EditText[2]'</msg>
<msg time="2024-10-10T16:07:03.464359" level="INFO">xpath criteria: //android.widget.EditText[2]</msg>
<arg>${inputPassword}</arg>
<arg>${password}</arg>
<doc>Types the given password into text field identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:07:03.098295" elapsed="0.367063"/>
</kw>
<arg>${passwordProject}</arg>
<status status="PASS" start="2024-10-10T16:07:03.098295" elapsed="0.367063"/>
</kw>
<kw name="Then click button masuk" owner="loginPage">
<kw name="Click Element" owner="AppiumLibrary">
<msg time="2024-10-10T16:07:03.469347" level="INFO">Clicking element 'xpath=//android.view.View/android.view.View[2]'.</msg>
<msg time="2024-10-10T16:07:03.830472" level="INFO">xpath criteria: //android.view.View/android.view.View[2]</msg>
<arg>${buttonMasuk}</arg>
<doc>Click element identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:07:03.465358" elapsed="0.365114"/>
</kw>
<status status="PASS" start="2024-10-10T16:07:03.465358" elapsed="0.365114"/>
</kw>
<kw name="And home Project" owner="loginPage">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<arg>accessibility_id=Icon Projects</arg>
<arg>timeout=10s</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:07:03.831504" elapsed="2.376234"/>
</kw>
<kw name="Element Should Be Visible" owner="AppiumLibrary">
<arg>accessibility_id=Icon Projects</arg>
<doc>Verifies that element identified with locator is visible.</doc>
<status status="PASS" start="2024-10-10T16:07:06.207738" elapsed="0.442817"/>
</kw>
<kw name="Element Should Be Visible" owner="AppiumLibrary">
<arg>accessibility_id=Notification</arg>
<doc>Verifies that element identified with locator is visible.</doc>
<status status="PASS" start="2024-10-10T16:07:06.650555" elapsed="0.129795"/>
</kw>
<kw name="Element Should Be Visible" owner="AppiumLibrary">
<arg>accessibility_id=Icon Search</arg>
<doc>Verifies that element identified with locator is visible.</doc>
<status status="PASS" start="2024-10-10T16:07:06.780350" elapsed="0.132645"/>
</kw>
<status status="PASS" start="2024-10-10T16:07:03.830472" elapsed="3.082523"/>
</kw>
<status status="PASS" start="2024-10-10T16:07:00.239315" elapsed="6.673680"/>
</kw>
<kw name="Loc Parent View" owner="generalFunction">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-10-10T16:07:06.914989" level="INFO">${loc} = xpath=//android.widget.TextView[@text="User Management"]/parent::android.view.View</msg>
<var>${loc}</var>
<arg>xpath=//android.widget.TextView[@text="${text}"]/parent::android.view.View</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-10-10T16:07:06.913991" elapsed="0.000998"/>
</kw>
<return>
<value>${loc}</value>
<status status="PASS" start="2024-10-10T16:07:06.914989" elapsed="0.000000"/>
</return>
<msg time="2024-10-10T16:07:06.914989" level="INFO">${loc} = xpath=//android.widget.TextView[@text="User Management"]/parent::android.view.View</msg>
<var>${loc}</var>
<arg>User Management</arg>
<status status="PASS" start="2024-10-10T16:07:06.913991" elapsed="0.000998"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:07:07.121655" level="INFO">xpath criteria: //android.widget.TextView[@text="User Management"]/parent::android.view.View</msg>
<arg>${loc}</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:07:06.915985" elapsed="0.205670"/>
</kw>
<kw name="Click Element" owner="AppiumLibrary">
<msg time="2024-10-10T16:07:07.129632" level="INFO">Clicking element 'xpath=//android.widget.TextView[@text="User Management"]/parent::android.view.View'.</msg>
<msg time="2024-10-10T16:07:07.828061" level="INFO">xpath criteria: //android.widget.TextView[@text="User Management"]/parent::android.view.View</msg>
<arg>${loc}</arg>
<doc>Click element identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:07:07.122651" elapsed="0.705410"/>
</kw>
<status status="PASS" start="2024-10-10T16:07:00.238317" elapsed="7.589744"/>
</kw>
<kw name="And Get Detail Text User Management" owner="userManagementPage">
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-10-10T16:07:07.829092" level="INFO">${random} = 3</msg>
<var>${random}</var>
<arg>random.randint(1, 3)</arg>
<arg>modules=random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-10-10T16:07:07.829092" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:07:07.830055" level="INFO">${indexUser} = 3</msg>
<arg>${indexUser}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:07:07.830055" elapsed="0.000000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-10-10T16:07:07.830055" level="INFO">Random : 3</msg>
<arg>Random : ${random}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-10-10T16:07:07.830055" elapsed="0.000000"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-10-10T16:07:07.831090" level="INFO">Length is 103.</msg>
<msg time="2024-10-10T16:07:07.831090" level="INFO">${len} = 103</msg>
<var>${len}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-10-10T16:07:07.831090" elapsed="0.000000"/>
</kw>
<for flavor="IN RANGE">
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:07:09.580961" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[3]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[3]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[3]/parent::android.view.View</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:07:07.833085" elapsed="1.747876"/>
</kw>
<msg time="2024-10-10T16:07:09.580961" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:07:07.832083" elapsed="1.748878"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:07:09.760935" level="INFO">Element 'xpath=(//android.view.View[@content-desc="Image"])[3]/parent::android.view.View/android.widget.TextView[1]' text is 'Damon Brakus' </msg>
<msg time="2024-10-10T16:07:09.760935" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[3]/parent::android.view.View/android.widget.TextView[1]</msg>
<msg time="2024-10-10T16:07:09.760935" level="INFO">${name} = Damon Brakus</msg>
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:07:09.581957" elapsed="0.178978"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:07:09.761933" level="INFO">${name} = Damon Brakus</msg>
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:07:09.760935" elapsed="0.000998"/>
</kw>
<status status="PASS" start="2024-10-10T16:07:09.580961" elapsed="0.180972"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:09.761933" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:09.761933" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:07:09.580961" elapsed="0.180972"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:07:07.832083" elapsed="1.929850"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:07:09.762930" level="INFO">${nameUserManagement} = Damon Brakus</msg>
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:07:09.761933" elapsed="0.000997"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-10-10T16:07:09.762930" elapsed="0.001052"/>
</kw>
<status status="PASS" start="2024-10-10T16:07:07.832083" elapsed="1.931899"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:09.763982" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:09.764987" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:09.764987" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:09.763982" elapsed="0.001005"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:09.764987" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:09.764987" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:09.765983" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:09.765983" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:09.765983" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:09.765983" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:09.765983" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:09.764987" elapsed="0.000996"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:09.766980" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:09.765983" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:09.766980" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:09.766980" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:09.766980" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:09.766980" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:09.767977" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:09.767977" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:09.767977" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:09.767977" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:09.767977" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:09.767977" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:07:09.768975" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:07:09.768975" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:07:07.832083" elapsed="1.936892"/>
</if>
<var name="${counter}">1</var>
<status status="PASS" start="2024-10-10T16:07:07.831090" elapsed="1.937885"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:09.768975" elapsed="0.000997"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:09.769972" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:09.769972" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:09.768975" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:07:09.915199" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[3]/parent::android.view.View</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:07:09.770971" elapsed="0.144228"/>
</kw>
<msg time="2024-10-10T16:07:09.916196" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:07:09.770971" elapsed="0.145225"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:07:10.103828" level="INFO">Element 'xpath=(//android.view.View[@content-desc="Image"])[3]/parent::android.view.View/android.widget.TextView[2]' text is 'Consultant' </msg>
<msg time="2024-10-10T16:07:10.104828" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[3]/parent::android.view.View/android.widget.TextView[2]</msg>
<msg time="2024-10-10T16:07:10.104828" level="INFO">${name} = Consultant</msg>
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:07:09.916196" elapsed="0.188632"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:07:10.105790" level="INFO">${name} = Consultant</msg>
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:07:10.104828" elapsed="0.000962"/>
</kw>
<status status="PASS" start="2024-10-10T16:07:09.916196" elapsed="0.189594"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:10.105790" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:10.105790" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:07:09.916196" elapsed="0.189594"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:07:09.770971" elapsed="0.335817"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:07:10.106788" level="INFO">${jabatan} = Consultant</msg>
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:07:10.106788" elapsed="0.000996"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-10-10T16:07:10.107784" elapsed="0.000839"/>
</kw>
<status status="PASS" start="2024-10-10T16:07:09.769972" elapsed="0.338651"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:10.108623" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:10.108623" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:10.109628" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:10.109628" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:10.109628" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:10.109628" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:10.110625" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:10.109628" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:10.110625" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:10.110625" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:10.111621" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:10.111621" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:10.111621" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:10.110625" elapsed="0.000996"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:10.111621" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:10.111621" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:10.112618" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:10.112618" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:10.112618" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:10.111621" elapsed="0.000997"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:07:10.112618" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:07:10.112618" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:07:09.768975" elapsed="0.343643"/>
</if>
<var name="${counter}">2</var>
<status status="PASS" start="2024-10-10T16:07:09.768975" elapsed="0.343643"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:10.113616" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:10.113616" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:10.114614" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:10.113616" elapsed="0.000998"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:10.114614" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:10.114614" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:10.115611" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:10.114614" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:07:10.259192" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[3]/parent::android.view.View</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:07:10.116609" elapsed="0.142583"/>
</kw>
<msg time="2024-10-10T16:07:10.259192" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:07:10.116609" elapsed="0.142583"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:07:10.402316" level="INFO">Element 'xpath=(//android.view.View[@content-desc="Image"])[3]/parent::android.view.View/android.widget.TextView[3]' text is 'Nomor handphone' </msg>
<msg time="2024-10-10T16:07:10.402316" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[3]/parent::android.view.View/android.widget.TextView[3]</msg>
<msg time="2024-10-10T16:07:10.403314" level="INFO">${name} = Nomor handphone</msg>
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:07:10.260190" elapsed="0.143124"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:07:10.404313" level="INFO">${name} = Nomor handphone</msg>
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:07:10.403314" elapsed="0.000999"/>
</kw>
<status status="PASS" start="2024-10-10T16:07:10.259192" elapsed="0.145121"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:10.405341" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:10.404313" elapsed="0.001028"/>
</branch>
<status status="PASS" start="2024-10-10T16:07:10.259192" elapsed="0.146149"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:07:10.115611" elapsed="0.290695"/>
</kw>
<status status="PASS" start="2024-10-10T16:07:10.115611" elapsed="0.290695"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:10.406306" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:10.407304" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:10.407304" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:10.407304" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:10.408302" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:10.406306" elapsed="0.001996"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:10.409298" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:10.408302" elapsed="0.000996"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:10.409298" elapsed="0.000996"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:10.410294" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:10.411295" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:10.409298" elapsed="0.001997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:10.411295" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:10.411295" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:10.412288" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:10.412288" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:10.412288" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:10.411295" elapsed="0.000993"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:07:10.412288" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:07:10.412288" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:07:10.113616" elapsed="0.298672"/>
</if>
<var name="${counter}">3</var>
<status status="PASS" start="2024-10-10T16:07:10.113616" elapsed="0.298672"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:10.413322" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:10.413322" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:10.413322" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:10.413322" elapsed="0.000999"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:10.414321" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:10.414321" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:10.414321" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:10.414321" elapsed="0.000995"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:10.415316" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:10.415316" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:07:10.568192" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[3]/parent::android.view.View</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:07:10.416313" elapsed="0.151879"/>
</kw>
<msg time="2024-10-10T16:07:10.568192" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:07:10.416313" elapsed="0.151879"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:07:10.801647" level="INFO">Element 'xpath=(//android.view.View[@content-desc="Image"])[3]/parent::android.view.View/android.widget.TextView[4]' text is '0874-5053-6867' </msg>
<msg time="2024-10-10T16:07:10.801647" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[3]/parent::android.view.View/android.widget.TextView[4]</msg>
<msg time="2024-10-10T16:07:10.801647" level="INFO">${name} = 0874-5053-6867</msg>
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:07:10.569189" elapsed="0.232458"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:07:10.802644" level="INFO">${name} = 0874-5053-6867</msg>
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:07:10.801647" elapsed="0.000997"/>
</kw>
<status status="PASS" start="2024-10-10T16:07:10.568192" elapsed="0.234452"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:10.802644" elapsed="0.000998"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:10.802644" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-10-10T16:07:10.568192" elapsed="0.235450"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:07:10.415316" elapsed="0.388326"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:07:10.804641" level="INFO">${noTelp} = 0874-5053-6867</msg>
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:07:10.803642" elapsed="0.000999"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-10-10T16:07:10.804641" elapsed="0.000996"/>
</kw>
<kw name="Replace String" owner="String">
<msg time="2024-10-10T16:07:10.808629" level="INFO">${replaceNumb} = 087450536867</msg>
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-10-10T16:07:10.805637" elapsed="0.002992"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:07:10.809626" level="INFO">${replaceNumb} = 087450536867</msg>
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:07:10.808629" elapsed="0.000997"/>
</kw>
<status status="PASS" start="2024-10-10T16:07:10.415316" elapsed="0.394310"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:10.809626" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:10.809626" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:10.810623" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:10.810623" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:10.811620" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:10.810623" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:10.811620" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:10.811620" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:10.812618" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:10.812618" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:10.813615" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:10.812618" elapsed="0.000997"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:07:10.813615" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:07:10.813615" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:07:10.413322" elapsed="0.400293"/>
</if>
<var name="${counter}">4</var>
<status status="PASS" start="2024-10-10T16:07:10.413322" elapsed="0.400293"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:10.815613" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:10.815613" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:10.815613" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:10.814612" elapsed="0.001994"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:10.816606" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:10.817605" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:10.817605" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:10.816606" elapsed="0.000999"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:10.818602" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:10.817605" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:10.819599" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:10.819599" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:10.820596" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:10.820596" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:10.820596" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:10.818602" elapsed="0.001994"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:07:10.963821" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[3]/parent::android.view.View</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:07:10.822590" elapsed="0.141231"/>
</kw>
<msg time="2024-10-10T16:07:10.963821" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:07:10.822590" elapsed="0.141231"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:07:11.105556" level="INFO">Element 'xpath=(//android.view.View[@content-desc="Image"])[3]/parent::android.view.View/android.widget.TextView[5]' text is 'Email' </msg>
<msg time="2024-10-10T16:07:11.105556" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[3]/parent::android.view.View/android.widget.TextView[5]</msg>
<msg time="2024-10-10T16:07:11.105556" level="INFO">${name} = Email</msg>
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:07:10.964817" elapsed="0.140739"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:07:11.106554" level="INFO">${name} = Email</msg>
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:07:11.105556" elapsed="0.000998"/>
</kw>
<status status="PASS" start="2024-10-10T16:07:10.964817" elapsed="0.141737"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:11.106554" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:11.106554" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:07:10.964817" elapsed="0.141737"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:07:10.821594" elapsed="0.284960"/>
</kw>
<status status="PASS" start="2024-10-10T16:07:10.820596" elapsed="0.285958"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:11.107551" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:11.107551" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:11.107551" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:11.106554" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:11.107551" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:11.107551" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:11.108548" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:11.108548" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:11.108548" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:11.107551" elapsed="0.000997"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:07:11.108548" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:07:11.108548" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:07:10.814612" elapsed="0.293936"/>
</if>
<var name="${counter}">5</var>
<status status="PASS" start="2024-10-10T16:07:10.814612" elapsed="0.293936"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:11.109545" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:11.109545" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:11.109545" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:11.109545" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:11.110543" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:11.110543" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:11.110543" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:11.109545" elapsed="0.000998"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:11.111540" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:11.110543" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:11.111540" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:11.112539" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:11.112539" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:11.112539" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:11.112539" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:11.111540" elapsed="0.000999"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:11.113535" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:11.112539" elapsed="0.000996"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:07:11.250968" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[3]/parent::android.view.View</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:07:11.114532" elapsed="0.136436"/>
</kw>
<msg time="2024-10-10T16:07:11.250968" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:07:11.114532" elapsed="0.136436"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:07:11.437467" level="INFO">Element 'xpath=(//android.view.View[@content-desc="Image"])[3]/parent::android.view.View/android.widget.TextView[6]' text is 'Mossie27@gmail.com' </msg>
<msg time="2024-10-10T16:07:11.437467" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[3]/parent::android.view.View/android.widget.TextView[6]</msg>
<msg time="2024-10-10T16:07:11.437467" level="INFO">${name} = Mossie27@gmail.com</msg>
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:07:11.251966" elapsed="0.185501"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:07:11.438465" level="INFO">${name} = Mossie27@gmail.com</msg>
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:07:11.438465" elapsed="0.000998"/>
</kw>
<status status="PASS" start="2024-10-10T16:07:11.250968" elapsed="0.188495"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:11.439463" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:11.439463" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:07:11.250968" elapsed="0.188495"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:07:11.113535" elapsed="0.326926"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:07:11.441458" level="INFO">${email} = Mossie27@gmail.com</msg>
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:07:11.440461" elapsed="0.000997"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-10-10T16:07:11.441458" elapsed="0.000998"/>
</kw>
<status status="PASS" start="2024-10-10T16:07:11.113535" elapsed="0.328921"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:11.443455" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:11.442456" elapsed="0.000999"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:11.443455" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:11.444452" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:11.444452" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:11.443455" elapsed="0.000997"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:07:11.445448" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:07:11.444452" elapsed="0.000996"/>
</branch>
<status status="PASS" start="2024-10-10T16:07:11.109545" elapsed="0.335903"/>
</if>
<var name="${counter}">6</var>
<status status="PASS" start="2024-10-10T16:07:11.108548" elapsed="0.336900"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:11.447442" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:11.447442" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:11.447442" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:11.446445" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:11.448441" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:11.449438" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:11.449438" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:11.447442" elapsed="0.001996"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:11.450434" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:11.449438" elapsed="0.000996"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:11.451432" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:11.451432" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:11.452429" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:11.452429" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:11.452429" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:11.450434" elapsed="0.001995"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:11.453426" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:11.452429" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:11.454423" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:11.455422" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:11.455422" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:11.453426" elapsed="0.001996"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:07:11.598126" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[3]/parent::android.view.View</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:07:11.458415" elapsed="0.139711"/>
</kw>
<msg time="2024-10-10T16:07:11.598126" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:07:11.457416" elapsed="0.140710"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:07:11.745729" level="INFO">Element 'xpath=(//android.view.View[@content-desc="Image"])[3]/parent::android.view.View/android.widget.TextView[7]' text is 'Project aktif' </msg>
<msg time="2024-10-10T16:07:11.745729" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[3]/parent::android.view.View/android.widget.TextView[7]</msg>
<msg time="2024-10-10T16:07:11.745729" level="INFO">${name} = Project aktif</msg>
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:07:11.599123" elapsed="0.146606"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:07:11.746727" level="INFO">${name} = Project aktif</msg>
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:07:11.746727" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-10-10T16:07:11.598126" elapsed="0.148601"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:11.747725" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:11.746727" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-10-10T16:07:11.598126" elapsed="0.149599"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:07:11.456418" elapsed="0.291307"/>
</kw>
<status status="PASS" start="2024-10-10T16:07:11.455422" elapsed="0.292303"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:11.748722" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:11.748722" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:11.748722" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:11.747725" elapsed="0.000997"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:07:11.749719" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:07:11.748722" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-10-10T16:07:11.446445" elapsed="0.303274"/>
</if>
<var name="${counter}">7</var>
<status status="PASS" start="2024-10-10T16:07:11.445448" elapsed="0.304271"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:11.750717" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:11.750717" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:11.750717" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:11.750717" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:11.751713" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:11.751713" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:11.751713" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:11.750717" elapsed="0.000996"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:11.752711" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:11.751713" elapsed="0.000998"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:11.752711" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:11.752711" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:11.752711" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:11.753708" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:11.753708" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:11.752711" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:11.753708" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:11.753708" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:11.754706" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:11.754706" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:11.754706" elapsed="0.000998"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:11.753708" elapsed="0.001996"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:11.756701" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:11.755704" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:07:11.899320" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[3]/parent::android.view.View</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:07:11.758696" elapsed="0.140624"/>
</kw>
<msg time="2024-10-10T16:07:11.900317" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:07:11.758696" elapsed="0.141621"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:07:12.034958" level="INFO">Element 'xpath=(//android.view.View[@content-desc="Image"])[3]/parent::android.view.View/android.widget.TextView[8]' text is '0' </msg>
<msg time="2024-10-10T16:07:12.034958" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[3]/parent::android.view.View/android.widget.TextView[8]</msg>
<msg time="2024-10-10T16:07:12.034958" level="INFO">${name} = 0</msg>
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:07:11.900317" elapsed="0.134641"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:07:12.034958" level="INFO">${name} = 0</msg>
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:07:12.034958" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-10-10T16:07:11.900317" elapsed="0.135639"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:12.035956" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:12.035956" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:07:11.900317" elapsed="0.135639"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:07:11.757699" elapsed="0.278257"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:07:12.035956" level="INFO">${projActive} = 0</msg>
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:07:12.035956" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-10-10T16:07:12.036953" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-10-10T16:07:11.756701" elapsed="0.280252"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:07:12.037949" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:07:12.036953" elapsed="0.000996"/>
</branch>
<status status="PASS" start="2024-10-10T16:07:11.750717" elapsed="0.287232"/>
</if>
<var name="${counter}">8</var>
<status status="PASS" start="2024-10-10T16:07:11.749719" elapsed="0.288230"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:12.038946" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:12.039943" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:12.039943" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:12.038946" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:12.039943" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:12.039943" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:12.040940" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:12.039943" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:12.040940" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:12.040940" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:12.040940" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:12.041937" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:12.041937" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:12.041937" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:12.041937" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:12.040940" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:12.042934" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:12.041937" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:12.042934" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:12.042934" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:12.042934" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:12.042934" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:12.043932" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:12.042934" elapsed="0.000998"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:12.044934" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:12.044934" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:12.045966" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:12.043932" elapsed="0.002034"/>
</branch>
<branch type="ELSE">
<break>
<status status="PASS" start="2024-10-10T16:07:12.045966" elapsed="0.000000"/>
</break>
<status status="PASS" start="2024-10-10T16:07:12.045966" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:07:12.038946" elapsed="0.007981"/>
</if>
<var name="${counter}">9</var>
<status status="PASS" start="2024-10-10T16:07:12.038946" elapsed="0.007981"/>
</iter>
<var>${counter}</var>
<value>1</value>
<value>${len}</value>
<status status="PASS" start="2024-10-10T16:07:07.831090" elapsed="4.215837"/>
</for>
<status status="PASS" start="2024-10-10T16:07:07.829092" elapsed="4.217835"/>
</kw>
<kw name="When user add user management" owner="userManagementPage">
<kw name="home Project" owner="loginPage">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<arg>accessibility_id=Icon Projects</arg>
<arg>timeout=10s</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:07:12.047925" elapsed="0.102723"/>
</kw>
<kw name="Element Should Be Visible" owner="AppiumLibrary">
<arg>accessibility_id=Icon Projects</arg>
<doc>Verifies that element identified with locator is visible.</doc>
<status status="PASS" start="2024-10-10T16:07:12.151645" elapsed="0.090757"/>
</kw>
<kw name="Element Should Be Visible" owner="AppiumLibrary">
<arg>accessibility_id=Notification</arg>
<doc>Verifies that element identified with locator is visible.</doc>
<status status="PASS" start="2024-10-10T16:07:12.242402" elapsed="0.110706"/>
</kw>
<kw name="Element Should Be Visible" owner="AppiumLibrary">
<arg>accessibility_id=Icon Search</arg>
<doc>Verifies that element identified with locator is visible.</doc>
<status status="PASS" start="2024-10-10T16:07:12.353108" elapsed="0.101727"/>
</kw>
<status status="PASS" start="2024-10-10T16:07:12.047925" elapsed="0.406910"/>
</kw>
<kw name="Loc Parent View" owner="generalFunction">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-10-10T16:07:12.456829" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Tambah User"]/parent::android.view.View</msg>
<var>${loc}</var>
<arg>xpath=//android.widget.TextView[@text="${text}"]/parent::android.view.View</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-10-10T16:07:12.455833" elapsed="0.000996"/>
</kw>
<return>
<value>${loc}</value>
<status status="PASS" start="2024-10-10T16:07:12.456829" elapsed="0.000000"/>
</return>
<msg time="2024-10-10T16:07:12.456829" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Tambah User"]/parent::android.view.View</msg>
<var>${loc}</var>
<arg>Tambah User</arg>
<status status="PASS" start="2024-10-10T16:07:12.455833" elapsed="0.000996"/>
</kw>
<kw name="Click Element" owner="AppiumLibrary">
<msg time="2024-10-10T16:07:12.461814" level="INFO">Clicking element 'xpath=//android.widget.TextView[@text="Tambah User"]/parent::android.view.View'.</msg>
<msg time="2024-10-10T16:07:13.418705" level="INFO">xpath criteria: //android.widget.TextView[@text="Tambah User"]/parent::android.view.View</msg>
<arg>${loc}</arg>
<doc>Click element identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:07:12.456829" elapsed="0.961876"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:07:13.595834" level="INFO">xpath criteria: //android.widget.ScrollView//following-sibling::android.widget.TextView[contains(@text, "upload file")]</msg>
<arg>${textUploadFile}</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:07:13.418705" elapsed="0.178127"/>
</kw>
<status status="PASS" start="2024-10-10T16:07:12.046927" elapsed="1.549905"/>
</kw>
<kw name="Then user input Nama user management" owner="userManagementPage">
<kw name="Generate Simple Random Name" owner="generalFunction">
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-10-10T16:07:13.597828" level="INFO">${name} = QBLDB RFKDRBPG</msg>
<var>${name}</var>
<arg>''.join(random.choices('ABCDEFGHIJKLMNOPQRSTUVWXYZ', k=5)) + ' ' + ''.join(random.choices('ABCDEFGHIJKLMNOPQRSTUVWXYZ', k=8))</arg>
<arg>modules=random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-10-10T16:07:13.597828" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:07:13.598825" level="INFO">${randomStr} = QBLDB RFKDRBPG</msg>
<arg>${randomStr}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:07:13.598825" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-10-10T16:07:13.597828" elapsed="0.000997"/>
</kw>
<kw name="Generate Random Phone Number" owner="generalFunction">
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-10-10T16:07:13.599822" level="INFO">${random_number} = 0866579755</msg>
<var>${random_number}</var>
<arg>'08' + str(random.randint(10000000, 99999999))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-10-10T16:07:13.599822" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:07:13.599822" level="INFO">${randNumber} = 0866579755</msg>
<arg>${randNumber}</arg>
<arg>${random_number}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:07:13.599822" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-10-10T16:07:13.598825" elapsed="0.000997"/>
</kw>
<kw name="Generate Random Email" owner="generalFunction">
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-10-10T16:07:13.600819" level="INFO">${name} = uxvhknfp</msg>
<var>${name}</var>
<arg>''.join(random.choices('abcdefghijklmnopqrtuvwxyz', k=8))</arg>
<arg>modules=random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-10-10T16:07:13.600819" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-10-10T16:07:13.601817" level="INFO">${nameEmail} = uxvhknfp@gmail.com</msg>
<var>${nameEmail}</var>
<arg>${name}@gmail.com</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-10-10T16:07:13.600819" elapsed="0.000998"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:07:13.601817" level="INFO">${randomEmail} = uxvhknfp@gmail.com</msg>
<arg>${randomEmail}</arg>
<arg>${nameEmail}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:07:13.601817" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-10-10T16:07:13.600819" elapsed="0.001995"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:07:13.602814" level="INFO">${nameUser} = QBLDB RFKDRBPG</msg>
<arg>${nameUser}</arg>
<arg>${randomStr}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:07:13.602814" elapsed="0.000000"/>
</kw>
<kw name="input text (EditText)" owner="generalFunction">
<kw name="Loc Parent EditText" owner="generalFunction">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-10-10T16:07:13.604809" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Masukkan nama user"]/parent::android.widget.EditText</msg>
<var>${loc}</var>
<arg>xpath=//android.widget.TextView[@text="${text}"]/parent::android.widget.EditText</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-10-10T16:07:13.604809" elapsed="0.000000"/>
</kw>
<return>
<value>${loc}</value>
<status status="PASS" start="2024-10-10T16:07:13.604809" elapsed="0.000000"/>
</return>
<msg time="2024-10-10T16:07:13.605806" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Masukkan nama user"]/parent::android.widget.EditText</msg>
<var>${loc}</var>
<arg>${locEdit}</arg>
<status status="PASS" start="2024-10-10T16:07:13.603812" elapsed="0.001994"/>
</kw>
<kw name="Input Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:07:13.608797" level="INFO">Typing text 'QBLDB RFKDRBPG' into text field 'xpath=//android.widget.TextView[@text="Masukkan nama user"]/parent::android.widget.EditText'</msg>
<msg time="2024-10-10T16:07:13.745446" level="INFO">xpath criteria: //android.widget.TextView[@text="Masukkan nama user"]/parent::android.widget.EditText</msg>
<arg>${loc}</arg>
<arg>${rand_text}</arg>
<doc>Types the given `text` into text field identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:07:13.605806" elapsed="0.139640"/>
</kw>
<arg>${randomStr}</arg>
<arg>Masukkan nama user</arg>
<status status="PASS" start="2024-10-10T16:07:13.602814" elapsed="0.142632"/>
</kw>
<status status="PASS" start="2024-10-10T16:07:13.596832" elapsed="0.149575"/>
</kw>
<kw name="And user click element" owner="generalFunction">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:07:14.808229" level="INFO">xpath criteria: //android.view.View[contains(@content-desc, "Localized")]/parent::android.view.View</msg>
<arg>${element}</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:07:13.746407" elapsed="1.061822"/>
</kw>
<kw name="Click Element" owner="AppiumLibrary">
<msg time="2024-10-10T16:07:14.811257" level="INFO">Clicking element 'xpath=//android.view.View[contains(@content-desc, "Localized")]/parent::android.view.View'.</msg>
<msg time="2024-10-10T16:07:15.917409" level="INFO">xpath criteria: //android.view.View[contains(@content-desc, "Localized")]/parent::android.view.View</msg>
<arg>${element}</arg>
<doc>Click element identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:07:14.808229" elapsed="1.109180"/>
</kw>
<arg>${arrowBack}</arg>
<status status="PASS" start="2024-10-10T16:07:13.746407" elapsed="2.171002"/>
</kw>
<kw name="And click alert" owner="userManagementPage">
<kw name="alert pop up show" owner="generalFunction">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:07:16.820220" level="INFO">xpath criteria: //android.widget.ImageView</msg>
<arg>${icon}</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:07:15.919440" elapsed="0.900780"/>
</kw>
<msg time="2024-10-10T16:07:16.820220" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${icon}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:07:15.919440" elapsed="0.900780"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:07:16.890961" level="INFO">Element 'xpath=//android.widget.TextView[contains(@text, "User")]' text is 'Batal Tambah User' </msg>
<msg time="2024-10-10T16:07:16.890961" level="INFO">xpath criteria: //android.widget.TextView[contains(@text, "User")]</msg>
<msg time="2024-10-10T16:07:16.890961" level="INFO">${textTitle} = Batal Tambah User</msg>
<var>${textTitle}</var>
<arg>${alertText}</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:07:16.820220" elapsed="0.070741"/>
</kw>
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:07:16.958495" level="INFO">Element 'xpath=//android.widget.ImageView/parent::android.view.View/android.widget.TextView[2]' text is 'Data yang telah terisi tidak akan tersimpan. Apakah Anda yakin untuk batal tambah user?' </msg>
<msg time="2024-10-10T16:07:16.958495" level="INFO">xpath criteria: //android.widget.ImageView/parent::android.view.View/android.widget.TextView[2]</msg>
<msg time="2024-10-10T16:07:16.958495" level="INFO">${textDesc} = Data yang telah terisi tidak akan tersimpan. Apakah Anda yakin untuk batal tambah user?</msg>
<var>${textDesc}</var>
<arg>${descText}</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:07:16.890961" elapsed="0.067534"/>
</kw>
<kw name="click alert parent View" owner="generalFunction">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:07:17.024646" level="INFO">xpath criteria: //android.widget.TextView[contains(@text, "User")]</msg>
<arg>${locator}</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:07:16.959493" elapsed="0.065153"/>
</kw>
<kw name="Loc Parent View" owner="generalFunction">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-10-10T16:07:17.025645" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Tidak"]/parent::android.view.View</msg>
<var>${loc}</var>
<arg>xpath=//android.widget.TextView[@text="${text}"]/parent::android.view.View</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-10-10T16:07:17.025645" elapsed="0.000000"/>
</kw>
<return>
<value>${loc}</value>
<status status="PASS" start="2024-10-10T16:07:17.025645" elapsed="0.000000"/>
</return>
<msg time="2024-10-10T16:07:17.025645" level="INFO">${loc} = xpath=//android.widget.TextView[@text="Tidak"]/parent::android.view.View</msg>
<var>${loc}</var>
<arg>${btn}</arg>
<status status="PASS" start="2024-10-10T16:07:17.024646" elapsed="0.000999"/>
</kw>
<kw name="Click Element" owner="AppiumLibrary">
<msg time="2024-10-10T16:07:17.029634" level="INFO">Clicking element 'xpath=//android.widget.TextView[@text="Tidak"]/parent::android.view.View'.</msg>
<msg time="2024-10-10T16:07:17.657918" level="INFO">xpath criteria: //android.widget.TextView[@text="Tidak"]/parent::android.view.View</msg>
<arg>${loc}</arg>
<doc>Click element identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:07:17.025645" elapsed="0.632273"/>
</kw>
<arg>${loc_btn_alert}</arg>
<arg>${btn_click}</arg>
<status status="PASS" start="2024-10-10T16:07:16.958495" elapsed="0.699423"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Title PopUp: ${textTitle}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-10-10T16:07:17.657918" elapsed="0.001037"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Desc PopUp: ${textDesc}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-10-10T16:07:17.658955" elapsed="0.000906"/>
</kw>
<status status="PASS" start="2024-10-10T16:07:16.820220" elapsed="0.839641"/>
</branch>
<status status="PASS" start="2024-10-10T16:07:16.820220" elapsed="0.839641"/>
</if>
<arg>${iconImg}</arg>
<arg>${alertTitle}</arg>
<arg>${descTitle}</arg>
<arg>${alertTitle}</arg>
<arg>${btn_click}</arg>
<status status="PASS" start="2024-10-10T16:07:15.918405" elapsed="1.741456"/>
</kw>
<arg>Tidak</arg>
<status status="PASS" start="2024-10-10T16:07:15.918405" elapsed="1.741456"/>
</kw>
<status status="PASS" start="2024-10-10T16:07:00.238317" elapsed="17.421544"/>
</kw>
<kw name="Close App" owner="openApp" type="TEARDOWN">
<kw name="Close Application" owner="AppiumLibrary">
<doc>Closes the current application and also close webdriver session.</doc>
<status status="PASS" start="2024-10-10T16:07:17.660622" elapsed="0.421221"/>
</kw>
<status status="PASS" start="2024-10-10T16:07:17.660622" elapsed="0.421221"/>
</kw>
<doc>This scenario test User click Tidak alert Batal tambah user</doc>
<tag>1000s</tag>
<tag>test</tag>
<tag>user management</tag>
<status status="PASS" start="2024-10-10T16:06:52.387045" elapsed="25.694798"/>
</test>
<test id="s1-t10" name="Test Search User Management not found" line="55">
<kw name="Open app Dev Project" owner="openApp" type="SETUP">
<kw name="Open Application" owner="AppiumLibrary">
<arg>http://127.0.0.1:4723</arg>
<arg>platformName=${platformName}</arg>
<arg>deviceName=${udid}</arg>
<arg>appPackage=${appPackage}</arg>
<arg>appActivity=${appActivity}</arg>
<arg>automationName=UiAutomator2</arg>
<doc>Opens a new application to given Appium server.
Capabilities of appium server, Android and iOS,
Please check https://appium.io/docs/en/2.1/cli/args/
| *Option*            | *Man.* | *Description*     |
| remote_url          | Yes    | Appium server url |
| alias               | no     | alias             |
| strict_ssl          | No     | allows you to send commands to an invalid certificate host like a self-signed one. |</doc>
<status status="PASS" start="2024-10-10T16:07:18.084834" elapsed="7.910794"/>
</kw>
<status status="PASS" start="2024-10-10T16:07:18.083841" elapsed="7.911787"/>
</kw>
<kw name="User search Data Tidak ditemukan User Management" owner="userManagement">
<kw name="Given user go to User Management page" owner="userManagementPage">
<kw name="User Login" owner="loginPage">
<kw name="Given user input no handphone" owner="loginPage">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:07:27.957593" level="INFO">xpath criteria: //android.widget.TextView[@text="Login"]</msg>
<arg>${titleLogin}</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:07:25.997162" elapsed="1.960431"/>
</kw>
<kw name="Input Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:07:27.960615" level="INFO">Typing text '088210068283' into text field 'xpath=//android.widget.EditText[1]'</msg>
<msg time="2024-10-10T16:07:28.127296" level="INFO">xpath criteria: //android.widget.EditText[1]</msg>
<arg>${inputNoHandphone}</arg>
<arg>${noHandphone}</arg>
<doc>Types the given `text` into text field identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:07:27.957593" elapsed="0.169703"/>
</kw>
<arg>${akunOP}</arg>
<status status="PASS" start="2024-10-10T16:07:25.997162" elapsed="2.130134"/>
</kw>
<kw name="When user input password" owner="loginPage">
<kw name="Input Password" owner="AppiumLibrary">
<msg time="2024-10-10T16:07:28.131319" level="INFO">Typing password into text field 'xpath=//android.widget.EditText[2]'</msg>
<msg time="2024-10-10T16:07:28.515266" level="INFO">xpath criteria: //android.widget.EditText[2]</msg>
<arg>${inputPassword}</arg>
<arg>${password}</arg>
<doc>Types the given password into text field identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:07:28.128329" elapsed="0.386937"/>
</kw>
<arg>${passwordProject}</arg>
<status status="PASS" start="2024-10-10T16:07:28.127296" elapsed="0.387970"/>
</kw>
<kw name="Then click button masuk" owner="loginPage">
<kw name="Click Element" owner="AppiumLibrary">
<msg time="2024-10-10T16:07:28.519256" level="INFO">Clicking element 'xpath=//android.view.View/android.view.View[2]'.</msg>
<msg time="2024-10-10T16:07:28.892425" level="INFO">xpath criteria: //android.view.View/android.view.View[2]</msg>
<arg>${buttonMasuk}</arg>
<doc>Click element identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:07:28.516297" elapsed="0.376128"/>
</kw>
<status status="PASS" start="2024-10-10T16:07:28.515266" elapsed="0.377159"/>
</kw>
<kw name="And home Project" owner="loginPage">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<arg>accessibility_id=Icon Projects</arg>
<arg>timeout=10s</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:07:28.893425" elapsed="2.748050"/>
</kw>
<kw name="Element Should Be Visible" owner="AppiumLibrary">
<arg>accessibility_id=Icon Projects</arg>
<doc>Verifies that element identified with locator is visible.</doc>
<status status="PASS" start="2024-10-10T16:07:31.641475" elapsed="0.362953"/>
</kw>
<kw name="Element Should Be Visible" owner="AppiumLibrary">
<arg>accessibility_id=Notification</arg>
<doc>Verifies that element identified with locator is visible.</doc>
<status status="PASS" start="2024-10-10T16:07:32.004428" elapsed="0.139502"/>
</kw>
<kw name="Element Should Be Visible" owner="AppiumLibrary">
<arg>accessibility_id=Icon Search</arg>
<doc>Verifies that element identified with locator is visible.</doc>
<status status="PASS" start="2024-10-10T16:07:32.143930" elapsed="0.124420"/>
</kw>
<status status="PASS" start="2024-10-10T16:07:28.893425" elapsed="3.374925"/>
</kw>
<status status="PASS" start="2024-10-10T16:07:25.997162" elapsed="6.271188"/>
</kw>
<kw name="Loc Parent View" owner="generalFunction">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-10-10T16:07:32.269348" level="INFO">${loc} = xpath=//android.widget.TextView[@text="User Management"]/parent::android.view.View</msg>
<var>${loc}</var>
<arg>xpath=//android.widget.TextView[@text="${text}"]/parent::android.view.View</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-10-10T16:07:32.269348" elapsed="0.000000"/>
</kw>
<return>
<value>${loc}</value>
<status status="PASS" start="2024-10-10T16:07:32.269348" elapsed="0.000000"/>
</return>
<msg time="2024-10-10T16:07:32.270344" level="INFO">${loc} = xpath=//android.widget.TextView[@text="User Management"]/parent::android.view.View</msg>
<var>${loc}</var>
<arg>User Management</arg>
<status status="PASS" start="2024-10-10T16:07:32.269348" elapsed="0.000996"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:07:32.471470" level="INFO">xpath criteria: //android.widget.TextView[@text="User Management"]/parent::android.view.View</msg>
<arg>${loc}</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:07:32.270344" elapsed="0.201126"/>
</kw>
<kw name="Click Element" owner="AppiumLibrary">
<msg time="2024-10-10T16:07:32.474462" level="INFO">Clicking element 'xpath=//android.widget.TextView[@text="User Management"]/parent::android.view.View'.</msg>
<msg time="2024-10-10T16:07:32.713277" level="INFO">xpath criteria: //android.widget.TextView[@text="User Management"]/parent::android.view.View</msg>
<arg>${loc}</arg>
<doc>Click element identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:07:32.471470" elapsed="0.241807"/>
</kw>
<status status="PASS" start="2024-10-10T16:07:25.997162" elapsed="6.716115"/>
</kw>
<kw name="When search User Management" owner="userManagementPage">
<kw name="Generate Simple Random Name" owner="generalFunction">
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-10-10T16:07:32.715304" level="INFO">${name} = ZSPBT VQFFQYUE</msg>
<var>${name}</var>
<arg>''.join(random.choices('ABCDEFGHIJKLMNOPQRSTUVWXYZ', k=5)) + ' ' + ''.join(random.choices('ABCDEFGHIJKLMNOPQRSTUVWXYZ', k=8))</arg>
<arg>modules=random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-10-10T16:07:32.714274" elapsed="0.001030"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:07:32.715304" level="INFO">${randomStr} = ZSPBT VQFFQYUE</msg>
<arg>${randomStr}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:07:32.715304" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-10-10T16:07:32.714274" elapsed="0.001030"/>
</kw>
<kw name="user click element" owner="generalFunction">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:07:33.163282" level="INFO">xpath criteria: //android.widget.TextView[@text="Cari nama user"]/parent::android.widget.EditText</msg>
<arg>${element}</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:07:32.716302" elapsed="0.446980"/>
</kw>
<kw name="Click Element" owner="AppiumLibrary">
<msg time="2024-10-10T16:07:33.166307" level="INFO">Clicking element 'xpath=//android.widget.TextView[@text="Cari nama user"]/parent::android.widget.EditText'.</msg>
<msg time="2024-10-10T16:07:33.520466" level="INFO">xpath criteria: //android.widget.TextView[@text="Cari nama user"]/parent::android.widget.EditText</msg>
<arg>${element}</arg>
<doc>Click element identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:07:33.163282" elapsed="0.357184"/>
</kw>
<arg>${searchField}</arg>
<status status="PASS" start="2024-10-10T16:07:32.716302" elapsed="0.804164"/>
</kw>
<kw name="Input Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:07:33.523489" level="INFO">Typing text 'QBLDB RFKDRBPG' into text field 'xpath=//android.widget.TextView[@text="Cari nama user"]/parent::android.widget.EditText'</msg>
<msg time="2024-10-10T16:07:34.583699" level="INFO">xpath criteria: //android.widget.TextView[@text="Cari nama user"]/parent::android.widget.EditText</msg>
<arg>${searchField}</arg>
<arg>${text}</arg>
<doc>Types the given `text` into text field identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:07:33.520466" elapsed="1.063233"/>
</kw>
<kw name="Press Keycode" owner="AppiumLibrary">
<arg>66</arg>
<doc>Sends a press of keycode to the device.</doc>
<status status="PASS" start="2024-10-10T16:07:34.583699" elapsed="0.084052"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:07:35.800561" level="INFO">xpath criteria: //android.view.View[2]/android.widget.ImageView
xpath criteria: //android.view.View[2]/android.widget.ImageView
xpath criteria: //android.view.View[2]/android.widget.ImageView</msg>
<arg>${result}</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:07:34.667751" elapsed="1.133806"/>
</kw>
<arg>${randomStr}</arg>
<arg>${dataNotFound}</arg>
<status status="PASS" start="2024-10-10T16:07:32.713277" elapsed="3.088280"/>
</kw>
<kw name="Then Element Should Be Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:07:35.881956" level="INFO">xpath criteria: //android.view.View[2]/android.widget.ImageView</msg>
<arg>${dataNotFound}</arg>
<doc>Verifies that element identified with locator is visible.</doc>
<status status="PASS" start="2024-10-10T16:07:35.801557" elapsed="0.080399"/>
</kw>
<status status="PASS" start="2024-10-10T16:07:25.996157" elapsed="9.886797"/>
</kw>
<kw name="Close App" owner="openApp" type="TEARDOWN">
<kw name="Close Application" owner="AppiumLibrary">
<doc>Closes the current application and also close webdriver session.</doc>
<status status="PASS" start="2024-10-10T16:07:35.883951" elapsed="0.408538"/>
</kw>
<status status="PASS" start="2024-10-10T16:07:35.882954" elapsed="0.409535"/>
</kw>
<doc>This scenario test User search User Management (Site/PIC) not found</doc>
<tag>1000s</tag>
<tag>test</tag>
<tag>user management</tag>
<status status="PASS" start="2024-10-10T16:07:18.083841" elapsed="18.209646"/>
</test>
<test id="s1-t11" name="Test Search Name User Management" line="60">
<kw name="Open app Dev Project" owner="openApp" type="SETUP">
<kw name="Open Application" owner="AppiumLibrary">
<arg>http://127.0.0.1:4723</arg>
<arg>platformName=${platformName}</arg>
<arg>deviceName=${udid}</arg>
<arg>appPackage=${appPackage}</arg>
<arg>appActivity=${appActivity}</arg>
<arg>automationName=UiAutomator2</arg>
<doc>Opens a new application to given Appium server.
Capabilities of appium server, Android and iOS,
Please check https://appium.io/docs/en/2.1/cli/args/
| *Option*            | *Man.* | *Description*     |
| remote_url          | Yes    | Appium server url |
| alias               | no     | alias             |
| strict_ssl          | No     | allows you to send commands to an invalid certificate host like a self-signed one. |</doc>
<status status="PASS" start="2024-10-10T16:07:36.297475" elapsed="7.008988"/>
</kw>
<status status="PASS" start="2024-10-10T16:07:36.296479" elapsed="7.009984"/>
</kw>
<kw name="User search user management by Name" owner="userManagement">
<kw name="Given user go to User Management page" owner="userManagementPage">
<kw name="User Login" owner="loginPage">
<kw name="Given user input no handphone" owner="loginPage">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:07:45.974211" level="INFO">xpath criteria: //android.widget.TextView[@text="Login"]</msg>
<arg>${titleLogin}</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:07:43.309494" elapsed="2.664717"/>
</kw>
<kw name="Input Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:07:45.978201" level="INFO">Typing text '088210068283' into text field 'xpath=//android.widget.EditText[1]'</msg>
<msg time="2024-10-10T16:07:46.136991" level="INFO">xpath criteria: //android.widget.EditText[1]</msg>
<arg>${inputNoHandphone}</arg>
<arg>${noHandphone}</arg>
<doc>Types the given `text` into text field identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:07:45.974211" elapsed="0.162780"/>
</kw>
<arg>${akunOP}</arg>
<status status="PASS" start="2024-10-10T16:07:43.308460" elapsed="2.829529"/>
</kw>
<kw name="When user input password" owner="loginPage">
<kw name="Input Password" owner="AppiumLibrary">
<msg time="2024-10-10T16:07:46.141016" level="INFO">Typing password into text field 'xpath=//android.widget.EditText[2]'</msg>
<msg time="2024-10-10T16:07:46.352011" level="INFO">xpath criteria: //android.widget.EditText[2]</msg>
<arg>${inputPassword}</arg>
<arg>${password}</arg>
<doc>Types the given password into text field identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:07:46.139021" elapsed="0.212990"/>
</kw>
<arg>${passwordProject}</arg>
<status status="PASS" start="2024-10-10T16:07:46.137989" elapsed="0.214022"/>
</kw>
<kw name="Then click button masuk" owner="loginPage">
<kw name="Click Element" owner="AppiumLibrary">
<msg time="2024-10-10T16:07:46.356000" level="INFO">Clicking element 'xpath=//android.view.View/android.view.View[2]'.</msg>
<msg time="2024-10-10T16:07:48.431980" level="INFO">xpath criteria: //android.view.View/android.view.View[2]</msg>
<arg>${buttonMasuk}</arg>
<doc>Click element identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:07:46.352011" elapsed="2.079969"/>
</kw>
<status status="PASS" start="2024-10-10T16:07:46.352011" elapsed="2.079969"/>
</kw>
<kw name="And home Project" owner="loginPage">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<arg>accessibility_id=Icon Projects</arg>
<arg>timeout=10s</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:07:48.432977" elapsed="1.096494"/>
</kw>
<kw name="Element Should Be Visible" owner="AppiumLibrary">
<arg>accessibility_id=Icon Projects</arg>
<doc>Verifies that element identified with locator is visible.</doc>
<status status="PASS" start="2024-10-10T16:07:49.529471" elapsed="0.167554"/>
</kw>
<kw name="Element Should Be Visible" owner="AppiumLibrary">
<arg>accessibility_id=Notification</arg>
<doc>Verifies that element identified with locator is visible.</doc>
<status status="PASS" start="2024-10-10T16:07:49.697025" elapsed="0.167511"/>
</kw>
<kw name="Element Should Be Visible" owner="AppiumLibrary">
<arg>accessibility_id=Icon Search</arg>
<doc>Verifies that element identified with locator is visible.</doc>
<status status="PASS" start="2024-10-10T16:07:49.864536" elapsed="0.167679"/>
</kw>
<status status="PASS" start="2024-10-10T16:07:48.431980" elapsed="1.600235"/>
</kw>
<status status="PASS" start="2024-10-10T16:07:43.308460" elapsed="6.723755"/>
</kw>
<kw name="Loc Parent View" owner="generalFunction">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-10-10T16:07:50.034210" level="INFO">${loc} = xpath=//android.widget.TextView[@text="User Management"]/parent::android.view.View</msg>
<var>${loc}</var>
<arg>xpath=//android.widget.TextView[@text="${text}"]/parent::android.view.View</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-10-10T16:07:50.033212" elapsed="0.000998"/>
</kw>
<return>
<value>${loc}</value>
<status status="PASS" start="2024-10-10T16:07:50.034210" elapsed="0.000000"/>
</return>
<msg time="2024-10-10T16:07:50.034210" level="INFO">${loc} = xpath=//android.widget.TextView[@text="User Management"]/parent::android.view.View</msg>
<var>${loc}</var>
<arg>User Management</arg>
<status status="PASS" start="2024-10-10T16:07:50.033212" elapsed="0.000998"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:07:50.314459" level="INFO">xpath criteria: //android.widget.TextView[@text="User Management"]/parent::android.view.View</msg>
<arg>${loc}</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:07:50.035208" elapsed="0.279251"/>
</kw>
<kw name="Click Element" owner="AppiumLibrary">
<msg time="2024-10-10T16:07:50.319444" level="INFO">Clicking element 'xpath=//android.widget.TextView[@text="User Management"]/parent::android.view.View'.</msg>
<msg time="2024-10-10T16:07:50.547881" level="INFO">xpath criteria: //android.widget.TextView[@text="User Management"]/parent::android.view.View</msg>
<arg>${loc}</arg>
<doc>Click element identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:07:50.314459" elapsed="0.234417"/>
</kw>
<status status="PASS" start="2024-10-10T16:07:43.307463" elapsed="7.241413"/>
</kw>
<kw name="And Get Detail Text User Management" owner="userManagementPage">
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-10-10T16:07:50.549876" level="INFO">${random} = 2</msg>
<var>${random}</var>
<arg>random.randint(1, 3)</arg>
<arg>modules=random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-10-10T16:07:50.549876" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:07:50.550880" level="INFO">${indexUser} = 2</msg>
<arg>${indexUser}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:07:50.550880" elapsed="0.000000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-10-10T16:07:50.550880" level="INFO">Random : 2</msg>
<arg>Random : ${random}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-10-10T16:07:50.550880" elapsed="0.000000"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-10-10T16:07:50.551870" level="INFO">Length is 103.</msg>
<msg time="2024-10-10T16:07:50.551870" level="INFO">${len} = 103</msg>
<var>${len}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-10-10T16:07:50.551870" elapsed="0.000000"/>
</kw>
<for flavor="IN RANGE">
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:07:51.924716" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:07:50.553865" elapsed="1.371848"/>
</kw>
<msg time="2024-10-10T16:07:51.925713" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:07:50.552867" elapsed="1.372846"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:07:52.085605" level="INFO">Element 'xpath=(//android.view.View[@content-desc="Image"])[2]/parent::android.view.View/android.widget.TextView[1]' text is 'CaZz' </msg>
<msg time="2024-10-10T16:07:52.085605" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View/android.widget.TextView[1]</msg>
<msg time="2024-10-10T16:07:52.085605" level="INFO">${name} = CaZz</msg>
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:07:51.925713" elapsed="0.159892"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:07:52.086603" level="INFO">${name} = CaZz</msg>
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:07:52.085605" elapsed="0.000998"/>
</kw>
<status status="PASS" start="2024-10-10T16:07:51.925713" elapsed="0.160890"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:52.086603" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:52.086603" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:07:51.925713" elapsed="0.160890"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:07:50.552867" elapsed="1.533736"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:07:52.087601" level="INFO">${nameUserManagement} = CaZz</msg>
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:07:52.087601" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-10-10T16:07:52.088599" elapsed="0.000508"/>
</kw>
<status status="PASS" start="2024-10-10T16:07:50.552867" elapsed="1.536240"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:52.089107" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:52.089107" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:52.090112" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:52.089107" elapsed="0.001005"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:52.090112" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:52.090112" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:52.091109" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:52.091109" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:52.091109" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:52.091109" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:52.092103" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:52.090112" elapsed="0.001991"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:52.092103" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:52.092103" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:52.093101" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:52.093101" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:52.093101" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:52.093101" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:52.094099" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:52.093101" elapsed="0.000998"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:52.094099" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:52.094099" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:52.095095" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:52.094099" elapsed="0.000996"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:07:52.095095" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:07:52.095095" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:07:50.552867" elapsed="1.542228"/>
</if>
<var name="${counter}">1</var>
<status status="PASS" start="2024-10-10T16:07:50.552867" elapsed="1.542228"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:52.096092" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:52.097092" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:52.097092" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:52.096092" elapsed="0.001000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:07:52.248275" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:07:52.098123" elapsed="0.150152"/>
</kw>
<msg time="2024-10-10T16:07:52.248275" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:07:52.098123" elapsed="0.150152"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:07:52.395880" level="INFO">Element 'xpath=(//android.view.View[@content-desc="Image"])[2]/parent::android.view.View/android.widget.TextView[2]' text is 'a' </msg>
<msg time="2024-10-10T16:07:52.395880" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View/android.widget.TextView[2]</msg>
<msg time="2024-10-10T16:07:52.395880" level="INFO">${name} = a</msg>
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:07:52.249270" elapsed="0.146610"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:07:52.396878" level="INFO">${name} = a</msg>
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:07:52.396878" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-10-10T16:07:52.248275" elapsed="0.148603"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:52.396878" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:52.396878" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:07:52.248275" elapsed="0.148603"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:07:52.097092" elapsed="0.299786"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:07:52.397875" level="INFO">${jabatan} = a</msg>
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:07:52.396878" elapsed="0.000997"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-10-10T16:07:52.397875" elapsed="0.001001"/>
</kw>
<status status="PASS" start="2024-10-10T16:07:52.097092" elapsed="0.301784"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:52.399882" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:52.398876" elapsed="0.001006"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:52.400868" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:52.400868" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:52.401865" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:52.401865" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:52.401865" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:52.399882" elapsed="0.001983"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:52.402865" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:52.401865" elapsed="0.001000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:52.402865" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:52.403860" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:52.403860" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:52.402865" elapsed="0.000995"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:52.403860" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:52.403860" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:52.404856" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:52.404856" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:52.404856" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:52.403860" elapsed="0.000996"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:07:52.404856" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:07:52.404856" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:07:52.096092" elapsed="0.308764"/>
</if>
<var name="${counter}">2</var>
<status status="PASS" start="2024-10-10T16:07:52.096092" elapsed="0.308764"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:52.405854" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:52.406852" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:52.406852" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:52.405854" elapsed="0.000998"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:52.406852" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:52.406852" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:52.407849" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:52.406852" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:07:52.553914" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:07:52.408846" elapsed="0.146062"/>
</kw>
<msg time="2024-10-10T16:07:52.554908" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:07:52.407849" elapsed="0.147059"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:07:52.700064" level="INFO">Element 'xpath=(//android.view.View[@content-desc="Image"])[2]/parent::android.view.View/android.widget.TextView[3]' text is 'Nomor handphone' </msg>
<msg time="2024-10-10T16:07:52.700064" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View/android.widget.TextView[3]</msg>
<msg time="2024-10-10T16:07:52.700064" level="INFO">${name} = Nomor handphone</msg>
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:07:52.554908" elapsed="0.145156"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:07:52.701060" level="INFO">${name} = Nomor handphone</msg>
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:07:52.701060" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-10-10T16:07:52.554908" elapsed="0.147150"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:52.702058" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:52.702058" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:07:52.554908" elapsed="0.147150"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:07:52.407849" elapsed="0.294209"/>
</kw>
<status status="PASS" start="2024-10-10T16:07:52.407849" elapsed="0.294209"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:52.703054" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:52.703054" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:52.703054" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:52.703054" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:52.703054" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:52.702058" elapsed="0.001993"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:52.704051" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:52.704051" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:52.704051" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:52.704051" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:52.704051" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:52.704051" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:52.705048" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:52.705048" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:52.705048" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:52.705048" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:52.705048" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:52.705048" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:07:52.706046" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:07:52.706046" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:07:52.405854" elapsed="0.300192"/>
</if>
<var name="${counter}">3</var>
<status status="PASS" start="2024-10-10T16:07:52.405854" elapsed="0.300192"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:52.707044" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:52.707044" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:52.707044" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:52.706046" elapsed="0.000998"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:52.708040" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:52.708040" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:52.709037" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:52.707044" elapsed="0.001993"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:52.709037" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:52.709037" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:07:52.880359" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:07:52.710035" elapsed="0.170324"/>
</kw>
<msg time="2024-10-10T16:07:52.880359" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:07:52.710035" elapsed="0.170324"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:07:53.025361" level="INFO">Element 'xpath=(//android.view.View[@content-desc="Image"])[2]/parent::android.view.View/android.widget.TextView[4]' text is '0800-0000-001' </msg>
<msg time="2024-10-10T16:07:53.025361" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View/android.widget.TextView[4]</msg>
<msg time="2024-10-10T16:07:53.025361" level="INFO">${name} = 0800-0000-001</msg>
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:07:52.881393" elapsed="0.143968"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:07:53.025361" level="INFO">${name} = 0800-0000-001</msg>
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:07:53.025361" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-10-10T16:07:52.880359" elapsed="0.145002"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:53.026359" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:53.026359" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:07:52.880359" elapsed="0.146000"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:07:52.710035" elapsed="0.316324"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:07:53.027358" level="INFO">${noTelp} = 0800-0000-001</msg>
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:07:53.026359" elapsed="0.000999"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-10-10T16:07:53.027358" elapsed="0.001259"/>
</kw>
<kw name="Replace String" owner="String">
<msg time="2024-10-10T16:07:53.029621" level="INFO">${replaceNumb} = 08000000001</msg>
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-10-10T16:07:53.028617" elapsed="0.001004"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:07:53.030617" level="INFO">${replaceNumb} = 08000000001</msg>
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:07:53.029621" elapsed="0.000996"/>
</kw>
<status status="PASS" start="2024-10-10T16:07:52.709037" elapsed="0.321580"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:53.030617" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:53.030617" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:53.031615" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:53.031615" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:53.031615" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:53.030617" elapsed="0.000998"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:53.032610" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:53.031615" elapsed="0.000995"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:53.032610" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:53.032610" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:53.032610" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:53.032610" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:07:53.032610" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:07:53.032610" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:07:52.706046" elapsed="0.327560"/>
</if>
<var name="${counter}">4</var>
<status status="PASS" start="2024-10-10T16:07:52.706046" elapsed="0.327560"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:53.034606" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:53.034606" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:53.034606" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:53.033606" elapsed="0.001000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:53.035603" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:53.035603" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:53.035603" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:53.034606" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:53.036600" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:53.035603" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:53.036600" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:53.036600" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:53.037596" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:53.037596" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:53.037596" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:53.036600" elapsed="0.000996"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:07:53.179799" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:07:53.038593" elapsed="0.142201"/>
</kw>
<msg time="2024-10-10T16:07:53.180794" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:07:53.038593" elapsed="0.142201"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:07:53.323266" level="INFO">Element 'xpath=(//android.view.View[@content-desc="Image"])[2]/parent::android.view.View/android.widget.TextView[5]' text is 'Email' </msg>
<msg time="2024-10-10T16:07:53.323266" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View/android.widget.TextView[5]</msg>
<msg time="2024-10-10T16:07:53.323266" level="INFO">${name} = Email</msg>
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:07:53.180794" elapsed="0.142472"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:07:53.324271" level="INFO">${name} = Email</msg>
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:07:53.323266" elapsed="0.001005"/>
</kw>
<status status="PASS" start="2024-10-10T16:07:53.180794" elapsed="0.143477"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:53.324271" elapsed="0.000955"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:53.324271" elapsed="0.000955"/>
</branch>
<status status="PASS" start="2024-10-10T16:07:53.180794" elapsed="0.144432"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:07:53.037596" elapsed="0.287630"/>
</kw>
<status status="PASS" start="2024-10-10T16:07:53.037596" elapsed="0.287630"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:53.325226" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:53.325226" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:53.325226" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:53.325226" elapsed="0.001033"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:53.326259" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:53.326259" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:53.326259" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:53.326259" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:53.326259" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:53.326259" elapsed="0.000998"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:07:53.327257" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:07:53.327257" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:07:53.033606" elapsed="0.293651"/>
</if>
<var name="${counter}">5</var>
<status status="PASS" start="2024-10-10T16:07:53.033606" elapsed="0.293651"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:53.328253" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:53.328253" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:53.328253" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:53.327257" elapsed="0.000996"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:53.328253" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:53.328253" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:53.329251" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:53.328253" elapsed="0.000998"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:53.329251" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:53.329251" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:53.330250" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:53.330250" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:53.330250" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:53.330250" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:53.331210" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:53.329251" elapsed="0.001959"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:53.332209" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:53.331210" elapsed="0.000999"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:07:53.479011" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:07:53.333205" elapsed="0.145806"/>
</kw>
<msg time="2024-10-10T16:07:53.479011" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:07:53.333205" elapsed="0.145806"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:07:53.625519" level="INFO">Element 'xpath=(//android.view.View[@content-desc="Image"])[2]/parent::android.view.View/android.widget.TextView[6]' text is 'b@yopmail.com' </msg>
<msg time="2024-10-10T16:07:53.625519" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View/android.widget.TextView[6]</msg>
<msg time="2024-10-10T16:07:53.625519" level="INFO">${name} = b@yopmail.com</msg>
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:07:53.480009" elapsed="0.145510"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:07:53.626517" level="INFO">${name} = b@yopmail.com</msg>
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:07:53.625519" elapsed="0.000998"/>
</kw>
<status status="PASS" start="2024-10-10T16:07:53.479011" elapsed="0.147506"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:53.626517" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:53.626517" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:07:53.479011" elapsed="0.147506"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:07:53.332209" elapsed="0.294308"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:07:53.627514" level="INFO">${email} = b@yopmail.com</msg>
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:07:53.626517" elapsed="0.000997"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-10-10T16:07:53.627514" elapsed="0.000946"/>
</kw>
<status status="PASS" start="2024-10-10T16:07:53.332209" elapsed="0.296251"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:53.629465" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:53.628460" elapsed="0.001005"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:53.629465" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:53.629465" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:53.630496" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:53.629465" elapsed="0.001031"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:07:53.630496" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:07:53.630496" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:07:53.327257" elapsed="0.303239"/>
</if>
<var name="${counter}">6</var>
<status status="PASS" start="2024-10-10T16:07:53.327257" elapsed="0.303239"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:53.632454" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:53.632454" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:53.633450" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:53.630496" elapsed="0.002954"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:53.633450" elapsed="0.001000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:53.634450" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:53.634450" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:53.633450" elapsed="0.001000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:53.635485" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:53.634450" elapsed="0.001035"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:53.636444" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:53.637442" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:53.637442" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:53.638440" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:53.638440" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:53.636444" elapsed="0.001996"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:53.639436" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:53.638440" elapsed="0.001993"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:53.640433" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:53.640433" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:53.640433" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:53.640433" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:07:53.776016" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:07:53.641471" elapsed="0.134545"/>
</kw>
<msg time="2024-10-10T16:07:53.776016" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:07:53.641471" elapsed="0.134545"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:07:53.918392" level="INFO">Element 'xpath=(//android.view.View[@content-desc="Image"])[2]/parent::android.view.View/android.widget.TextView[7]' text is 'Project aktif' </msg>
<msg time="2024-10-10T16:07:53.919391" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View/android.widget.TextView[7]</msg>
<msg time="2024-10-10T16:07:53.919391" level="INFO">${name} = Project aktif</msg>
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:07:53.777016" elapsed="0.142375"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:07:53.919391" level="INFO">${name} = Project aktif</msg>
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:07:53.919391" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-10-10T16:07:53.776016" elapsed="0.143375"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:53.919391" elapsed="0.001001"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:53.919391" elapsed="0.001001"/>
</branch>
<status status="PASS" start="2024-10-10T16:07:53.776016" elapsed="0.144376"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:07:53.641471" elapsed="0.278921"/>
</kw>
<status status="PASS" start="2024-10-10T16:07:53.640433" elapsed="0.279959"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:53.920392" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:53.920392" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:53.920392" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:53.920392" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:07:53.921348" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:07:53.920392" elapsed="0.000956"/>
</branch>
<status status="PASS" start="2024-10-10T16:07:53.630496" elapsed="0.290852"/>
</if>
<var name="${counter}">7</var>
<status status="PASS" start="2024-10-10T16:07:53.630496" elapsed="0.290852"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:53.922387" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:53.922387" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:53.922387" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:53.921348" elapsed="0.001039"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:53.923382" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:53.923382" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:53.923382" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:53.922387" elapsed="0.000995"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:53.924378" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:53.923382" elapsed="0.000996"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:53.924378" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:53.924378" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:53.924378" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:53.924378" elapsed="0.000998"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:53.925376" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:53.924378" elapsed="0.000998"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:53.925376" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:53.925376" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:53.926374" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:53.926374" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:53.926374" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:53.925376" elapsed="0.000998"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:53.927377" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:53.926374" elapsed="0.001003"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:07:54.649362" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:07:53.928373" elapsed="0.720989"/>
</kw>
<msg time="2024-10-10T16:07:54.649362" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:07:53.927377" elapsed="0.721985"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:07:55.297627" level="INFO">Element 'xpath=(//android.view.View[@content-desc="Image"])[2]/parent::android.view.View/android.widget.TextView[8]' text is '0' </msg>
<msg time="2024-10-10T16:07:55.297627" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[2]/parent::android.view.View/android.widget.TextView[8]</msg>
<msg time="2024-10-10T16:07:55.298624" level="INFO">${name} = 0</msg>
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:07:54.650359" elapsed="0.648265"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:07:55.299623" level="INFO">${name} = 0</msg>
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:07:55.298624" elapsed="0.000999"/>
</kw>
<status status="PASS" start="2024-10-10T16:07:54.650359" elapsed="0.649264"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:55.300618" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:55.299623" elapsed="0.000995"/>
</branch>
<status status="PASS" start="2024-10-10T16:07:54.650359" elapsed="0.650259"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:07:53.927377" elapsed="1.373241"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:07:55.301616" level="INFO">${projActive} = 0</msg>
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:07:55.300618" elapsed="0.000998"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-10-10T16:07:55.301616" elapsed="0.000997"/>
</kw>
<status status="PASS" start="2024-10-10T16:07:53.927377" elapsed="1.375236"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:07:55.302613" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:07:55.302613" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:07:53.921348" elapsed="1.381265"/>
</if>
<var name="${counter}">8</var>
<status status="PASS" start="2024-10-10T16:07:53.921348" elapsed="1.381265"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:55.304609" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:55.304609" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:55.304609" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:55.303611" elapsed="0.000998"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:55.305604" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:55.306603" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:55.306603" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:55.304609" elapsed="0.001994"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:55.307600" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:55.306603" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:55.308598" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:55.308598" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:55.308598" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:55.308598" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:55.308598" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:55.307600" elapsed="0.000998"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:55.309596" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:55.308598" elapsed="0.000998"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:55.309596" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:55.309596" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:55.310592" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:55.309596" elapsed="0.000996"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:55.310592" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:55.310592" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:07:55.310592" elapsed="0.000997"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:55.311589" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:07:55.311589" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:07:55.310592" elapsed="0.000997"/>
</branch>
<branch type="ELSE">
<break>
<status status="PASS" start="2024-10-10T16:07:55.311589" elapsed="0.000000"/>
</break>
<status status="PASS" start="2024-10-10T16:07:55.311589" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:07:55.303611" elapsed="0.007978"/>
</if>
<var name="${counter}">9</var>
<status status="PASS" start="2024-10-10T16:07:55.303611" elapsed="0.007978"/>
</iter>
<var>${counter}</var>
<value>1</value>
<value>${len}</value>
<status status="PASS" start="2024-10-10T16:07:50.551870" elapsed="4.759719"/>
</for>
<status status="PASS" start="2024-10-10T16:07:50.549876" elapsed="4.761713"/>
</kw>
<kw name="When search User Management" owner="userManagementPage">
<kw name="Generate Simple Random Name" owner="generalFunction">
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-10-10T16:07:55.313585" level="INFO">${name} = VHQAT JNNULYTI</msg>
<var>${name}</var>
<arg>''.join(random.choices('ABCDEFGHIJKLMNOPQRSTUVWXYZ', k=5)) + ' ' + ''.join(random.choices('ABCDEFGHIJKLMNOPQRSTUVWXYZ', k=8))</arg>
<arg>modules=random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-10-10T16:07:55.312586" elapsed="0.000999"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:07:55.314581" level="INFO">${randomStr} = VHQAT JNNULYTI</msg>
<arg>${randomStr}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:07:55.313585" elapsed="0.000996"/>
</kw>
<status status="PASS" start="2024-10-10T16:07:55.312586" elapsed="0.001995"/>
</kw>
<kw name="user click element" owner="generalFunction">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:07:55.452214" level="INFO">xpath criteria: //android.widget.TextView[@text="Cari nama user"]/parent::android.widget.EditText</msg>
<arg>${element}</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:07:55.316577" elapsed="0.136638"/>
</kw>
<kw name="Click Element" owner="AppiumLibrary">
<msg time="2024-10-10T16:07:55.457198" level="INFO">Clicking element 'xpath=//android.widget.TextView[@text="Cari nama user"]/parent::android.widget.EditText'.</msg>
<msg time="2024-10-10T16:07:55.641349" level="INFO">xpath criteria: //android.widget.TextView[@text="Cari nama user"]/parent::android.widget.EditText</msg>
<arg>${element}</arg>
<doc>Click element identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:07:55.453215" elapsed="0.188134"/>
</kw>
<arg>${searchField}</arg>
<status status="PASS" start="2024-10-10T16:07:55.315580" elapsed="0.325769"/>
</kw>
<kw name="Input Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:07:55.645338" level="INFO">Typing text 'CaZz' into text field 'xpath=//android.widget.TextView[@text="Cari nama user"]/parent::android.widget.EditText'</msg>
<msg time="2024-10-10T16:07:56.639315" level="INFO">xpath criteria: //android.widget.TextView[@text="Cari nama user"]/parent::android.widget.EditText</msg>
<arg>${searchField}</arg>
<arg>${text}</arg>
<doc>Types the given `text` into text field identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:07:55.642345" elapsed="0.996970"/>
</kw>
<kw name="Press Keycode" owner="AppiumLibrary">
<arg>66</arg>
<doc>Sends a press of keycode to the device.</doc>
<status status="PASS" start="2024-10-10T16:07:56.639315" elapsed="0.081189"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:07:57.556964" level="INFO">xpath criteria: //android.view.View[@content-desc="Image"]/parent::android.view.View</msg>
<arg>${result}</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:07:56.720504" elapsed="0.836460"/>
</kw>
<arg>${nameUserManagement}</arg>
<arg>${searchList}</arg>
<status status="PASS" start="2024-10-10T16:07:55.312586" elapsed="2.245377"/>
</kw>
<kw name="And Element Should Be Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:07:57.661771" level="INFO">xpath criteria: //android.view.View[@content-desc="Image"]/parent::android.view.View</msg>
<arg>${searchList}</arg>
<doc>Verifies that element identified with locator is visible.</doc>
<status status="PASS" start="2024-10-10T16:07:57.557963" elapsed="0.103808"/>
</kw>
<status status="PASS" start="2024-10-10T16:07:43.307463" elapsed="14.354308"/>
</kw>
<kw name="Close App" owner="openApp" type="TEARDOWN">
<kw name="Close Application" owner="AppiumLibrary">
<doc>Closes the current application and also close webdriver session.</doc>
<status status="PASS" start="2024-10-10T16:07:57.662768" elapsed="0.444814"/>
</kw>
<status status="PASS" start="2024-10-10T16:07:57.662768" elapsed="0.444814"/>
</kw>
<doc>This scenario test User search User Management (Site/PIC)</doc>
<tag>1000s</tag>
<tag>test</tag>
<tag>user management</tag>
<status status="PASS" start="2024-10-10T16:07:36.295482" elapsed="21.813097"/>
</test>
<test id="s1-t12" name="Test User access detail User Management page" line="65">
<kw name="Open app Dev Project" owner="openApp" type="SETUP">
<kw name="Open Application" owner="AppiumLibrary">
<arg>http://127.0.0.1:4723</arg>
<arg>platformName=${platformName}</arg>
<arg>deviceName=${udid}</arg>
<arg>appPackage=${appPackage}</arg>
<arg>appActivity=${appActivity}</arg>
<arg>automationName=UiAutomator2</arg>
<doc>Opens a new application to given Appium server.
Capabilities of appium server, Android and iOS,
Please check https://appium.io/docs/en/2.1/cli/args/
| *Option*            | *Man.* | *Description*     |
| remote_url          | Yes    | Appium server url |
| alias               | no     | alias             |
| strict_ssl          | No     | allows you to send commands to an invalid certificate host like a self-signed one. |</doc>
<status status="PASS" start="2024-10-10T16:07:58.112577" elapsed="6.935687"/>
</kw>
<status status="PASS" start="2024-10-10T16:07:58.111572" elapsed="6.936692"/>
</kw>
<kw name="User Go To Detail User Management" owner="userManagement">
<kw name="Given user go to User Management page" owner="userManagementPage">
<kw name="User Login" owner="loginPage">
<kw name="Given user input no handphone" owner="loginPage">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:08:08.513971" level="INFO">xpath criteria: //android.widget.TextView[@text="Login"]
xpath criteria: //android.widget.TextView[@text="Login"]</msg>
<arg>${titleLogin}</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:08:05.051253" elapsed="3.462718"/>
</kw>
<kw name="Input Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:08:08.517956" level="INFO">Typing text '088210068283' into text field 'xpath=//android.widget.EditText[1]'</msg>
<msg time="2024-10-10T16:08:08.670384" level="INFO">xpath criteria: //android.widget.EditText[1]</msg>
<arg>${inputNoHandphone}</arg>
<arg>${noHandphone}</arg>
<doc>Types the given `text` into text field identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:08:08.514966" elapsed="0.155418"/>
</kw>
<arg>${akunOP}</arg>
<status status="PASS" start="2024-10-10T16:08:05.050256" elapsed="3.621124"/>
</kw>
<kw name="When user input password" owner="loginPage">
<kw name="Input Password" owner="AppiumLibrary">
<msg time="2024-10-10T16:08:08.674370" level="INFO">Typing password into text field 'xpath=//android.widget.EditText[2]'</msg>
<msg time="2024-10-10T16:08:08.876125" level="INFO">xpath criteria: //android.widget.EditText[2]</msg>
<arg>${inputPassword}</arg>
<arg>${password}</arg>
<doc>Types the given password into text field identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:08:08.672377" elapsed="0.203748"/>
</kw>
<arg>${passwordProject}</arg>
<status status="PASS" start="2024-10-10T16:08:08.671380" elapsed="0.204745"/>
</kw>
<kw name="Then click button masuk" owner="loginPage">
<kw name="Click Element" owner="AppiumLibrary">
<msg time="2024-10-10T16:08:08.880115" level="INFO">Clicking element 'xpath=//android.view.View/android.view.View[2]'.</msg>
<msg time="2024-10-10T16:08:11.699990" level="INFO">xpath criteria: //android.view.View/android.view.View[2]</msg>
<arg>${buttonMasuk}</arg>
<doc>Click element identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:08:08.877155" elapsed="2.822835"/>
</kw>
<status status="PASS" start="2024-10-10T16:08:08.876125" elapsed="2.823865"/>
</kw>
<kw name="And home Project" owner="loginPage">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<arg>accessibility_id=Icon Projects</arg>
<arg>timeout=10s</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:08:11.700986" elapsed="0.783180"/>
</kw>
<kw name="Element Should Be Visible" owner="AppiumLibrary">
<arg>accessibility_id=Icon Projects</arg>
<doc>Verifies that element identified with locator is visible.</doc>
<status status="PASS" start="2024-10-10T16:08:12.484166" elapsed="0.136649"/>
</kw>
<kw name="Element Should Be Visible" owner="AppiumLibrary">
<arg>accessibility_id=Notification</arg>
<doc>Verifies that element identified with locator is visible.</doc>
<status status="PASS" start="2024-10-10T16:08:12.620815" elapsed="0.133934"/>
</kw>
<kw name="Element Should Be Visible" owner="AppiumLibrary">
<arg>accessibility_id=Icon Search</arg>
<doc>Verifies that element identified with locator is visible.</doc>
<status status="PASS" start="2024-10-10T16:08:12.755708" elapsed="0.124421"/>
</kw>
<status status="PASS" start="2024-10-10T16:08:11.700986" elapsed="1.179143"/>
</kw>
<status status="PASS" start="2024-10-10T16:08:05.050256" elapsed="7.829873"/>
</kw>
<kw name="Loc Parent View" owner="generalFunction">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-10-10T16:08:12.882123" level="INFO">${loc} = xpath=//android.widget.TextView[@text="User Management"]/parent::android.view.View</msg>
<var>${loc}</var>
<arg>xpath=//android.widget.TextView[@text="${text}"]/parent::android.view.View</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-10-10T16:08:12.881126" elapsed="0.000997"/>
</kw>
<return>
<value>${loc}</value>
<status status="PASS" start="2024-10-10T16:08:12.882123" elapsed="0.000000"/>
</return>
<msg time="2024-10-10T16:08:12.882123" level="INFO">${loc} = xpath=//android.widget.TextView[@text="User Management"]/parent::android.view.View</msg>
<var>${loc}</var>
<arg>User Management</arg>
<status status="PASS" start="2024-10-10T16:08:12.880129" elapsed="0.001994"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:08:13.088374" level="INFO">xpath criteria: //android.widget.TextView[@text="User Management"]/parent::android.view.View</msg>
<arg>${loc}</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:08:12.882123" elapsed="0.206251"/>
</kw>
<kw name="Click Element" owner="AppiumLibrary">
<msg time="2024-10-10T16:08:13.091352" level="INFO">Clicking element 'xpath=//android.widget.TextView[@text="User Management"]/parent::android.view.View'.</msg>
<msg time="2024-10-10T16:08:13.339448" level="INFO">xpath criteria: //android.widget.TextView[@text="User Management"]/parent::android.view.View</msg>
<arg>${loc}</arg>
<doc>Click element identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:08:13.088374" elapsed="0.251074"/>
</kw>
<status status="PASS" start="2024-10-10T16:08:05.050256" elapsed="8.289192"/>
</kw>
<kw name="When Go to detail User Management" owner="userManagementPage">
<kw name="Get Detail Text User Management" owner="userManagementPage">
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-10-10T16:08:13.341478" level="INFO">${random} = 1</msg>
<var>${random}</var>
<arg>random.randint(1, 3)</arg>
<arg>modules=random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-10-10T16:08:13.341478" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:08:13.342477" level="INFO">${indexUser} = 1</msg>
<arg>${indexUser}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:08:13.341478" elapsed="0.000999"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-10-10T16:08:13.342477" level="INFO">Random : 1</msg>
<arg>Random : ${random}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-10-10T16:08:13.342477" elapsed="0.000000"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-10-10T16:08:13.342477" level="INFO">Length is 103.</msg>
<msg time="2024-10-10T16:08:13.343474" level="INFO">${len} = 103</msg>
<var>${len}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-10-10T16:08:13.342477" elapsed="0.000997"/>
</kw>
<for flavor="IN RANGE">
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:08:14.540041" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[1]/parent::android.view.View
xpath criteria: (//android.view.View[@content-desc="Image"])[1]/parent::android.view.View</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:08:13.344471" elapsed="1.195570"/>
</kw>
<msg time="2024-10-10T16:08:14.540041" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:08:13.344471" elapsed="1.195570"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:08:14.715291" level="INFO">Element 'xpath=(//android.view.View[@content-desc="Image"])[1]/parent::android.view.View/android.widget.TextView[1]' text is 'ab' </msg>
<msg time="2024-10-10T16:08:14.715291" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[1]/parent::android.view.View/android.widget.TextView[1]</msg>
<msg time="2024-10-10T16:08:14.715291" level="INFO">${name} = ab</msg>
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:08:14.541039" elapsed="0.174252"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:08:14.715291" level="INFO">${name} = ab</msg>
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:08:14.715291" elapsed="0.000997"/>
</kw>
<status status="PASS" start="2024-10-10T16:08:14.541039" elapsed="0.175249"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:14.716288" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:14.716288" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:08:14.540041" elapsed="0.176247"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:08:13.343474" elapsed="1.372814"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:08:14.716288" level="INFO">${nameUserManagement} = ab</msg>
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:08:14.716288" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-10-10T16:08:14.717285" elapsed="0.000465"/>
</kw>
<status status="PASS" start="2024-10-10T16:08:13.343474" elapsed="1.374276"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:08:14.717750" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:14.718754" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:14.718754" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:14.717750" elapsed="0.001004"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:08:14.718754" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:14.718754" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:08:14.719751" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:14.719751" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:14.719751" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:14.719751" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:14.719751" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:14.718754" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:08:14.720748" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:14.719751" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:08:14.720748" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:14.720748" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:14.720748" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:14.720748" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:08:14.723740" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:14.721745" elapsed="0.001995"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:08:14.724738" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:14.724738" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:14.724738" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:14.723740" elapsed="0.000998"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:08:14.724738" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:08:14.724738" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:08:13.343474" elapsed="1.381264"/>
</if>
<var name="${counter}">1</var>
<status status="PASS" start="2024-10-10T16:08:13.343474" elapsed="1.381264"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:08:14.725734" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:14.725734" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:14.725734" elapsed="0.000999"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:14.725734" elapsed="0.000999"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:08:14.896994" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[1]/parent::android.view.View</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:08:14.727730" elapsed="0.169264"/>
</kw>
<msg time="2024-10-10T16:08:14.896994" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:08:14.727730" elapsed="0.169264"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:08:15.048253" level="INFO">Element 'xpath=(//android.view.View[@content-desc="Image"])[1]/parent::android.view.View/android.widget.TextView[2]' text is 'jassw' </msg>
<msg time="2024-10-10T16:08:15.049251" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[1]/parent::android.view.View/android.widget.TextView[2]</msg>
<msg time="2024-10-10T16:08:15.049251" level="INFO">${name} = jassw</msg>
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:08:14.897992" elapsed="0.151259"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:08:15.049251" level="INFO">${name} = jassw</msg>
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:08:15.049251" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-10-10T16:08:14.897992" elapsed="0.151259"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:15.050253" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:15.049251" elapsed="0.001002"/>
</branch>
<status status="PASS" start="2024-10-10T16:08:14.897992" elapsed="0.152261"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:08:14.726733" elapsed="0.323520"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:08:15.050253" level="INFO">${jabatan} = jassw</msg>
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:08:15.050253" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-10-10T16:08:15.050253" elapsed="0.000993"/>
</kw>
<status status="PASS" start="2024-10-10T16:08:14.726733" elapsed="0.324513"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:08:15.052207" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:15.051246" elapsed="0.000961"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:08:15.053206" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:15.053206" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:15.053206" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:15.053206" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:15.054242" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:15.052207" elapsed="0.002035"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:08:15.054242" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:15.054242" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:08:15.054242" elapsed="0.000994"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:15.055236" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:15.055236" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:15.054242" elapsed="0.000994"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:08:15.055236" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:15.055236" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:08:15.055236" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:15.056233" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:15.056233" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:15.055236" elapsed="0.000997"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:08:15.056233" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:08:15.056233" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:08:14.725734" elapsed="0.330499"/>
</if>
<var name="${counter}">2</var>
<status status="PASS" start="2024-10-10T16:08:14.725734" elapsed="0.330499"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:08:15.057230" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:15.057230" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:15.057230" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:15.056233" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:08:15.058228" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:15.058228" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:15.058228" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:15.057230" elapsed="0.000998"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:08:15.203786" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[1]/parent::android.view.View</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:08:15.060186" elapsed="0.143600"/>
</kw>
<msg time="2024-10-10T16:08:15.204783" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:08:15.060186" elapsed="0.144597"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:08:15.340418" level="INFO">Element 'xpath=(//android.view.View[@content-desc="Image"])[1]/parent::android.view.View/android.widget.TextView[3]' text is 'Nomor handphone' </msg>
<msg time="2024-10-10T16:08:15.340418" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[1]/parent::android.view.View/android.widget.TextView[3]</msg>
<msg time="2024-10-10T16:08:15.340418" level="INFO">${name} = Nomor handphone</msg>
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:08:15.204783" elapsed="0.135635"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:08:15.341416" level="INFO">${name} = Nomor handphone</msg>
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:08:15.341416" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-10-10T16:08:15.204783" elapsed="0.136633"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:15.342377" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:15.341416" elapsed="0.000961"/>
</branch>
<status status="PASS" start="2024-10-10T16:08:15.204783" elapsed="0.137594"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:08:15.059225" elapsed="0.283152"/>
</kw>
<status status="PASS" start="2024-10-10T16:08:15.059225" elapsed="0.283152"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:08:15.342377" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:15.342377" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:15.342377" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:15.343416" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:15.343416" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:15.342377" elapsed="0.001039"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:08:15.343416" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:15.343416" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:08:15.343416" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:15.344408" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:15.344408" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:15.343416" elapsed="0.000992"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:08:15.344408" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:15.344408" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:08:15.345407" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:15.345407" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:15.345407" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:15.344408" elapsed="0.000999"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:08:15.345407" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:08:15.345407" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:08:15.056233" elapsed="0.289174"/>
</if>
<var name="${counter}">3</var>
<status status="PASS" start="2024-10-10T16:08:15.056233" elapsed="0.289174"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:08:15.346405" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:15.346405" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:15.346405" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:15.346405" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:08:15.347400" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:15.347400" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:15.347400" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:15.346405" elapsed="0.000995"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:08:15.348363" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:15.347400" elapsed="0.000963"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:08:15.488837" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[1]/parent::android.view.View</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:08:15.349358" elapsed="0.139479"/>
</kw>
<msg time="2024-10-10T16:08:15.488837" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:08:15.349358" elapsed="0.139479"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:08:15.799375" level="INFO">Element 'xpath=(//android.view.View[@content-desc="Image"])[1]/parent::android.view.View/android.widget.TextView[4]' text is '0882-1231-23' </msg>
<msg time="2024-10-10T16:08:15.799375" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[1]/parent::android.view.View/android.widget.TextView[4]</msg>
<msg time="2024-10-10T16:08:15.799375" level="INFO">${name} = 0882-1231-23</msg>
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:08:15.488837" elapsed="0.310538"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:08:15.801370" level="INFO">${name} = 0882-1231-23</msg>
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:08:15.800373" elapsed="0.000997"/>
</kw>
<status status="PASS" start="2024-10-10T16:08:15.488837" elapsed="0.312533"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:15.801370" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:15.801370" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-10-10T16:08:15.488837" elapsed="0.313530"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:08:15.348363" elapsed="0.454004"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:08:15.803368" level="INFO">${noTelp} = 0882-1231-23</msg>
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:08:15.802367" elapsed="0.001001"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-10-10T16:08:15.803368" elapsed="0.017950"/>
</kw>
<kw name="Replace String" owner="String">
<msg time="2024-10-10T16:08:15.823311" level="INFO">${replaceNumb} = 0882123123</msg>
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-10-10T16:08:15.821318" elapsed="0.001993"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:08:15.824309" level="INFO">${replaceNumb} = 0882123123</msg>
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:08:15.823311" elapsed="0.000998"/>
</kw>
<status status="PASS" start="2024-10-10T16:08:15.348363" elapsed="0.475946"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:08:15.825306" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:15.824309" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:08:15.825306" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:15.826303" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:15.826303" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:15.825306" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:08:15.827300" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:15.826303" elapsed="0.001995"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:08:15.828298" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:15.829295" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:15.829295" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:15.828298" elapsed="0.000997"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:08:15.829295" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:08:15.829295" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:08:15.346405" elapsed="0.482890"/>
</if>
<var name="${counter}">4</var>
<status status="PASS" start="2024-10-10T16:08:15.346405" elapsed="0.483888"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:08:15.831291" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:15.831291" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:15.832287" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:15.830293" elapsed="0.001994"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:08:15.833285" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:15.833285" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:15.833285" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:15.832287" elapsed="0.000998"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:08:15.834283" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:15.833285" elapsed="0.000998"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:08:15.835279" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:15.836277" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:15.836277" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:15.836277" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:15.837274" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:15.834283" elapsed="0.002991"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:08:15.965566" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[1]/parent::android.view.View</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:08:15.839268" elapsed="0.126298"/>
</kw>
<msg time="2024-10-10T16:08:15.965566" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:08:15.839268" elapsed="0.126298"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:08:16.544418" level="INFO">Element 'xpath=(//android.view.View[@content-desc="Image"])[1]/parent::android.view.View/android.widget.TextView[5]' text is 'Email' </msg>
<msg time="2024-10-10T16:08:16.545417" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[1]/parent::android.view.View/android.widget.TextView[5]</msg>
<msg time="2024-10-10T16:08:16.545417" level="INFO">${name} = Email</msg>
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:08:15.966562" elapsed="0.578855"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:08:16.545417" level="INFO">${name} = Email</msg>
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:08:16.545417" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-10-10T16:08:15.966562" elapsed="0.578855"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:16.545417" elapsed="0.000995"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:16.545417" elapsed="0.000995"/>
</branch>
<status status="PASS" start="2024-10-10T16:08:15.966562" elapsed="0.579850"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:08:15.838271" elapsed="0.708141"/>
</kw>
<status status="PASS" start="2024-10-10T16:08:15.837274" elapsed="0.709138"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:08:16.546412" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:16.546412" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:16.546412" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:16.546412" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:08:16.547412" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:16.546412" elapsed="0.001000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:08:16.547412" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:16.547412" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:16.547412" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:16.547412" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:08:16.547412" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:08:16.547412" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:08:15.830293" elapsed="0.718114"/>
</if>
<var name="${counter}">5</var>
<status status="PASS" start="2024-10-10T16:08:15.830293" elapsed="0.718114"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:08:16.548407" elapsed="0.001000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:16.549407" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:16.549407" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:16.548407" elapsed="0.001000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:08:16.549407" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:16.549407" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:16.550404" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:16.549407" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:08:16.550404" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:16.550404" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:08:16.551402" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:16.551402" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:16.551402" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:16.551402" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:16.551402" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:16.550404" elapsed="0.000998"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:08:16.552402" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:16.552402" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:08:16.687653" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[1]/parent::android.view.View</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:08:16.554356" elapsed="0.133297"/>
</kw>
<msg time="2024-10-10T16:08:16.687653" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:08:16.553401" elapsed="0.134252"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:08:16.836531" level="INFO">Element 'xpath=(//android.view.View[@content-desc="Image"])[1]/parent::android.view.View/android.widget.TextView[6]' text is 'asd!!!######@gmail.com' </msg>
<msg time="2024-10-10T16:08:16.836531" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[1]/parent::android.view.View/android.widget.TextView[6]</msg>
<msg time="2024-10-10T16:08:16.837529" level="INFO">${name} = asd!!!######@gmail.com</msg>
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:08:16.688648" elapsed="0.148881"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:08:16.837529" level="INFO">${name} = asd!!!######@gmail.com</msg>
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:08:16.837529" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-10-10T16:08:16.688648" elapsed="0.148881"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:16.837529" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:16.837529" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:08:16.687653" elapsed="0.150874"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:08:16.553401" elapsed="0.285126"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:08:16.838527" level="INFO">${email} = asd!!!######@gmail.com</msg>
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:08:16.838527" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-10-10T16:08:16.838527" elapsed="0.000961"/>
</kw>
<status status="PASS" start="2024-10-10T16:08:16.552402" elapsed="0.287086"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:08:16.839488" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:16.839488" elapsed="0.001000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:08:16.840488" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:16.840488" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:16.841484" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:16.840488" elapsed="0.000996"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:08:16.841484" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:08:16.841484" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:08:16.548407" elapsed="0.293077"/>
</if>
<var name="${counter}">6</var>
<status status="PASS" start="2024-10-10T16:08:16.548407" elapsed="0.293077"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:08:16.842481" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:16.842481" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:16.842481" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:16.841484" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:08:16.843478" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:16.843478" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:16.843478" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:16.842481" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:08:16.844472" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:16.843478" elapsed="0.000994"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:08:16.844472" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:16.844472" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:16.844472" elapsed="0.001000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:16.845472" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:16.845472" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:16.844472" elapsed="0.001000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:08:16.846468" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:16.845472" elapsed="0.000996"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:08:16.846468" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:16.847468" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:16.847468" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:16.846468" elapsed="0.001000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:08:16.985129" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[1]/parent::android.view.View</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:08:16.848464" elapsed="0.136665"/>
</kw>
<msg time="2024-10-10T16:08:16.985129" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:08:16.848464" elapsed="0.136665"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:08:17.132971" level="INFO">Element 'xpath=(//android.view.View[@content-desc="Image"])[1]/parent::android.view.View/android.widget.TextView[7]' text is 'Project aktif' </msg>
<msg time="2024-10-10T16:08:17.132971" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[1]/parent::android.view.View/android.widget.TextView[7]</msg>
<msg time="2024-10-10T16:08:17.132971" level="INFO">${name} = Project aktif</msg>
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:08:16.986125" elapsed="0.146846"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:08:17.133968" level="INFO">${name} = Project aktif</msg>
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:08:17.132971" elapsed="0.000997"/>
</kw>
<status status="PASS" start="2024-10-10T16:08:16.985129" elapsed="0.148839"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:17.133968" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:17.133968" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:08:16.985129" elapsed="0.148839"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:08:16.847468" elapsed="0.286500"/>
</kw>
<status status="PASS" start="2024-10-10T16:08:16.847468" elapsed="0.286500"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:08:17.134966" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:17.134966" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:17.135962" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:17.133968" elapsed="0.001994"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:08:17.135962" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:08:17.135962" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:08:16.841484" elapsed="0.294478"/>
</if>
<var name="${counter}">7</var>
<status status="PASS" start="2024-10-10T16:08:16.841484" elapsed="0.294478"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:08:17.136961" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:17.136961" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:17.136961" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:17.136961" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:08:17.137958" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:17.137958" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:17.137958" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:17.136961" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:08:17.138956" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:17.137958" elapsed="0.000998"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:08:17.138956" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:17.139954" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:17.139954" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:17.139954" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:17.139954" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:17.138956" elapsed="0.000998"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:08:17.140950" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:17.139954" elapsed="0.000996"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:08:17.140950" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:17.140950" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:17.141948" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:17.140950" elapsed="0.000998"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:08:17.142944" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:17.141948" elapsed="0.000996"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:08:17.276626" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[1]/parent::android.view.View</msg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:08:17.144938" elapsed="0.131688"/>
</kw>
<msg time="2024-10-10T16:08:17.277622" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:08:17.143943" elapsed="0.133679"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:08:17.418387" level="INFO">Element 'xpath=(//android.view.View[@content-desc="Image"])[1]/parent::android.view.View/android.widget.TextView[8]' text is '0' </msg>
<msg time="2024-10-10T16:08:17.418387" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[1]/parent::android.view.View/android.widget.TextView[8]</msg>
<msg time="2024-10-10T16:08:17.419385" level="INFO">${name} = 0</msg>
<var>${name}</var>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${random}]/parent::android.view.View/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:08:17.278622" elapsed="0.140763"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:08:17.419385" level="INFO">${name} = 0</msg>
<arg>${name}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:08:17.419385" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-10-10T16:08:17.277622" elapsed="0.141763"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>false</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:17.419385" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:17.419385" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-10-10T16:08:17.277622" elapsed="0.142760"/>
</if>
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="PASS" start="2024-10-10T16:08:17.142944" elapsed="0.277438"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2024-10-10T16:08:17.420382" level="INFO">${projActive} = 0</msg>
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2024-10-10T16:08:17.420382" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-10-10T16:08:17.420382" elapsed="0.000997"/>
</kw>
<status status="PASS" start="2024-10-10T16:08:17.142944" elapsed="0.278435"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" start="2024-10-10T16:08:17.421379" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-10-10T16:08:17.421379" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:08:17.136961" elapsed="0.284418"/>
</if>
<var name="${counter}">8</var>
<status status="PASS" start="2024-10-10T16:08:17.136961" elapsed="0.284418"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:08:17.422377" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:17.423373" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Nama User: ${nameUserManagement}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:17.423373" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:17.422377" elapsed="0.000996"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:08:17.424369" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:17.424369" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Jabatan: ${jabatan}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:17.424369" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:17.423373" elapsed="0.000996"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '3'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:08:17.424369" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:17.424369" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:08:17.425366" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:17.425366" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>No Telp: ${noTelp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:17.425366" elapsed="0.000000"/>
</kw>
<kw name="Replace String" owner="String">
<var>${replaceNumb}</var>
<arg>${noTelp}</arg>
<arg>-</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:17.425366" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${replaceNumb}</arg>
<arg>${replaceNumb}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:17.425366" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:17.424369" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '5'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:08:17.426363" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:17.426363" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:08:17.426363" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${email}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:17.427361" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Email: ${email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:17.427361" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:17.426363" elapsed="0.000998"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '7'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:08:17.427361" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:17.427361" elapsed="0.001000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '8'">
<kw name="get text detail on list user management" owner="userManagementPage">
<arg>${counter}</arg>
<arg>${random}</arg>
<status status="NOT RUN" start="2024-10-10T16:08:17.428361" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${projActive}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:17.428361" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Project Aktif: ${projActive}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:17.429356" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:17.428361" elapsed="0.000995"/>
</branch>
<branch type="ELSE">
<break>
<status status="PASS" start="2024-10-10T16:08:17.429356" elapsed="0.000000"/>
</break>
<status status="PASS" start="2024-10-10T16:08:17.429356" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:08:17.422377" elapsed="0.006979"/>
</if>
<var name="${counter}">9</var>
<status status="PASS" start="2024-10-10T16:08:17.422377" elapsed="0.006979"/>
</iter>
<var>${counter}</var>
<value>1</value>
<value>${len}</value>
<status status="PASS" start="2024-10-10T16:08:13.343474" elapsed="4.085882"/>
</for>
<status status="PASS" start="2024-10-10T16:08:13.340444" elapsed="4.088912"/>
</kw>
<kw name="user click element" owner="generalFunction">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:08:17.563802" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[1]/parent::android.view.View</msg>
<arg>${element}</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:08:17.430352" elapsed="0.133450"/>
</kw>
<kw name="Click Element" owner="AppiumLibrary">
<msg time="2024-10-10T16:08:17.566801" level="INFO">Clicking element 'xpath=(//android.view.View[@content-desc="Image"])[1]/parent::android.view.View'.</msg>
<msg time="2024-10-10T16:08:18.751509" level="INFO">xpath criteria: (//android.view.View[@content-desc="Image"])[1]/parent::android.view.View</msg>
<arg>${element}</arg>
<doc>Click element identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:08:17.563802" elapsed="1.187707"/>
</kw>
<arg>xpath=(//android.view.View[@content-desc="Image"])[${indexUser}]/parent::android.view.View</arg>
<status status="PASS" start="2024-10-10T16:08:17.429356" elapsed="1.322153"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:08:18.879642" level="INFO">xpath criteria: //android.widget.TextView[@text="Detail User"]</msg>
<arg>${textDetailUser}</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:08:18.751509" elapsed="0.128133"/>
</kw>
<msg time="2024-10-10T16:08:18.879642" level="INFO">${res} = True</msg>
<var>${res}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${textDetailUser}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-10-10T16:08:18.751509" elapsed="0.128133"/>
</kw>
<if>
<branch type="IF" condition="${res}">
<for flavor="IN RANGE">
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:08:19.016328" level="INFO">Element 'xpath=//androidx.compose.ui.platform.ComposeView/android.view.View/android.view.View/android.widget.TextView[1]' text is 'ab' </msg>
<msg time="2024-10-10T16:08:19.016328" level="INFO">xpath criteria: //androidx.compose.ui.platform.ComposeView/android.view.View/android.view.View/android.widget.TextView[1]</msg>
<msg time="2024-10-10T16:08:19.017318" level="INFO">${textName} = ab</msg>
<var>${textName}</var>
<arg>${pageDetailUser}/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:08:18.880671" elapsed="0.136647"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${textName}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-10-10T16:08:19.017318" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-10-10T16:08:18.880671" elapsed="0.136647"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="Get Text" owner="AppiumLibrary">
<var>${textJabatan}</var>
<arg>${pageDetailUser}/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="NOT RUN" start="2024-10-10T16:08:19.017318" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${textJabatan}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:19.017318" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:19.017318" elapsed="0.001000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="Get Text" owner="AppiumLibrary">
<var>${textNoTelp}</var>
<arg>${pageDetailUser}/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="NOT RUN" start="2024-10-10T16:08:19.018318" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${textNoTelp}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:19.018318" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:19.018318" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="Get Text" owner="AppiumLibrary">
<var>${textEmail}</var>
<arg>${pageDetailUser}/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="NOT RUN" start="2024-10-10T16:08:19.018318" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${email}</arg>
<arg>${textEmail}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:19.019313" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:19.018318" elapsed="0.000995"/>
</branch>
<branch type="ELSE">
<kw name="Element Should Be Visible" owner="AppiumLibrary">
<arg>${pageDetailUser}</arg>
<doc>Verifies that element identified with locator is visible.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:19.019313" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:19.019313" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:08:18.880671" elapsed="0.138642"/>
</if>
<var name="${counter}">1</var>
<status status="PASS" start="2024-10-10T16:08:18.880671" elapsed="0.138642"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="Get Text" owner="AppiumLibrary">
<var>${textName}</var>
<arg>${pageDetailUser}/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="NOT RUN" start="2024-10-10T16:08:19.019313" elapsed="0.000999"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${textName}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:19.020312" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:19.019313" elapsed="0.000999"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:08:19.617958" level="INFO">Element 'xpath=//androidx.compose.ui.platform.ComposeView/android.view.View/android.view.View/android.widget.TextView[2]' text is 'jassw' </msg>
<msg time="2024-10-10T16:08:19.617958" level="INFO">xpath criteria: //androidx.compose.ui.platform.ComposeView/android.view.View/android.view.View/android.widget.TextView[2]</msg>
<msg time="2024-10-10T16:08:19.617958" level="INFO">${textJabatan} = jassw</msg>
<var>${textJabatan}</var>
<arg>${pageDetailUser}/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:08:19.020312" elapsed="0.597646"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${textJabatan}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-10-10T16:08:19.617958" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-10-10T16:08:19.020312" elapsed="0.597646"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="Get Text" owner="AppiumLibrary">
<var>${textNoTelp}</var>
<arg>${pageDetailUser}/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="NOT RUN" start="2024-10-10T16:08:19.618953" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${textNoTelp}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:19.618953" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:19.617958" elapsed="0.000995"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="Get Text" owner="AppiumLibrary">
<var>${textEmail}</var>
<arg>${pageDetailUser}/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="NOT RUN" start="2024-10-10T16:08:19.618953" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${email}</arg>
<arg>${textEmail}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:19.618953" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:19.618953" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Element Should Be Visible" owner="AppiumLibrary">
<arg>${pageDetailUser}</arg>
<doc>Verifies that element identified with locator is visible.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:19.618953" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:19.618953" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:08:19.019313" elapsed="0.599640"/>
</if>
<var name="${counter}">2</var>
<status status="PASS" start="2024-10-10T16:08:19.019313" elapsed="0.600641"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="Get Text" owner="AppiumLibrary">
<var>${textName}</var>
<arg>${pageDetailUser}/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="NOT RUN" start="2024-10-10T16:08:19.619954" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${textName}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:19.620950" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:19.619954" elapsed="0.000996"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="Get Text" owner="AppiumLibrary">
<var>${textJabatan}</var>
<arg>${pageDetailUser}/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="NOT RUN" start="2024-10-10T16:08:19.620950" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${textJabatan}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:19.620950" elapsed="0.000995"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:19.620950" elapsed="0.000995"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="Get Text" owner="AppiumLibrary">
<var>${textNoTelp}</var>
<arg>${pageDetailUser}/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="NOT RUN" start="2024-10-10T16:08:19.621945" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${textNoTelp}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:19.621945" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:19.621945" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="Get Text" owner="AppiumLibrary">
<var>${textEmail}</var>
<arg>${pageDetailUser}/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="NOT RUN" start="2024-10-10T16:08:19.621945" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${email}</arg>
<arg>${textEmail}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:19.622947" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:19.621945" elapsed="0.001002"/>
</branch>
<branch type="ELSE">
<kw name="Element Should Be Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:08:19.729611" level="INFO">xpath criteria: //androidx.compose.ui.platform.ComposeView/android.view.View/android.view.View</msg>
<arg>${pageDetailUser}</arg>
<doc>Verifies that element identified with locator is visible.</doc>
<status status="PASS" start="2024-10-10T16:08:19.622947" elapsed="0.107661"/>
</kw>
<status status="PASS" start="2024-10-10T16:08:19.622947" elapsed="0.107661"/>
</branch>
<status status="PASS" start="2024-10-10T16:08:19.619954" elapsed="0.110654"/>
</if>
<var name="${counter}">3</var>
<status status="PASS" start="2024-10-10T16:08:19.619954" elapsed="0.110654"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="Get Text" owner="AppiumLibrary">
<var>${textName}</var>
<arg>${pageDetailUser}/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="NOT RUN" start="2024-10-10T16:08:19.731604" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${textName}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:19.731604" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:19.731604" elapsed="0.000998"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="Get Text" owner="AppiumLibrary">
<var>${textJabatan}</var>
<arg>${pageDetailUser}/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="NOT RUN" start="2024-10-10T16:08:19.732602" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${textJabatan}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:19.732602" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:19.732602" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:08:19.846523" level="INFO">Element 'xpath=//androidx.compose.ui.platform.ComposeView/android.view.View/android.view.View/android.widget.TextView[4]' text is '0882-1231-23' </msg>
<msg time="2024-10-10T16:08:19.846523" level="INFO">xpath criteria: //androidx.compose.ui.platform.ComposeView/android.view.View/android.view.View/android.widget.TextView[4]</msg>
<msg time="2024-10-10T16:08:19.846523" level="INFO">${textNoTelp} = 0882-1231-23</msg>
<var>${textNoTelp}</var>
<arg>${pageDetailUser}/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:08:19.733599" elapsed="0.112924"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${textNoTelp}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-10-10T16:08:19.847520" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-10-10T16:08:19.733599" elapsed="0.113921"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="Get Text" owner="AppiumLibrary">
<var>${textEmail}</var>
<arg>${pageDetailUser}/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="NOT RUN" start="2024-10-10T16:08:19.847520" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${email}</arg>
<arg>${textEmail}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:19.848517" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:19.847520" elapsed="0.000997"/>
</branch>
<branch type="ELSE">
<kw name="Element Should Be Visible" owner="AppiumLibrary">
<arg>${pageDetailUser}</arg>
<doc>Verifies that element identified with locator is visible.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:19.848517" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:19.848517" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:08:19.730608" elapsed="0.117909"/>
</if>
<var name="${counter}">4</var>
<status status="PASS" start="2024-10-10T16:08:19.730608" elapsed="0.117909"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="Get Text" owner="AppiumLibrary">
<var>${textName}</var>
<arg>${pageDetailUser}/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="NOT RUN" start="2024-10-10T16:08:19.849516" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${textName}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:19.849516" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:19.849516" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="Get Text" owner="AppiumLibrary">
<var>${textJabatan}</var>
<arg>${pageDetailUser}/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="NOT RUN" start="2024-10-10T16:08:19.850512" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${textJabatan}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:19.850512" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:19.849516" elapsed="0.000996"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="Get Text" owner="AppiumLibrary">
<var>${textNoTelp}</var>
<arg>${pageDetailUser}/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="NOT RUN" start="2024-10-10T16:08:19.850512" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${textNoTelp}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:19.850512" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:19.850512" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="Get Text" owner="AppiumLibrary">
<var>${textEmail}</var>
<arg>${pageDetailUser}/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="NOT RUN" start="2024-10-10T16:08:19.851509" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${email}</arg>
<arg>${textEmail}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:19.851509" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:19.851509" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Element Should Be Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:08:19.960428" level="INFO">xpath criteria: //androidx.compose.ui.platform.ComposeView/android.view.View/android.view.View</msg>
<arg>${pageDetailUser}</arg>
<doc>Verifies that element identified with locator is visible.</doc>
<status status="PASS" start="2024-10-10T16:08:19.852505" elapsed="0.107923"/>
</kw>
<status status="PASS" start="2024-10-10T16:08:19.851509" elapsed="0.108919"/>
</branch>
<status status="PASS" start="2024-10-10T16:08:19.849516" elapsed="0.110912"/>
</if>
<var name="${counter}">5</var>
<status status="PASS" start="2024-10-10T16:08:19.849516" elapsed="0.110912"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${counter}' == '1'">
<kw name="Get Text" owner="AppiumLibrary">
<var>${textName}</var>
<arg>${pageDetailUser}/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="NOT RUN" start="2024-10-10T16:08:19.961426" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${nameUserManagement}</arg>
<arg>${textName}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:19.962422" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:19.961426" elapsed="0.000996"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '2'">
<kw name="Get Text" owner="AppiumLibrary">
<var>${textJabatan}</var>
<arg>${pageDetailUser}/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="NOT RUN" start="2024-10-10T16:08:19.963421" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${jabatan}</arg>
<arg>${textJabatan}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:19.963421" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:19.962422" elapsed="0.000999"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '4'">
<kw name="Get Text" owner="AppiumLibrary">
<var>${textNoTelp}</var>
<arg>${pageDetailUser}/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="NOT RUN" start="2024-10-10T16:08:19.963421" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${noTelp}</arg>
<arg>${textNoTelp}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:19.963421" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:19.963421" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${counter}' == '6'">
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:08:20.081425" level="INFO">Element 'xpath=//androidx.compose.ui.platform.ComposeView/android.view.View/android.view.View/android.widget.TextView[6]' text is 'asd!!!######@gmail.com' </msg>
<msg time="2024-10-10T16:08:20.081425" level="INFO">xpath criteria: //androidx.compose.ui.platform.ComposeView/android.view.View/android.view.View/android.widget.TextView[6]</msg>
<msg time="2024-10-10T16:08:20.081425" level="INFO">${textEmail} = asd!!!######@gmail.com</msg>
<var>${textEmail}</var>
<arg>${pageDetailUser}/android.widget.TextView[${counter}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-10-10T16:08:19.964454" elapsed="0.116971"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${email}</arg>
<arg>${textEmail}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-10-10T16:08:20.082424" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-10-10T16:08:19.963421" elapsed="0.119003"/>
</branch>
<branch type="ELSE">
<kw name="Element Should Be Visible" owner="AppiumLibrary">
<arg>${pageDetailUser}</arg>
<doc>Verifies that element identified with locator is visible.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:20.082424" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:20.082424" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-10-10T16:08:19.961426" elapsed="0.120998"/>
</if>
<var name="${counter}">6</var>
<status status="PASS" start="2024-10-10T16:08:19.961426" elapsed="0.120998"/>
</iter>
<var>${counter}</var>
<value>1</value>
<value>7</value>
<status status="PASS" start="2024-10-10T16:08:18.879642" elapsed="1.202782"/>
</for>
<status status="PASS" start="2024-10-10T16:08:18.879642" elapsed="1.202782"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>N/A</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:20.082424" elapsed="0.000996"/>
</kw>
<status status="NOT RUN" start="2024-10-10T16:08:20.082424" elapsed="0.000996"/>
</branch>
<status status="PASS" start="2024-10-10T16:08:18.879642" elapsed="1.203778"/>
</if>
<status status="PASS" start="2024-10-10T16:08:13.340444" elapsed="6.742976"/>
</kw>
<status status="PASS" start="2024-10-10T16:08:05.049261" elapsed="15.034159"/>
</kw>
<kw name="Close App" owner="openApp" type="TEARDOWN">
<kw name="Close Application" owner="AppiumLibrary">
<doc>Closes the current application and also close webdriver session.</doc>
<status status="PASS" start="2024-10-10T16:08:20.084383" elapsed="0.463570"/>
</kw>
<status status="PASS" start="2024-10-10T16:08:20.084383" elapsed="0.463570"/>
</kw>
<doc>This scenario test User access User Management (Site/PIC) detail page and verify detail user</doc>
<tag>1000s</tag>
<tag>test</tag>
<tag>user management</tag>
<status status="PASS" start="2024-10-10T16:07:58.109577" elapsed="22.439374"/>
</test>
<test id="s1-t13" name="Test User can Deteled User Management Project" line="70">
<kw name="Open app Dev Project" owner="openApp" type="SETUP">
<kw name="Open Application" owner="AppiumLibrary">
<arg>http://127.0.0.1:4723</arg>
<arg>platformName=${platformName}</arg>
<arg>deviceName=${udid}</arg>
<arg>appPackage=${appPackage}</arg>
<arg>appActivity=${appActivity}</arg>
<arg>automationName=UiAutomator2</arg>
<doc>Opens a new application to given Appium server.
Capabilities of appium server, Android and iOS,
Please check https://appium.io/docs/en/2.1/cli/args/
| *Option*            | *Man.* | *Description*     |
| remote_url          | Yes    | Appium server url |
| alias               | no     | alias             |
| strict_ssl          | No     | allows you to send commands to an invalid certificate host like a self-signed one. |</doc>
<status status="PASS" start="2024-10-10T16:08:20.551073" elapsed="7.306514"/>
</kw>
<status status="PASS" start="2024-10-10T16:08:20.551073" elapsed="7.306514"/>
</kw>
<kw name="User Delete User Management" owner="userManagement">
<kw name="Given User create User Management" owner="userManagement">
<kw name="Given user go to User Management page" owner="userManagementPage">
<kw name="User Login" owner="loginPage">
<kw name="Given user input no handphone" owner="loginPage">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:08:29.912979" level="INFO">xpath criteria: //android.widget.TextView[@text="Login"]</msg>
<arg>${titleLogin}</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-10-10T16:08:27.862572" elapsed="2.050407"/>
</kw>
<kw name="Input Text" owner="AppiumLibrary">
<msg time="2024-10-10T16:08:29.916968" level="INFO">Typing text '088210068283' into text field 'xpath=//android.widget.EditText[1]'</msg>
<msg time="2024-10-10T16:08:30.080835" level="INFO">xpath criteria: //android.widget.EditText[1]</msg>
<arg>${inputNoHandphone}</arg>
<arg>${noHandphone}</arg>
<doc>Types the given `text` into text field identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:08:29.912979" elapsed="0.167856"/>
</kw>
<arg>${akunOP}</arg>
<status status="PASS" start="2024-10-10T16:08:27.861575" elapsed="2.219260"/>
</kw>
<kw name="When user input password" owner="loginPage">
<kw name="Input Password" owner="AppiumLibrary">
<msg time="2024-10-10T16:08:30.084856" level="INFO">Typing password into text field 'xpath=//android.widget.EditText[2]'</msg>
<msg time="2024-10-10T16:08:30.479454" level="INFO">xpath criteria: //android.widget.EditText[2]</msg>
<arg>${inputPassword}</arg>
<arg>${password}</arg>
<doc>Types the given password into text field identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:08:30.081865" elapsed="0.397589"/>
</kw>
<arg>${passwordProject}</arg>
<status status="PASS" start="2024-10-10T16:08:30.080835" elapsed="0.399618"/>
</kw>
<kw name="Then click button masuk" owner="loginPage">
<kw name="Click Element" owner="AppiumLibrary">
<msg time="2024-10-10T16:08:30.485439" level="INFO">Clicking element 'xpath=//android.view.View/android.view.View[2]'.</msg>
<msg time="2024-10-10T16:08:30.873509" level="INFO">xpath criteria: //android.view.View/android.view.View[2]</msg>
<arg>${buttonMasuk}</arg>
<doc>Click element identified by `locator`.</doc>
<status status="PASS" start="2024-10-10T16:08:30.480453" elapsed="0.393056"/>
</kw>
<status status="PASS" start="2024-10-10T16:08:30.480453" elapsed="0.393056"/>
</kw>
<kw name="And home Project" owner="loginPage">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-10-10T16:08:40.995783" level="INFO">&lt;?xml version='1.0' encoding='UTF-8' standalone='yes' ?&gt;
&lt;hierarchy index="0" class="hierarchy" rotation="0" width="1080" height="2328"&gt;
  &lt;android.widget.FrameLayout index="0" package="com.seribusaudara.quotation.dev" class="android.widget.FrameLayout" text="" checkable="false" checked="false" clickable="false" enabled="true" focusable="false" focused="false" long-clickable="false" password="false" scrollable="false" selected="false" bounds="[120,1128][960,1416]" displayed="true"&gt;
    &lt;android.widget.FrameLayout index="0" package="com.seribusaudara.quotation.dev" class="android.widget.FrameLayout" text="" checkable="false" checked="false" clickable="false" enabled="true" focusable="false" focused="false" long-clickable="false" password="false" scrollable="false" selected="false" bounds="[120,1128][960,1416]" displayed="true"&gt;
      &lt;android.widget.FrameLayout index="0" package="com.seribusaudara.quotation.dev" class="android.widget.FrameLayout" text="" resource-id="android:id/content" checkable="false" checked="false" clickable="false" enabled="true" focusable="false" focused="false" long-clickable="false" password="false" scrollable="false" selected="false" bounds="[120,1128][960,1416]" displayed="true"&gt;
        &lt;android.view.ViewGroup index="0" package="com.seribusaudara.quotation.dev" class="android.view.ViewGroup" text="" checkable="false" checked="false" clickable="false" enabled="true" focusable="false" focused="false" long-clickable="false" password="false" scrollable="false" selected="false" bounds="[120,1128][960,1416]" displayed="true"&gt;
          &lt;android.view.View index="0" package="com.seribusaudara.quotation.dev" class="android.view.View" text="" checkable="false" checked="false" clickable="false" enabled="true" focusable="false" focused="false" long-clickable="false" password="false" scrollable="false" selected="false" bounds="[120,1128][960,1416]" displayed="true"&gt;
            &lt;android.view.View index="0" package="com.seribusaudara.quotation.dev" class="android.view.View" text="" checkable="false" checked="false" clickable="false" enabled="true" focusable="false" focused="false" long-clickable="false" password="false" scrollable="false" selected="false" bounds="[120,1128][960,1416]" displayed="true"&gt;
              &lt;android.view.View index="0" package="com.seribusaudara.quotation.dev" class="android.view.View" text="" checkable="false" checked="false" clickable="false" enabled="true" focusable="false" focused="false" long-clickable="false" password="false" scrollable="false" selected="false" bounds="[120,1128][960,1416]" displayed="true"&gt;
                &lt;android.view.View index="0" package="com.seribusaudara.quotation.dev" class="android.view.View" text="" checkable="false" checked="false" clickable="false" enabled="true" focusable="false" focused="false" long-clickable="false" password="false" scrollable="false" selected="false" bounds="[396,1128][684,1416]" displayed="true"&gt;
                  &lt;android.widget.ProgressBar index="0" package="com.seribusaudara.quotation.dev" class="android.widget.ProgressBar" text="" checkable="false" checked="false" clickable="false" enabled="true" focusable="false" focused="false" long-clickable="false" password="false" scrollable="false" selected="false" bounds="[444,1176][636,1368]" displayed="true" /&gt;
                &lt;/android.view.View&gt;
              &lt;/android.view.View&gt;
            &lt;/android.view.View&gt;
          &lt;/android.view.View&gt;
        &lt;/android.view.ViewGroup&gt;
      &lt;/android.widget.FrameLayout&gt;
    &lt;/android.widget.FrameLayout&gt;
  &lt;/android.widget.FrameLayout&gt;
&lt;/hierarchy&gt;</msg>
<kw name="Capture Page Screenshot" owner="AppiumLibrary">
<msg time="2024-10-10T16:08:41.377764" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;img src="data:image/png;base64, " width="800px"&gt;</msg>
<doc>Takes a screenshot of the current page and embeds it into the log.</doc>
<status status="PASS" start="2024-10-10T16:08:40.996780" elapsed="0.382978"/>
</kw>
<msg time="2024-10-10T16:08:41.380755" level="FAIL">Element locator 'accessibility_id=Icon Projects' did not match any elements after 10 seconds</msg>
<arg>accessibility_id=Icon Projects</arg>
<arg>timeout=10s</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="FAIL" start="2024-10-10T16:08:30.873509" elapsed="10.507246">Element locator 'accessibility_id=Icon Projects' did not match any elements after 10 seconds</status>
</kw>
<kw name="Element Should Be Visible" owner="AppiumLibrary">
<arg>accessibility_id=Icon Projects</arg>
<doc>Verifies that element identified with locator is visible.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:41.381752" elapsed="0.000000"/>
</kw>
<kw name="Element Should Be Visible" owner="AppiumLibrary">
<arg>accessibility_id=Notification</arg>
<doc>Verifies that element identified with locator is visible.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:41.381752" elapsed="0.000000"/>
</kw>
<kw name="Element Should Be Visible" owner="AppiumLibrary">
<arg>accessibility_id=Icon Search</arg>
<doc>Verifies that element identified with locator is visible.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:41.381752" elapsed="0.000000"/>
</kw>
<status status="FAIL" start="2024-10-10T16:08:30.873509" elapsed="10.508243">Element locator 'accessibility_id=Icon Projects' did not match any elements after 10 seconds</status>
</kw>
<status status="FAIL" start="2024-10-10T16:08:27.860579" elapsed="13.521173">Element locator 'accessibility_id=Icon Projects' did not match any elements after 10 seconds</status>
</kw>
<kw name="Loc Parent View" owner="generalFunction">
<var>${loc}</var>
<arg>User Management</arg>
<status status="NOT RUN" start="2024-10-10T16:08:41.381752" elapsed="0.000998"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<arg>${loc}</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:41.382750" elapsed="0.000000"/>
</kw>
<kw name="Click Element" owner="AppiumLibrary">
<arg>${loc}</arg>
<doc>Click element identified by `locator`.</doc>
<status status="NOT RUN" start="2024-10-10T16:08:41.382750" elapsed="0.000000"/>
</kw>
<status status="FAIL" start="2024-10-10T16:08:27.859579" elapsed="13.523171">Element locator 'accessibility_id=Icon Projects' did not match any elements after 10 seconds</status>
</kw>
<kw name="And Get Detail Text User Management" owner="userManagementPage">
<status status="NOT RUN" start="2024-10-10T16:08:41.382750" elapsed="0.000000"/>
</kw>
<kw name="When user add user management" owner="userManagementPage">
<status status="NOT RUN" start="2024-10-10T16:08:41.383747" elapsed="0.000000"/>
</kw>
<kw name="Then user input Nama user management" owner="userManagementPage">
<status status="NOT RUN" start="2024-10-10T16:08:41.383747" elapsed="0.000000"/>
</kw>
<kw name="And user input text (EditText)" owner="userManagementPage">
<arg>${randomStr}</arg>
<arg>Masukan jabatan user</arg>
<status status="NOT RUN" start="2024-10-10T16:08:41.383747" elapsed="0.000000"/>
</kw>
<kw name="And user input text (EditText)" owner="userManagementPage">
<arg>${randomEmail}</arg>
<arg>Masukkan email user</arg>
<status status="NOT RUN" start="2024-10-10T16:08:41.383747" elapsed="0.000000"/>
</kw>
<kw name="And user input text (EditText)" owner="userManagementPage">
<arg>${randNumber}</arg>
<arg>08xxxxxxxxxx</arg>
<status status="NOT RUN" start="2024-10-10T16:08:41.383747" elapsed="0.000997"/>
</kw>
<kw name="And user input text (EditText)" owner="userManagementPage">
<arg>${passwordSite}</arg>
<arg>Masukkan password</arg>
<status status="NOT RUN" start="2024-10-10T16:08:41.384744" elapsed="0.000000"/>
</kw>
<kw name="And user input konfirmasi password" owner="userManagementPage">
<arg>${passwordSite}</arg>
<status status="NOT RUN" start="2024-10-10T16:08:41.384744" elapsed="0.000000"/>
</kw>
<kw name="And verify password" owner="userManagementPage">
<arg>Password sesuai</arg>
<status status="NOT RUN" start="2024-10-10T16:08:41.384744" elapsed="0.000000"/>
</kw>
<kw name="And user click button (parent view)" owner="generalFunction">
<arg>Tambah</arg>
<status status="NOT RUN" start="2024-10-10T16:08:41.384744" elapsed="0.000000"/>
</kw>
<kw name="And click alert" owner="userManagementPage">
<arg>Ya</arg>
<status status="NOT RUN" start="2024-10-10T16:08:41.385741" elapsed="0.000000"/>
</kw>
<status status="FAIL" start="2024-10-10T16:08:27.859579" elapsed="13.526162">Element locator 'accessibility_id=Icon Projects' did not match any elements after 10 seconds</status>
</kw>
<kw name="And page User Management" owner="userManagementPage">
<status status="NOT RUN" start="2024-10-10T16:08:41.385741" elapsed="0.000000"/>
</kw>
<kw name="And Scroll elementss" owner="userManagementPage">
<status status="NOT RUN" start="2024-10-10T16:08:41.385741" elapsed="0.000998"/>
</kw>
<kw name="Then Alert Delete User Management" owner="userManagementPage">
<arg>Ya</arg>
<status status="NOT RUN" start="2024-10-10T16:08:41.386739" elapsed="0.000000"/>
</kw>
<status status="FAIL" start="2024-10-10T16:08:27.858582" elapsed="13.528157">Element locator 'accessibility_id=Icon Projects' did not match any elements after 10 seconds</status>
</kw>
<kw name="Close App" owner="openApp" type="TEARDOWN">
<kw name="Close Application" owner="AppiumLibrary">
<doc>Closes the current application and also close webdriver session.</doc>
<status status="PASS" start="2024-10-10T16:08:41.387737" elapsed="0.454759"/>
</kw>
<status status="PASS" start="2024-10-10T16:08:41.387737" elapsed="0.454759"/>
</kw>
<doc>This scenario test OP can delete User Management (Site/PIC) if project aktif 0</doc>
<tag>1000s</tag>
<tag>test</tag>
<tag>user management</tag>
<status status="FAIL" start="2024-10-10T16:08:20.549640" elapsed="21.292856">Element locator 'accessibility_id=Icon Projects' did not match any elements after 10 seconds</status>
</test>
<doc>Test Case User Management Flow</doc>
<status status="FAIL" start="2024-10-10T16:02:29.198747" elapsed="372.645870"/>
</suite>
<statistics>
<total>
<stat pass="11" fail="2" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="11" fail="2" skip="0">1000s</stat>
<stat pass="11" fail="2" skip="0">test</stat>
<stat pass="11" fail="2" skip="0">user management</stat>
</tag>
<suite>
<stat pass="11" fail="2" skip="0" id="s1" name="test UserManagement">test UserManagement</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
